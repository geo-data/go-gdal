/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ../include/gdal.i

package gdal

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _goslice_ swig_type_34;
typedef _goslice_ swig_type_35;
typedef _goslice_ swig_type_36;
typedef _goslice_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef _gostring_ swig_type_43;
typedef _gostring_ swig_type_44;
typedef _gostring_ swig_type_45;
typedef _gostring_ swig_type_46;
typedef _gostring_ swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _goslice_ swig_type_50;
typedef _goslice_ swig_type_51;
typedef _gostring_ swig_type_52;
typedef _gostring_ swig_type_53;
typedef _goslice_ swig_type_54;
typedef _goslice_ swig_type_55;
typedef _goslice_ swig_type_56;
typedef _goslice_ swig_type_57;
typedef _goslice_ swig_type_58;
typedef _goslice_ swig_type_59;
typedef _goslice_ swig_type_60;
typedef _goslice_ swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef _gostring_ swig_type_65;
typedef _goslice_ swig_type_66;
typedef _goslice_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef void* swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef _gostring_ swig_type_74;
typedef _gostring_ swig_type_75;
typedef _gostring_ swig_type_76;
typedef _goslice_ swig_type_77;
typedef _goslice_ swig_type_78;
typedef _gostring_ swig_type_79;
typedef _gostring_ swig_type_80;
typedef _gostring_ swig_type_81;
typedef _gostring_ swig_type_82;
typedef _gostring_ swig_type_83;
typedef _gostring_ swig_type_84;
typedef _gostring_ swig_type_85;
typedef _gostring_ swig_type_86;
typedef _gostring_ swig_type_87;
typedef _gostring_ swig_type_88;
typedef _gostring_ swig_type_89;
typedef _gostring_ swig_type_90;
typedef _gostring_ swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
extern void _wrap_Swig_free_gdal_a300ce886cc7d02a(uintptr_t arg1);

// "gdal.h" is needed to declare GDALProgressFunc.
#include "gdal.h"

// "cpl_string.h" is needed to declare CSLDestroy.
#include "cpl_string.h"

// We need to link against GDAL when building the Go module.
#cgo LDFLAGS: -lgdal

extern swig_type_1 _wrap_MajorObject_GetDescription_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_MajorObject_SetDescription_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_2 arg2);
extern swig_voidp _wrap_MajorObject_GetMetadataDomainList_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_voidp _wrap_MajorObject_GetMetadata_Dict_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_3 arg2);
extern swig_voidp _wrap_MajorObject_GetMetadata_List_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_4 arg2);
extern swig_intgo _wrap_MajorObject_SetMetadata__SWIG_0_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_type_5 arg3);
extern swig_intgo _wrap_MajorObject_SetMetadata__SWIG_1_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_6 arg2, swig_type_7 arg3);
extern swig_type_8 _wrap_MajorObject_GetMetadataItem_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_9 arg2, swig_type_10 arg3);
extern swig_intgo _wrap_MajorObject_SetMetadataItem_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_11 arg2, swig_type_12 arg3, swig_type_13 arg4);
extern swig_type_14 _wrap_Driver_ShortName_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_15 _wrap_Driver_LongName_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_16 _wrap_Driver_HelpTopic_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Driver_Create_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_17 arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_voidp arg7);
extern uintptr_t _wrap_Driver_CreateCopy_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_18 arg2, uintptr_t arg3, swig_intgo arg4, swig_voidp arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_Driver_Delete_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_19 arg2);
extern swig_intgo _wrap_Driver_Rename_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_20 arg2, swig_type_21 arg3);
extern swig_intgo _wrap_Driver_CopyFiles_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_22 arg2, swig_type_23 arg3);
extern swig_intgo _wrap_Driver_Register_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_Driver_Deregister_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_ColorEntry_c1_set_gdal_a300ce886cc7d02a(uintptr_t arg1, short arg2);
extern short _wrap_ColorEntry_c1_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_ColorEntry_c2_set_gdal_a300ce886cc7d02a(uintptr_t arg1, short arg2);
extern short _wrap_ColorEntry_c2_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_ColorEntry_c3_set_gdal_a300ce886cc7d02a(uintptr_t arg1, short arg2);
extern short _wrap_ColorEntry_c3_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_ColorEntry_c4_set_gdal_a300ce886cc7d02a(uintptr_t arg1, short arg2);
extern short _wrap_ColorEntry_c4_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_new_ColorEntry_gdal_a300ce886cc7d02a(void);
extern void _wrap_delete_ColorEntry_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_GCPX_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GCP_GCPX_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_GCPY_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GCP_GCPY_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_GCPZ_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GCP_GCPZ_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_GCPPixel_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GCP_GCPPixel_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_GCPLine_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GCP_GCPLine_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_Info_set_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_24 arg2);
extern swig_type_25 _wrap_GCP_Info_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GCP_Id_set_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_26 arg2);
extern swig_type_27 _wrap_GCP_Id_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_new_GCP_gdal_a300ce886cc7d02a(intgo _swig_args, double arg1, double arg2, double arg3, double arg4, double arg5, swig_type_28 arg6, swig_type_29 arg7);
extern void _wrap_delete_GCP_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern double _wrap_GDAL_GCP_GCPX_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_GCPX_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GDAL_GCP_GCPY_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_GCPY_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GDAL_GCP_GCPZ_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_GCPZ_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GDAL_GCP_GCPPixel_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_GCPPixel_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern double _wrap_GDAL_GCP_GCPLine_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_GCPLine_set_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern swig_type_30 _wrap_GDAL_GCP_Info_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_Info_set_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_31 arg2);
extern swig_type_32 _wrap_GDAL_GCP_Id_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_GDAL_GCP_Id_set_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_33 arg2);
extern swig_intgo _wrap_GCPsToGeoTransform_gdal_a300ce886cc7d02a(intgo _swig_args, swig_intgo arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4);
extern void _wrap_delete_AsyncReader_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_AsyncReader_GetNextUpdatedRegion_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2, swig_type_34 arg3, swig_type_35 arg4, swig_type_36 arg5, swig_type_37 arg6);
extern swig_intgo _wrap_AsyncReader_LockBuffer_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern void _wrap_AsyncReader_UnlockBuffer_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_RasterXSize_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_RasterYSize_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_RasterCount_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_delete_Dataset_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_Dataset_Close_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Dataset_GetDriver_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Dataset_GetRasterBand_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_type_38 _wrap_Dataset_GetProjection_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_39 _wrap_Dataset_GetProjectionRef_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_SetProjection_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_40 arg2);
extern void _wrap_Dataset_GetGeoTransform_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_Dataset_SetGeoTransform_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_Dataset_BuildOverviews_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_41 arg2, swig_intgo arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Dataset_GetGCPCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_42 _wrap_Dataset_GetGCPProjection_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_Dataset_GetGCPs_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, uintptr_t arg3);
extern swig_intgo _wrap_Dataset_SetGCPs_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, swig_type_43 arg4);
extern void _wrap_Dataset_FlushCache_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_AddBand_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_intgo _wrap_Dataset_CreateMaskBand_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_voidp _wrap_Dataset_GetFileList_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Dataset_CreateLayer_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_44 arg2, uintptr_t arg3, swig_intgo arg4, swig_voidp arg5);
extern uintptr_t _wrap_Dataset_CopyLayer_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_type_45 arg3, swig_voidp arg4);
extern swig_intgo _wrap_Dataset_DeleteLayer_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Dataset_GetLayerCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Dataset_GetLayerByIndex_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Dataset_GetLayerByName_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_46 arg2);
extern _Bool _wrap_Dataset_TestCapability_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_47 arg2);
extern uintptr_t _wrap_Dataset_ExecuteSQL_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_48 arg2, uintptr_t arg3, swig_type_49 arg4);
extern void _wrap_Dataset_ReleaseResultSet_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Dataset_GetStyleTable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_Dataset_SetStyleTable_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Dataset_StartTransaction_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Dataset_CommitTransaction_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Dataset_RollbackTransaction_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_XSize_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_YSize_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_DataType_get_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Band_GetDataset_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_GetBand_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_Band_GetBlockSize_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_50 arg2, swig_type_51 arg3);
extern swig_intgo _wrap_Band_GetColorInterpretation_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_GetRasterColorInterpretation_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetColorInterpretation_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Band_SetRasterColorInterpretation_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Band_GetNoDataValue_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern swig_intgo _wrap_Band_SetNoDataValue_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern swig_intgo _wrap_Band_DeleteNoDataValue_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_52 _wrap_Band_GetUnitType_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetUnitType_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_53 arg2);
extern swig_voidp _wrap_Band_GetRasterCategoryNames_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetRasterCategoryNames_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2);
extern void _wrap_Band_GetMinimum_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_Band_GetMaximum_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_Band_GetOffset_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_Band_GetScale_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern swig_intgo _wrap_Band_SetOffset_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern swig_intgo _wrap_Band_SetScale_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern swig_intgo _wrap_Band_GetStatistics_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_type_54 arg4, swig_type_55 arg5, swig_type_56 arg6, swig_type_57 arg7);
extern swig_intgo _wrap_Band_ComputeStatistics_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, _Bool arg2, swig_type_58 arg3, swig_type_59 arg4, swig_type_60 arg5, swig_type_61 arg6, GDALProgressFunc arg7, swig_voidp arg8);
extern swig_intgo _wrap_Band_SetStatistics_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2, double arg3, double arg4, double arg5);
extern swig_intgo _wrap_Band_GetOverviewCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Band_GetOverview_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Band_Checksum_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5);
extern void _wrap_Band_ComputeRasterMinMax_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_Band_ComputeBandStats_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern swig_intgo _wrap_Band_Fill_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, double arg2, double arg3);
extern void _wrap_Band_FlushCache_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Band_GetRasterColorTable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_Band_GetColorTable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetRasterColorTable_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Band_SetColorTable_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Band_GetDefaultRAT_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetDefaultRAT_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Band_GetMaskBand_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_GetMaskFlags_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_CreateMaskBand_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Band_GetHistogram_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, double arg2, double arg3, swig_intgo arg4, uintptr_t arg5, swig_intgo arg6, swig_intgo arg7, GDALProgressFunc arg8, swig_voidp arg9);
extern swig_intgo _wrap_Band_GetDefaultHistogram_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4, uintptr_t arg5, swig_intgo arg6, GDALProgressFunc arg7, swig_voidp arg8);
extern swig_intgo _wrap_Band_SetDefaultHistogram_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2, double arg3, swig_intgo arg4, uintptr_t arg5);
extern _Bool _wrap_Band_HasArbitraryOverviews_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_voidp _wrap_Band_GetCategoryNames_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Band_SetCategoryNames_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_voidp arg2);
extern uintptr_t _wrap_new_ColorTable_gdal_a300ce886cc7d02a(intgo _swig_args, swig_intgo arg1);
extern void _wrap_delete_ColorTable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_ColorTable_Clone_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_ColorTable_GetPaletteInterpretation_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_ColorTable_GetCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_ColorTable_GetColorEntry_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ColorTable_GetColorEntryAsRGB_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_ColorTable_SetColorEntry_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_ColorTable_CreateColorRamp_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_RasterAttributeTable_gdal_a300ce886cc7d02a(void);
extern void _wrap_delete_RasterAttributeTable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_RasterAttributeTable_Clone_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_RasterAttributeTable_GetColumnCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_62 _wrap_RasterAttributeTable_GetNameOfCol_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RasterAttributeTable_GetUsageOfCol_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RasterAttributeTable_GetTypeOfCol_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RasterAttributeTable_GetColOfUsage_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RasterAttributeTable_GetRowCount_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_63 _wrap_RasterAttributeTable_GetValueAsString_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_RasterAttributeTable_GetValueAsInt_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern double _wrap_RasterAttributeTable_GetValueAsDouble_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_RasterAttributeTable_SetValueAsString_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_type_64 arg4);
extern void _wrap_RasterAttributeTable_SetValueAsInt_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4);
extern void _wrap_RasterAttributeTable_SetValueAsDouble_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, double arg4);
extern void _wrap_RasterAttributeTable_SetRowCount_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RasterAttributeTable_CreateColumn_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_65 arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_RasterAttributeTable_GetLinearBinning_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_type_66 arg2, swig_type_67 arg3);
extern swig_intgo _wrap_RasterAttributeTable_SetLinearBinning_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2, double arg3);
extern swig_intgo _wrap_RasterAttributeTable_GetRowOfValue_gdal_a300ce886cc7d02a(uintptr_t arg1, double arg2);
extern swig_intgo _wrap_RasterAttributeTable_ChangesAreWrittenToFile_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern void _wrap_RasterAttributeTable_DumpReadable_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_TermProgress_nocb_gdal_a300ce886cc7d02a(intgo _swig_args, double arg1, swig_type_68 arg2, uintptr_t arg3);
extern swig_type_69 _wrap_TermProgress_gdal_a300ce886cc7d02a(void);
extern swig_intgo _wrap_ComputeMedianCutPCT_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_DitherRGB2PCT_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_ReprojectImage_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_type_70 arg3, swig_type_71 arg4, swig_intgo arg5, double arg6, double arg7, GDALProgressFunc arg8, swig_voidp arg9, swig_voidp arg10);
extern swig_intgo _wrap_ComputeProximity_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_voidp arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern swig_intgo _wrap_RasterizeLayer_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_intgo arg7, swig_voidp arg8, swig_voidp arg9, GDALProgressFunc arg10, swig_voidp arg11);
extern swig_intgo _wrap_Polygonize_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_voidp arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_FPolygonize_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_voidp arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_FillNodata_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, double arg3, swig_intgo arg4, swig_voidp arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern swig_intgo _wrap_SieveFilter_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_voidp arg6, GDALProgressFunc arg7, swig_voidp arg8);
extern swig_intgo _wrap_RegenerateOverviews_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, swig_type_72 arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_RegenerateOverview_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_type_73 arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern swig_intgo _wrap_ContourGenerate_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, double arg2, double arg3, swig_intgo arg4, swig_voidp arg5, swig_intgo arg6, double arg7, uintptr_t arg8, swig_intgo arg9, swig_intgo arg10, GDALProgressFunc arg11, swig_voidp arg12);
extern uintptr_t _wrap_AutoCreateWarpedVRT_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_type_74 arg2, swig_type_75 arg3, swig_intgo arg4, double arg5);
extern uintptr_t _wrap_CreatePansharpenedVRT_gdal_a300ce886cc7d02a(swig_type_76 arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_Transformer_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
extern void _wrap_delete_Transformer_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_Transformer_TransformPoint__SWIG_0_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_intgo _wrap_Transformer_TransformPoint__SWIG_1_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_intgo arg3, double arg4, double arg5, double arg6);
extern swig_intgo _wrap_Transformer_TransformPoints_gdal_a300ce886cc7d02a(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_voidp arg4, swig_voidp arg5, swig_voidp arg6, swig_voidp arg7);
extern swig_intgo _wrap_Transformer_TransformGeolocations_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, GDALProgressFunc arg5, swig_voidp arg6, swig_voidp arg7);
extern void _wrap_ApplyGeoTransform_gdal_a300ce886cc7d02a(swig_voidp arg1, double arg2, double arg3, swig_type_77 arg4, swig_type_78 arg5);
extern swig_intgo _wrap_InvGeoTransform_gdal_a300ce886cc7d02a(swig_voidp arg1, swig_voidp arg2);
extern swig_type_79 _wrap_VersionInfo_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_80 arg1);
extern void _wrap_AllRegister_gdal_a300ce886cc7d02a(void);
extern void _wrap_GDALDestroyDriverManager_gdal_a300ce886cc7d02a(void);
extern swig_intgo _wrap_GetCacheMax_gdal_a300ce886cc7d02a(void);
extern swig_intgo _wrap_GetCacheUsed_gdal_a300ce886cc7d02a(void);
extern void _wrap_SetCacheMax_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_intgo _wrap_GetDataTypeSize_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_intgo _wrap_DataTypeIsComplex_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_type_81 _wrap_GetDataTypeName_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_intgo _wrap_GetDataTypeByName_gdal_a300ce886cc7d02a(swig_type_82 arg1);
extern swig_type_83 _wrap_GetColorInterpretationName_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_type_84 _wrap_GetPaletteInterpretationName_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern swig_type_85 _wrap_DecToDMS_gdal_a300ce886cc7d02a(intgo _swig_args, double arg1, swig_type_86 arg2, swig_intgo arg3);
extern double _wrap_PackedDMSToDec_gdal_a300ce886cc7d02a(double arg1);
extern double _wrap_DecToPackedDMS_gdal_a300ce886cc7d02a(double arg1);
extern uintptr_t _wrap_ParseXMLString_gdal_a300ce886cc7d02a(swig_type_87 arg1);
extern swig_type_88 _wrap_SerializeXMLTree_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_89 _wrap_GetJPEG2000StructureAsString_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_90 arg1, swig_voidp arg2);
extern swig_intgo _wrap_GetDriverCount_gdal_a300ce886cc7d02a(void);
extern uintptr_t _wrap_GetDriverByName_gdal_a300ce886cc7d02a(swig_type_91 arg1);
extern uintptr_t _wrap_GetDriver_gdal_a300ce886cc7d02a(swig_intgo arg1);
extern uintptr_t _wrap_Open_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_92 arg1, swig_intgo arg2);
extern uintptr_t _wrap_OpenEx_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_93 arg1, swig_intgo arg2, swig_voidp arg3, swig_voidp arg4, swig_voidp arg5);
extern uintptr_t _wrap_OpenShared_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_94 arg1, swig_intgo arg2);
extern uintptr_t _wrap_IdentifyDriver_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_95 arg1, swig_voidp arg2);
extern swig_voidp _wrap_GeneralCmdLineProcessor_gdal_a300ce886cc7d02a(intgo _swig_args, swig_voidp arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_GDALInfoOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALInfoOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_type_96 _wrap_GDALInfo_gdal_a300ce886cc7d02a(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_GDALTranslateOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALTranslateOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_wrapper_GDALTranslate_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_97 arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_new_GDALWarpAppOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALWarpAppOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_wrapper_GDALWarpDestDS_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, uintptr_t arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern uintptr_t _wrap_wrapper_GDALWarpDestName_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_98 arg1, swig_intgo arg2, swig_voidp arg3, uintptr_t arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern uintptr_t _wrap_new_GDALVectorTranslateOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALVectorTranslateOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_wrapper_GDALVectorTranslateDestDS_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_wrapper_GDALVectorTranslateDestName_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_99 arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_new_GDALDEMProcessingOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALDEMProcessingOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_wrapper_GDALDEMProcessing_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_100 arg1, uintptr_t arg2, swig_type_101 arg3, swig_type_102 arg4, uintptr_t arg5, GDALProgressFunc arg6, swig_voidp arg7);
extern uintptr_t _wrap_new_GDALNearblackOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALNearblackOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_wrapper_GDALNearblackDestDS_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_wrapper_GDALNearblackDestName_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_103 arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_new_GDALGridOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALGridOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern uintptr_t _wrap_wrapper_GDALGrid_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_104 arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_new_GDALRasterizeOptions_gdal_a300ce886cc7d02a(swig_voidp arg1);
extern void _wrap_delete_GDALRasterizeOptions_gdal_a300ce886cc7d02a(uintptr_t arg1);
extern swig_intgo _wrap_wrapper_GDALRasterizeDestDS_gdal_a300ce886cc7d02a(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
extern uintptr_t _wrap_wrapper_GDALRasterizeDestName_gdal_a300ce886cc7d02a(intgo _swig_args, swig_type_105 arg1, uintptr_t arg2, uintptr_t arg3, GDALProgressFunc arg4, swig_voidp arg5);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/progress"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/cpl"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/ogr"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/osr"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p	uintptr
	n	int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
}

type SwigcptrMajorObject uintptr

func (p SwigcptrMajorObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMajorObject) SwigIsMajorObject() {
}

func (arg1 SwigcptrMajorObject) GetDescription() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MajorObject_GetDescription_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetDescription(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MajorObject_SetDescription_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrMajorObject) GetMetadataDomainList() (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_MajorObject_GetMetadataDomainList_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) GetMetadata_Dict(_swig_args ...interface{}) (_swig_ret *string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var swig_r *string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (*string)(C._wrap_MajorObject_GetMetadata_Dict_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrMajorObject) GetMetadata_List(_swig_args ...interface{}) (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var swig_r **C.char
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (**C.char)(C._wrap_MajorObject_GetMetadata_List_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 []string

	if swig_r != nil {
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetMetadata__SWIG_0(arg2 *string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_MajorObject_SetMetadata__SWIG_0_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrMajorObject) SetMetadata__SWIG_1(arg2 string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_MajorObject_SetMetadata__SWIG_1_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (p SwigcptrMajorObject) SetMetadata(a ...interface{}) (int, error) {
	argc := len(a)
	if argc >= 1 && argc <= 2 {
		if _, ok := a[0].(*string); !ok {
			goto check_1
		}
		switch argc {
		case 1:
			return p.SetMetadata__SWIG_0(a[0].(*string))
		case 2:
			return p.SetMetadata__SWIG_0(a[0].(*string), a[1])
		}
	}
check_1:
	if argc >= 1 && argc <= 2 {
		switch argc {
		case 1:
			return p.SetMetadata__SWIG_1(a[0].(string))
		case 2:
			return p.SetMetadata__SWIG_1(a[0].(string), a[1])
		}
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMajorObject) GetMetadataItem(arg2 string, _swig_args ...interface{}) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_MajorObject_GetMetadataItem_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetMetadataItem(arg2 string, arg3 string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_MajorObject_SetMetadataItem_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r, err

}

type MajorObject interface {
	Swigcptr() uintptr
	SwigIsMajorObject()
	GetDescription() (_swig_ret string, err error,

	)
	SetDescription(arg2 string) (err error)

	GetMetadataDomainList() (_swig_ret []string, err error,

	)
	GetMetadata_Dict(_swig_args ...interface{}) (_swig_ret *string, err error,

	)
	GetMetadata_List(_swig_args ...interface{}) (_swig_ret []string, err error,

	)
	SetMetadata(a ...interface{}) (int, error)

	GetMetadataItem(arg2 string, _swig_args ...interface{}) (_swig_ret string, err error,

	)
	SetMetadataItem(arg2 string, arg3 string, _swig_args ...interface{}) (_swig_ret int, err error,

	)
}

type SwigcptrDriver uintptr

func (p SwigcptrDriver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDriver) SwigIsDriver() {
}

func (arg1 SwigcptrDriver) GetShortName() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Driver_ShortName_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrDriver) GetLongName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Driver_LongName_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrDriver) GetHelpTopic() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Driver_HelpTopic_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrDriver) Create(arg2 string, arg3 int, arg4 int, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 int
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(int)
	}
	var arg6 int
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(int)
	}
	var arg7 []string
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].([]string)
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	var _swig_i_6 **C.char

	arg7_l := len(arg7)
	_swig_i_6_i := make([]*C.char, arg7_l+1)
	for i := 0; i < arg7_l; i++ {
		_swig_i_6_i[i] = C.CString(arg7[i])
		defer C.free(unsafe.Pointer(_swig_i_6_i[i]))
	}
	_swig_i_6_i[arg7_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_6 = &_swig_i_6_i[0]

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_Driver_Create_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_voidp(_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDriver) CreateCopy(arg2 string, arg3 Dataset, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 int
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(int)
	}
	var arg5 []string
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].([]string)
	}
	var arg6 progress.ProgressFunc
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 3 {
		arg7 = _swig_args[3].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_Driver_CreateCopy_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDriver) Delete(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Driver_Delete_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) Rename(arg2 string, arg3 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Driver_Rename_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) CopyFiles(arg2 string, arg3 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Driver_CopyFiles_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_22)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_23)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) Register() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Driver_Register_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDriver) Deregister() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Driver_Deregister_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (p SwigcptrDriver) SwigIsMajorObject() {
}

func (p SwigcptrDriver) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type Driver interface {
	Swigcptr() uintptr
	SwigIsDriver()
	GetShortName() (_swig_ret string, err error,

	)
	GetLongName() (_swig_ret string)
	GetHelpTopic() (_swig_ret string, err error,

	)
	Create(arg2 string, arg3 int, arg4 int, _swig_args ...interface{}) (_swig_ret Dataset, err error,

	)
	CreateCopy(arg2 string, arg3 Dataset, _swig_args ...interface{}) (_swig_ret Dataset, err error,

	)
	Delete(arg2 string) (_swig_ret int, err error,

	)
	Rename(arg2 string, arg3 string) (_swig_ret int, err error,

	)
	CopyFiles(arg2 string, arg3 string) (_swig_ret int, err error,

	)
	Register() (_swig_ret int, err error,

	)
	Deregister() (err error)

	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
}

type SwigcptrColorEntry uintptr

func (p SwigcptrColorEntry) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColorEntry) SwigIsColorEntry() {
}

func (arg1 SwigcptrColorEntry) SetC1(arg2 int16) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColorEntry_c1_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
	return
}

func (arg1 SwigcptrColorEntry) GetC1() (_swig_ret int16, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int16
	_swig_i_0 := arg1
	swig_r = (int16)(C._wrap_ColorEntry_c1_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrColorEntry) SetC2(arg2 int16) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColorEntry_c2_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
	return
}

func (arg1 SwigcptrColorEntry) GetC2() (_swig_ret int16, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int16
	_swig_i_0 := arg1
	swig_r = (int16)(C._wrap_ColorEntry_c2_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrColorEntry) SetC3(arg2 int16) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColorEntry_c3_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
	return
}

func (arg1 SwigcptrColorEntry) GetC3() (_swig_ret int16, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int16
	_swig_i_0 := arg1
	swig_r = (int16)(C._wrap_ColorEntry_c3_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrColorEntry) SetC4(arg2 int16) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ColorEntry_c4_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
	return
}

func (arg1 SwigcptrColorEntry) GetC4() (_swig_ret int16, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int16
	_swig_i_0 := arg1
	swig_r = (int16)(C._wrap_ColorEntry_c4_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func NewColorEntry() (_swig_ret ColorEntry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ColorEntry
	swig_r = (ColorEntry)(SwigcptrColorEntry(C._wrap_new_ColorEntry_gdal_a300ce886cc7d02a()))
	return swig_r, err

}

func DeleteColorEntry(arg1 ColorEntry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ColorEntry_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type ColorEntry interface {
	Swigcptr() uintptr
	SwigIsColorEntry()
	SetC1(arg2 int16) (err error)

	GetC1() (_swig_ret int16, err error,

	)
	SetC2(arg2 int16) (err error)

	GetC2() (_swig_ret int16, err error,

	)
	SetC3(arg2 int16) (err error)

	GetC3() (_swig_ret int16, err error,

	)
	SetC4(arg2 int16) (err error)

	GetC4() (_swig_ret int16, err error,

	)
}

type SwigcptrGCP uintptr

func (p SwigcptrGCP) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGCP) SwigIsGCP() {
}

func (arg1 SwigcptrGCP) SetGCPX(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_GCPX_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGCP) GetGCPX() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_GCP_GCPX_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGCP) SetGCPY(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_GCPY_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGCP) GetGCPY() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_GCP_GCPY_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGCP) SetGCPZ(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_GCPZ_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGCP) GetGCPZ() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_GCP_GCPZ_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGCP) SetGCPPixel(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_GCPPixel_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGCP) GetGCPPixel() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_GCP_GCPPixel_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGCP) SetGCPLine(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_GCPLine_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGCP) GetGCPLine() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_GCP_GCPLine_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGCP) SetInfo(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_Info_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrGCP) GetInfo() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GCP_Info_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGCP) SetId(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GCP_Id_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_26)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrGCP) GetId() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GCP_Id_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func NewGCP(_swig_args ...interface{}) (_swig_ret GCP, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 float64
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(float64)
	}
	var arg2 float64
	if len(_swig_args) > 1 {
		arg2 = _swig_args[1].(float64)
	}
	var arg3 float64
	if len(_swig_args) > 2 {
		arg3 = _swig_args[2].(float64)
	}
	var arg4 float64
	if len(_swig_args) > 3 {
		arg4 = _swig_args[3].(float64)
	}
	var arg5 float64
	if len(_swig_args) > 4 {
		arg5 = _swig_args[4].(float64)
	}
	var arg6 string
	if len(_swig_args) > 5 {
		arg6 = _swig_args[5].(string)
	}
	var arg7 string
	if len(_swig_args) > 6 {
		arg7 = _swig_args[6].(string)
	}
	var swig_r GCP
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (GCP)(SwigcptrGCP(C._wrap_new_GCP_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), *(*C.swig_type_28)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_29)(unsafe.Pointer(&_swig_i_6)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r, err

}

func DeleteGCP(arg1 GCP) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GCP_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GCP interface {
	Swigcptr() uintptr
	SwigIsGCP()
	SetGCPX(arg2 float64) (err error)

	GetGCPX() (_swig_ret float64, err error,

	)
	SetGCPY(arg2 float64) (err error)

	GetGCPY() (_swig_ret float64, err error,

	)
	SetGCPZ(arg2 float64) (err error)

	GetGCPZ() (_swig_ret float64, err error,

	)
	SetGCPPixel(arg2 float64) (err error)

	GetGCPPixel() (_swig_ret float64, err error,

	)
	SetGCPLine(arg2 float64) (err error)

	GetGCPLine() (_swig_ret float64, err error,

	)
	SetInfo(arg2 string) (err error)

	GetInfo() (_swig_ret string, err error,

	)
	SetId(arg2 string) (err error)

	GetId() (_swig_ret string, err error,

	)
}

func GDAL_GCP_GCPX_get(arg1 GCP) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_GDAL_GCP_GCPX_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func GDAL_GCP_GCPX_set(arg1 GCP, arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_GCPX_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func GDAL_GCP_GCPY_get(arg1 GCP) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_GDAL_GCP_GCPY_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func GDAL_GCP_GCPY_set(arg1 GCP, arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_GCPY_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func GDAL_GCP_GCPZ_get(arg1 GCP) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_GDAL_GCP_GCPZ_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func GDAL_GCP_GCPZ_set(arg1 GCP, arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_GCPZ_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func GDAL_GCP_GCPPixel_get(arg1 GCP) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_GDAL_GCP_GCPPixel_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func GDAL_GCP_GCPPixel_set(arg1 GCP, arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_GCPPixel_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func GDAL_GCP_GCPLine_get(arg1 GCP) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (float64)(C._wrap_GDAL_GCP_GCPLine_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func GDAL_GCP_GCPLine_set(arg1 GCP, arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_GCPLine_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func GDAL_GCP_Info_get(arg1 GCP) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_GDAL_GCP_Info_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GDAL_GCP_Info_set(arg1 GCP, arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_Info_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_31)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func GDAL_GCP_Id_get(arg1 GCP) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_GDAL_GCP_Id_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GDAL_GCP_Id_set(arg1 GCP, arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_GDAL_GCP_Id_set_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func GCPsToGeoTransform(arg1 int, arg2 GCP, arg3 []float64, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 int
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	var _swig_i_2 *C.double

	_swig_i_2 = (*C.double)(unsafe.Pointer(&arg3[0]))

	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_GCPsToGeoTransform_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r, err

}

type SwigcptrAsyncReader uintptr

func (p SwigcptrAsyncReader) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAsyncReader) SwigIsAsyncReader() {
}

func DeleteAsyncReader(arg1 AsyncReader) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_AsyncReader_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrAsyncReader) GetNextUpdatedRegion(arg2 float64, arg3 []int, arg4 []int, arg5 []int, arg6 []int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_AsyncReader_GetNextUpdatedRegion_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_36)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r, err

}

func (arg1 SwigcptrAsyncReader) LockBuffer(arg2 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_AsyncReader_LockBuffer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrAsyncReader) UnlockBuffer() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_AsyncReader_UnlockBuffer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type AsyncReader interface {
	Swigcptr() uintptr
	SwigIsAsyncReader()
	GetNextUpdatedRegion(arg2 float64, arg3 []int, arg4 []int, arg5 []int, arg6 []int) (_swig_ret int, err error,

	)
	LockBuffer(arg2 float64) (_swig_ret int, err error,

	)
	UnlockBuffer() (err error)
}

type SwigcptrDataset uintptr

func (p SwigcptrDataset) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDataset) SwigIsDataset() {
}

func (arg1 SwigcptrDataset) GetRasterXSize() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_RasterXSize_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDataset) GetRasterYSize() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_RasterYSize_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDataset) GetRasterCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_RasterCount_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func DeleteDataset(arg1 Dataset) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Dataset_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDataset) Close() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Dataset_Close_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDataset) GetDriver() (_swig_ret Driver) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Driver
	_swig_i_0 := arg1
	swig_r = (Driver)(SwigcptrDriver(C._wrap_Dataset_GetDriver_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	var swig_r_1 Driver

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1
}

func (arg1 SwigcptrDataset) GetRasterBand(arg2 int) (_swig_ret Band) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Band
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Band)(SwigcptrBand(C._wrap_Dataset_GetRasterBand_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDataset) GetProjection() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Dataset_GetProjection_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrDataset) GetProjectionRef() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Dataset_GetProjectionRef_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrDataset) SetProjection(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Dataset_SetProjection_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDataset) wrap_GetGeoTransform(arg2 []float64) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	C._wrap_Dataset_GetGeoTransform_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrDataset) wrap_SetGeoTransform(arg2 []float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	swig_r = (int)(C._wrap_Dataset_SetGeoTransform_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) BuildOverviews(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var arg3 int
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(int)
	}
	var arg4 *int
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(*int)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 4 {
		arg6 = _swig_args[4].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Dataset_BuildOverviews_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_41)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDataset) GetGCPCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_GetGCPCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) GetGCPProjection() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Dataset_GetGCPProjection_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrDataset) GetGCPs(arg2 *int, arg3 GCP) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Dataset_GetGCPs_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2))
	return
}

func (arg1 SwigcptrDataset) SetGCPs(arg2 int, arg3 GCP, arg4 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Dataset_SetGCPs_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_43)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r, err

}

func (arg1 SwigcptrDataset) FlushCache() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Dataset_FlushCache_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDataset) AddBand(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 []string
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	swig_r = (int)(C._wrap_Dataset_AddBand_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) CreateMaskBand(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Dataset_CreateMaskBand_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) GetFileList() (_swig_ret []string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_Dataset_GetFileList_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1
}

func (arg1 SwigcptrDataset) CreateLayer(arg2 string, arg3 osr.SpatialReference, arg4 int, arg5 []string) (_swig_ret ogr.Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ogr.Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 uintptr

	if arg3 != nil {
		_swig_i_2 = arg3.Swigcptr()
	}

	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	swig_r = (ogr.Layer)(ogr.SwigcptrLayer(C._wrap_Dataset_CreateLayer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_44)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 ogr.Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataset) CopyLayer(arg2 ogr.Layer, arg3 string, _swig_args ...interface{}) (_swig_ret ogr.Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var swig_r ogr.Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	swig_r = (ogr.Layer)(ogr.SwigcptrLayer(C._wrap_Dataset_CopyLayer_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_45)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 ogr.Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataset) DeleteLayer(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Dataset_DeleteLayer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) GetLayerCount() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_GetLayerCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDataset) GetLayerByIndex(_swig_args ...interface{}) (_swig_ret ogr.Layer) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r ogr.Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ogr.Layer)(ogr.SwigcptrLayer(C._wrap_Dataset_GetLayerByIndex_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	var swig_r_1 ogr.Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1
}

func (arg1 SwigcptrDataset) GetLayerByName(arg2 string) (_swig_ret ogr.Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ogr.Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ogr.Layer)(ogr.SwigcptrLayer(C._wrap_Dataset_GetLayerByName_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_46)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 ogr.Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataset) TestCapability(arg2 string) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Dataset_TestCapability_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_47)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDataset) ExecuteSQL(arg2 string, _swig_args ...interface{}) (_swig_ret ogr.Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 ogr.Geometry
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(ogr.Geometry)
	}
	var arg4 string
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(string)
	}
	var swig_r ogr.Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (ogr.Layer)(ogr.SwigcptrLayer(C._wrap_Dataset_ExecuteSQL_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_48)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_49)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 ogr.Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataset) ReleaseResultSet(arg2 ogr.Layer) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Dataset_ReleaseResultSet_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrDataset) GetStyleTable() (_swig_ret ogr.StyleTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ogr.StyleTable
	_swig_i_0 := arg1
	swig_r = (ogr.StyleTable)(ogr.SwigcptrStyleTable(C._wrap_Dataset_GetStyleTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrDataset) SetStyleTable(arg2 ogr.StyleTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Dataset_SetStyleTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrDataset) StartTransaction(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Dataset_StartTransaction_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) CommitTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_CommitTransaction_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataset) RollbackTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Dataset_RollbackTransaction_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (p SwigcptrDataset) SwigIsMajorObject() {
}

func (p SwigcptrDataset) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type Dataset interface {
	Swigcptr() uintptr
	SwigIsDataset()
	GetRasterXSize() (_swig_ret int)
	GetRasterYSize() (_swig_ret int)
	GetRasterCount() (_swig_ret int, err error,

	)
	Close() (err error)

	GetDriver() (_swig_ret Driver)
	GetRasterBand(arg2 int) (_swig_ret Band)
	GetProjection() (_swig_ret string, err error,

	)
	GetProjectionRef() (_swig_ret string, err error,

	)
	SetProjection(arg2 string) (_swig_ret int, err error,

	)

	BuildOverviews(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	GetGCPCount() (_swig_ret int, err error,

	)
	GetGCPProjection() (_swig_ret string, err error,

	)
	GetGCPs(arg2 *int, arg3 GCP) (err error)

	SetGCPs(arg2 int, arg3 GCP, arg4 string) (_swig_ret int, err error,

	)
	FlushCache() (err error)

	AddBand(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	CreateMaskBand(arg2 int) (_swig_ret int, err error,

	)
	GetFileList() (_swig_ret []string)
	CreateLayer(arg2 string, arg3 osr.SpatialReference, arg4 int, arg5 []string) (_swig_ret ogr.Layer, err error,

	)
	CopyLayer(arg2 ogr.Layer, arg3 string, _swig_args ...interface{}) (_swig_ret ogr.Layer, err error,

	)
	DeleteLayer(arg2 int) (_swig_ret int, err error,

	)
	GetLayerCount() (_swig_ret int)
	GetLayerByIndex(_swig_args ...interface{}) (_swig_ret ogr.Layer)
	GetLayerByName(arg2 string) (_swig_ret ogr.Layer, err error,

	)
	TestCapability(arg2 string) (_swig_ret bool, err error,

	)
	ExecuteSQL(arg2 string, _swig_args ...interface{}) (_swig_ret ogr.Layer, err error,

	)
	ReleaseResultSet(arg2 ogr.Layer) (err error)

	GetStyleTable() (_swig_ret ogr.StyleTable, err error,

	)
	SetStyleTable(arg2 ogr.StyleTable) (err error)

	StartTransaction(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	CommitTransaction() (_swig_ret int, err error,

	)
	RollbackTransaction() (_swig_ret int, err error,

	)
	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
	GetGeoTransform() (gt []float64)
	SetGeoTransform(gt [6]float64) (err error)
}

type SwigcptrBand uintptr

func (p SwigcptrBand) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBand) SwigIsBand() {
}

func (arg1 SwigcptrBand) GetXSize() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_XSize_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetYSize() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_YSize_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetDataType() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_DataType_get_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBand) GetDataset() (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Dataset
	_swig_i_0 := arg1
	swig_r = (Dataset)(SwigcptrDataset(C._wrap_Band_GetDataset_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrBand) GetBand() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_GetBand_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetBlockSize(arg2 []int, arg3 []int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetBlockSize_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_51)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return
}

func (arg1 SwigcptrBand) GetColorInterpretation() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_GetColorInterpretation_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetRasterColorInterpretation() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_GetRasterColorInterpretation_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetColorInterpretation(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetColorInterpretation_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetRasterColorInterpretation(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetRasterColorInterpretation_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetNoDataValue(arg2 *float64, arg3 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetNoDataValue_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) SetNoDataValue(arg2 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetNoDataValue_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) DeleteNoDataValue() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_DeleteNoDataValue_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetUnitType() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Band_GetUnitType_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrBand) SetUnitType(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetUnitType_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_53)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrBand) GetRasterCategoryNames() (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_Band_GetRasterCategoryNames_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	var swig_r_1 []string

	if swig_r != nil {
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrBand) SetRasterCategoryNames(arg2 []string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r = (int)(C._wrap_Band_SetRasterCategoryNames_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetMinimum(arg2 *float64, arg3 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetMinimum_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) GetMaximum(arg2 *float64, arg3 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetMaximum_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) GetOffset(arg2 *float64, arg3 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetOffset_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) GetScale(arg2 *float64, arg3 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Band_GetScale_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) SetOffset(arg2 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetOffset_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetScale(arg2 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_SetScale_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetStatistics(arg2 int, arg3 int, arg4 []float64, arg5 []float64, arg6 []float64, arg7 []float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_Band_GetStatistics_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_55)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_57)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r, err

}

func (arg1 SwigcptrBand) ComputeStatistics(arg2 bool, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 []float64
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].([]float64)
	}
	var arg4 []float64
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].([]float64)
	}
	var arg5 []float64
	if len(_swig_args) > 2 {
		arg5 = _swig_args[2].([]float64)
	}
	var arg6 []float64
	if len(_swig_args) > 3 {
		arg6 = _swig_args[3].([]float64)
	}
	var arg7 progress.ProgressFunc
	if len(_swig_args) > 4 {
		arg7 = _swig_args[4].(progress.ProgressFunc)
	}
	var arg8 interface{}
	if len(_swig_args) > 5 {
		arg8 = _swig_args[5].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	var _swig_i_6 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg7 != nil {
		progf = arg7
		_swig_i_6 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_7 unsafe.Pointer

	if progf != nil {
		_swig_i_7 = progress.New(progf, arg8)
	}

	swig_r = (int)(C._wrap_Band_ComputeStatistics_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_59)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_60)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_61)(unsafe.Pointer(&_swig_i_5)), C.GDALProgressFunc(_swig_i_6), C.swig_voidp(_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r, err

}

func (arg1 SwigcptrBand) SetStatistics(arg2 float64, arg3 float64, arg4 float64, arg5 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Band_SetStatistics_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetOverviewCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_GetOverviewCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetOverview(arg2 int) (_swig_ret Band, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Band
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Band)(SwigcptrBand(C._wrap_Band_GetOverview_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrBand) Checksum(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 int
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(int)
	}
	var arg4 *int
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(*int)
	}
	var arg5 *int
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].(*int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Band_Checksum_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func (arg1 SwigcptrBand) ComputeRasterMinMax(arg2 []float64, _swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	_swig_i_2 := arg3
	C._wrap_Band_ComputeRasterMinMax_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) ComputeBandStats(arg2 []float64, _swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	_swig_i_2 := arg3
	C._wrap_Band_ComputeBandStats_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2))
	return
}

func (arg1 SwigcptrBand) Fill(arg2 float64, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 float64
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(float64)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Band_Fill_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrBand) FlushCache() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Band_FlushCache_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrBand) GetRasterColorTable() (_swig_ret ColorTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ColorTable
	_swig_i_0 := arg1
	swig_r = (ColorTable)(SwigcptrColorTable(C._wrap_Band_GetRasterColorTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetColorTable() (_swig_ret ColorTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ColorTable
	_swig_i_0 := arg1
	swig_r = (ColorTable)(SwigcptrColorTable(C._wrap_Band_GetColorTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetRasterColorTable(arg2 ColorTable) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Band_SetRasterColorTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetColorTable(arg2 ColorTable) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Band_SetColorTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetDefaultRAT() (_swig_ret RasterAttributeTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r RasterAttributeTable
	_swig_i_0 := arg1
	swig_r = (RasterAttributeTable)(SwigcptrRasterAttributeTable(C._wrap_Band_GetDefaultRAT_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetDefaultRAT(arg2 RasterAttributeTable) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Band_SetDefaultRAT_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetMaskBand() (_swig_ret Band, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Band
	_swig_i_0 := arg1
	swig_r = (Band)(SwigcptrBand(C._wrap_Band_GetMaskBand_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetMaskFlags() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Band_GetMaskFlags_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) CreateMaskBand(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Band_CreateMaskBand_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetHistogram(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	var arg3 float64
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(float64)
	}
	var arg4 int
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(int)
	}
	var arg5 GUIntBig
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].(GUIntBig)
	}
	var arg6 int
	if len(_swig_args) > 4 {
		arg6 = _swig_args[4].(int)
	}
	var arg7 int
	if len(_swig_args) > 5 {
		arg7 = _swig_args[5].(int)
	}
	var arg8 progress.ProgressFunc
	if len(_swig_args) > 6 {
		arg8 = _swig_args[6].(progress.ProgressFunc)
	}
	var arg9 interface{}
	if len(_swig_args) > 7 {
		arg9 = _swig_args[7].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	var _swig_i_7 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg8 != nil {
		progf = arg8
		_swig_i_7 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_8 unsafe.Pointer

	if progf != nil {
		_swig_i_8 = progress.New(progf, arg9)
	}

	swig_r = (int)(C._wrap_Band_GetHistogram_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6), C.GDALProgressFunc(_swig_i_7), C.swig_voidp(_swig_i_8)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetDefaultHistogram(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 *float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(*float64)
	}
	var arg3 *float64
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(*float64)
	}
	var arg4 *int
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(*int)
	}
	var arg5 GUIntBig
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].(GUIntBig)
	}
	var arg6 int
	if len(_swig_args) > 4 {
		arg6 = _swig_args[4].(int)
	}
	var arg7 progress.ProgressFunc
	if len(_swig_args) > 5 {
		arg7 = _swig_args[5].(progress.ProgressFunc)
	}
	var arg8 interface{}
	if len(_swig_args) > 6 {
		arg8 = _swig_args[6].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	var _swig_i_6 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg7 != nil {
		progf = arg7
		_swig_i_6 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_7 unsafe.Pointer

	if progf != nil {
		_swig_i_7 = progress.New(progf, arg8)
	}

	swig_r = (int)(C._wrap_Band_GetDefaultHistogram_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.GDALProgressFunc(_swig_i_6), C.swig_voidp(_swig_i_7)))
	return swig_r, err

}

func (arg1 SwigcptrBand) SetDefaultHistogram(arg2 float64, arg3 float64, arg4 int, arg5 GUIntBig) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (int)(C._wrap_Band_SetDefaultHistogram_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4)))
	return swig_r, err

}

func (arg1 SwigcptrBand) HasArbitraryOverviews() (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Band_HasArbitraryOverviews_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrBand) GetCategoryNames() (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_Band_GetCategoryNames_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	var swig_r_1 []string

	if swig_r != nil {
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrBand) SetCategoryNames(arg2 []string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r = (int)(C._wrap_Band_SetCategoryNames_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (p SwigcptrBand) SwigIsMajorObject() {
}

func (p SwigcptrBand) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type Band interface {
	Swigcptr() uintptr
	SwigIsBand()
	GetXSize() (_swig_ret int, err error,

	)
	GetYSize() (_swig_ret int, err error,

	)
	GetDataType() (_swig_ret int)
	GetDataset() (_swig_ret Dataset, err error,

	)
	GetBand() (_swig_ret int, err error,

	)
	GetBlockSize(arg2 []int, arg3 []int) (err error)

	GetColorInterpretation() (_swig_ret int, err error,

	)
	GetRasterColorInterpretation() (_swig_ret int, err error,

	)
	SetColorInterpretation(arg2 int) (_swig_ret int, err error,

	)
	SetRasterColorInterpretation(arg2 int) (_swig_ret int, err error,

	)
	GetNoDataValue(arg2 *float64, arg3 *int) (err error)

	SetNoDataValue(arg2 float64) (_swig_ret int, err error,

	)
	DeleteNoDataValue() (_swig_ret int, err error,

	)
	GetUnitType() (_swig_ret string, err error,

	)
	SetUnitType(arg2 string) (_swig_ret int, err error,

	)
	GetRasterCategoryNames() (_swig_ret []string, err error,

	)
	SetRasterCategoryNames(arg2 []string) (_swig_ret int, err error,

	)
	GetMinimum(arg2 *float64, arg3 *int) (err error)

	GetMaximum(arg2 *float64, arg3 *int) (err error)

	GetOffset(arg2 *float64, arg3 *int) (err error)

	GetScale(arg2 *float64, arg3 *int) (err error)

	SetOffset(arg2 float64) (_swig_ret int, err error,

	)
	SetScale(arg2 float64) (_swig_ret int, err error,

	)
	GetStatistics(arg2 int, arg3 int, arg4 []float64, arg5 []float64, arg6 []float64, arg7 []float64) (_swig_ret int, err error,

	)
	ComputeStatistics(arg2 bool, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	SetStatistics(arg2 float64, arg3 float64, arg4 float64, arg5 float64) (_swig_ret int, err error,

	)
	GetOverviewCount() (_swig_ret int, err error,

	)
	GetOverview(arg2 int) (_swig_ret Band, err error,

	)
	Checksum(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	ComputeRasterMinMax(arg2 []float64, _swig_args ...interface{}) (err error)

	ComputeBandStats(arg2 []float64, _swig_args ...interface{}) (err error)

	Fill(arg2 float64, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	FlushCache() (err error)

	GetRasterColorTable() (_swig_ret ColorTable, err error,

	)
	GetColorTable() (_swig_ret ColorTable, err error,

	)
	SetRasterColorTable(arg2 ColorTable) (_swig_ret int, err error,

	)
	SetColorTable(arg2 ColorTable) (_swig_ret int, err error,

	)
	GetDefaultRAT() (_swig_ret RasterAttributeTable, err error,

	)
	SetDefaultRAT(arg2 RasterAttributeTable) (_swig_ret int, err error,

	)
	GetMaskBand() (_swig_ret Band, err error,

	)
	GetMaskFlags() (_swig_ret int, err error,

	)
	CreateMaskBand(arg2 int) (_swig_ret int, err error,

	)
	GetHistogram(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	GetDefaultHistogram(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	SetDefaultHistogram(arg2 float64, arg3 float64, arg4 int, arg5 GUIntBig) (_swig_ret int, err error,

	)
	HasArbitraryOverviews() (_swig_ret bool, err error,

	)
	GetCategoryNames() (_swig_ret []string, err error,

	)
	SetCategoryNames(arg2 []string) (_swig_ret int, err error,

	)
	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
}

type SwigcptrColorTable uintptr

func (p SwigcptrColorTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColorTable) SwigIsColorTable() {
}

func NewColorTable(_swig_args ...interface{}) (_swig_ret ColorTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 int
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(int)
	}
	var swig_r ColorTable
	_swig_i_0 := arg1
	swig_r = (ColorTable)(SwigcptrColorTable(C._wrap_new_ColorTable_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.swig_intgo(_swig_i_0))))
	return swig_r, err

}

func DeleteColorTable(arg1 ColorTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ColorTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrColorTable) Clone() (_swig_ret ColorTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ColorTable
	_swig_i_0 := arg1
	swig_r = (ColorTable)(SwigcptrColorTable(C._wrap_ColorTable_Clone_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrColorTable) GetPaletteInterpretation() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColorTable_GetPaletteInterpretation_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrColorTable) GetCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ColorTable_GetCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrColorTable) GetColorEntry(arg2 int) (_swig_ret ColorEntry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r ColorEntry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ColorEntry)(SwigcptrColorEntry(C._wrap_ColorTable_GetColorEntry_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrColorTable) GetColorEntryAsRGB(arg2 int, arg3 ColorEntry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_ColorTable_GetColorEntryAsRGB_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrColorTable) SetColorEntry(arg2 int, arg3 ColorEntry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_ColorTable_SetColorEntry_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	return
}

func (arg1 SwigcptrColorTable) CreateColorRamp(arg2 int, arg3 ColorEntry, arg4 int, arg5 ColorEntry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_ColorTable_CreateColorRamp_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4))
	return
}

type ColorTable interface {
	Swigcptr() uintptr
	SwigIsColorTable()
	Clone() (_swig_ret ColorTable, err error,

	)
	GetPaletteInterpretation() (_swig_ret int, err error,

	)
	GetCount() (_swig_ret int, err error,

	)
	GetColorEntry(arg2 int) (_swig_ret ColorEntry, err error,

	)
	GetColorEntryAsRGB(arg2 int, arg3 ColorEntry) (_swig_ret int, err error,

	)
	SetColorEntry(arg2 int, arg3 ColorEntry) (err error)

	CreateColorRamp(arg2 int, arg3 ColorEntry, arg4 int, arg5 ColorEntry) (err error)
}

type SwigcptrRasterAttributeTable uintptr

func (p SwigcptrRasterAttributeTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRasterAttributeTable) SwigIsRasterAttributeTable() {
}

func NewRasterAttributeTable() (_swig_ret RasterAttributeTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r RasterAttributeTable
	swig_r = (RasterAttributeTable)(SwigcptrRasterAttributeTable(C._wrap_new_RasterAttributeTable_gdal_a300ce886cc7d02a()))
	return swig_r, err

}

func DeleteRasterAttributeTable(arg1 RasterAttributeTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_RasterAttributeTable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrRasterAttributeTable) Clone() (_swig_ret RasterAttributeTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r RasterAttributeTable
	_swig_i_0 := arg1
	swig_r = (RasterAttributeTable)(SwigcptrRasterAttributeTable(C._wrap_RasterAttributeTable_Clone_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetColumnCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RasterAttributeTable_GetColumnCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetNameOfCol(arg2 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RasterAttributeTable_GetNameOfCol_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrRasterAttributeTable) GetUsageOfCol(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RasterAttributeTable_GetUsageOfCol_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetTypeOfCol(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RasterAttributeTable_GetTypeOfCol_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetColOfUsage(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RasterAttributeTable_GetColOfUsage_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetRowCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RasterAttributeTable_GetRowCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetValueAsString(arg2 int, arg3 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_RasterAttributeTable_GetValueAsString_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrRasterAttributeTable) GetValueAsInt(arg2 int, arg3 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_RasterAttributeTable_GetValueAsInt_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetValueAsDouble(arg2 int, arg3 int) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (float64)(C._wrap_RasterAttributeTable_GetValueAsDouble_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) SetValueAsString(arg2 int, arg3 int, arg4 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RasterAttributeTable_SetValueAsString_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_64)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return
}

func (arg1 SwigcptrRasterAttributeTable) SetValueAsInt(arg2 int, arg3 int, arg4 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RasterAttributeTable_SetValueAsInt_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))
	return
}

func (arg1 SwigcptrRasterAttributeTable) SetValueAsDouble(arg2 int, arg3 int, arg4 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RasterAttributeTable_SetValueAsDouble_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.double(_swig_i_3))
	return
}

func (arg1 SwigcptrRasterAttributeTable) SetRowCount(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RasterAttributeTable_SetRowCount_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrRasterAttributeTable) CreateColumn(arg2 string, arg3 int, arg4 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_RasterAttributeTable_CreateColumn_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_65)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetLinearBinning(arg2 []float64, arg3 []float64) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RasterAttributeTable_GetLinearBinning_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), *(*C.swig_type_66)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_67)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) SetLinearBinning(arg2 float64, arg3 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_RasterAttributeTable_SetLinearBinning_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) GetRowOfValue(arg2 float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_RasterAttributeTable_GetRowOfValue_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) ChangesAreWrittenToFile() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RasterAttributeTable_ChangesAreWrittenToFile_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrRasterAttributeTable) DumpReadable() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_RasterAttributeTable_DumpReadable_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type RasterAttributeTable interface {
	Swigcptr() uintptr
	SwigIsRasterAttributeTable()
	Clone() (_swig_ret RasterAttributeTable, err error,

	)
	GetColumnCount() (_swig_ret int, err error,

	)
	GetNameOfCol(arg2 int) (_swig_ret string, err error,

	)
	GetUsageOfCol(arg2 int) (_swig_ret int, err error,

	)
	GetTypeOfCol(arg2 int) (_swig_ret int, err error,

	)
	GetColOfUsage(arg2 int) (_swig_ret int, err error,

	)
	GetRowCount() (_swig_ret int, err error,

	)
	GetValueAsString(arg2 int, arg3 int) (_swig_ret string, err error,

	)
	GetValueAsInt(arg2 int, arg3 int) (_swig_ret int, err error,

	)
	GetValueAsDouble(arg2 int, arg3 int) (_swig_ret float64, err error,

	)
	SetValueAsString(arg2 int, arg3 int, arg4 string) (err error)

	SetValueAsInt(arg2 int, arg3 int, arg4 int) (err error)

	SetValueAsDouble(arg2 int, arg3 int, arg4 float64) (err error)

	SetRowCount(arg2 int) (err error)

	CreateColumn(arg2 string, arg3 int, arg4 int) (_swig_ret int, err error,

	)
	GetLinearBinning(arg2 []float64, arg3 []float64) (_swig_ret bool, err error,

	)
	SetLinearBinning(arg2 float64, arg3 float64) (_swig_ret int, err error,

	)
	GetRowOfValue(arg2 float64) (_swig_ret int, err error,

	)
	ChangesAreWrittenToFile() (_swig_ret int, err error,

	)
	DumpReadable() (err error)
}

func TermProgress_nocb(arg1 float64, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var arg3 uintptr
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(uintptr)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_TermProgress_nocb_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.double(_swig_i_0), *(*C.swig_type_68)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func _swig_getTermProgress() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	swig_r = (_swig_fnptr)(C._wrap_TermProgress_gdal_a300ce886cc7d02a())
	return swig_r
}

var TermProgress _swig_fnptr = _swig_getTermProgress()

func ComputeMedianCutPCT(arg1 Band, arg2 Band, arg3 Band, arg4 int, arg5 ColorTable, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg6 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg6 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 1 {
		arg7 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (int)(C._wrap_ComputeMedianCutPCT_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func DitherRGB2PCT(arg1 Band, arg2 Band, arg3 Band, arg4 Band, arg5 ColorTable, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg6 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg6 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 1 {
		arg7 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (int)(C._wrap_DitherRGB2PCT_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func ReprojectImage(arg1 Dataset, arg2 Dataset, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var arg4 string
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(string)
	}
	var arg5 int
	if len(_swig_args) > 2 {
		arg5 = _swig_args[2].(int)
	}
	var arg6 float64
	if len(_swig_args) > 3 {
		arg6 = _swig_args[3].(float64)
	}
	var arg7 float64
	if len(_swig_args) > 4 {
		arg7 = _swig_args[4].(float64)
	}
	var arg8 progress.ProgressFunc
	if len(_swig_args) > 5 {
		arg8 = _swig_args[5].(progress.ProgressFunc)
	}
	var arg9 interface{}
	if len(_swig_args) > 6 {
		arg9 = _swig_args[6].(interface{})
	}
	var arg10 []string
	if len(_swig_args) > 7 {
		arg10 = _swig_args[7].([]string)
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	var _swig_i_7 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg8 != nil {
		progf = arg8
		_swig_i_7 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_8 unsafe.Pointer

	if progf != nil {
		_swig_i_8 = progress.New(progf, arg9)
	}

	var _swig_i_9 **C.char

	arg10_l := len(arg10)
	_swig_i_9_i := make([]*C.char, arg10_l+1)
	for i := 0; i < arg10_l; i++ {
		_swig_i_9_i[i] = C.CString(arg10[i])
		defer C.free(unsafe.Pointer(_swig_i_9_i[i]))
	}
	_swig_i_9_i[arg10_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_9 = &_swig_i_9_i[0]

	swig_r = (int)(C._wrap_ReprojectImage_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_70)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_71)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4), C.double(_swig_i_5), C.double(_swig_i_6), C.GDALProgressFunc(_swig_i_7), C.swig_voidp(_swig_i_8), C.swig_voidp(_swig_i_9)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r, err

}

func ComputeProximity(arg1 Band, arg2 Band, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 []string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].([]string)
	}
	var arg4 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 2 {
		arg5 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (int)(C._wrap_ComputeProximity_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func RasterizeLayer(arg1 Dataset, arg2 int, arg3 *int, arg4 ogr.Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 uintptr
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(uintptr)
	}
	var arg6 uintptr
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(uintptr)
	}
	var arg7 int
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].(int)
	}
	var arg8 *float64
	if len(_swig_args) > 3 {
		arg8 = _swig_args[3].(*float64)
	}
	var arg9 []string
	if len(_swig_args) > 4 {
		arg9 = _swig_args[4].([]string)
	}
	var arg10 progress.ProgressFunc
	if len(_swig_args) > 5 {
		arg10 = _swig_args[5].(progress.ProgressFunc)
	}
	var arg11 interface{}
	if len(_swig_args) > 6 {
		arg11 = _swig_args[6].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	var _swig_i_8 **C.char

	arg9_l := len(arg9)
	_swig_i_8_i := make([]*C.char, arg9_l+1)
	for i := 0; i < arg9_l; i++ {
		_swig_i_8_i[i] = C.CString(arg9[i])
		defer C.free(unsafe.Pointer(_swig_i_8_i[i]))
	}
	_swig_i_8_i[arg9_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_8 = &_swig_i_8_i[0]

	var _swig_i_9 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg10 != nil {
		progf = arg10
		_swig_i_9 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_10 unsafe.Pointer

	if progf != nil {
		_swig_i_10 = progress.New(progf, arg11)
	}

	swig_r = (int)(C._wrap_RasterizeLayer_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.swig_intgo(_swig_i_6), C.swig_voidp(_swig_i_7), C.swig_voidp(_swig_i_8), C.GDALProgressFunc(_swig_i_9), C.swig_voidp(_swig_i_10)))
	return swig_r, err

}

func Polygonize(arg1 Band, arg2 Band, arg3 ogr.Layer, arg4 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 []string
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].([]string)
	}
	var arg6 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (int)(C._wrap_Polygonize_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func FPolygonize(arg1 Band, arg2 Band, arg3 ogr.Layer, arg4 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 []string
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].([]string)
	}
	var arg6 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (int)(C._wrap_FPolygonize_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func FillNodata(arg1 Band, arg2 Band, arg3 float64, arg4 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 []string
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].([]string)
	}
	var arg6 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (int)(C._wrap_FillNodata_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func SieveFilter(arg1 Band, arg2 Band, arg3 Band, arg4 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 int
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(int)
	}
	var arg6 []string
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].([]string)
	}
	var arg7 progress.ProgressFunc
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].(progress.ProgressFunc)
	}
	var arg8 interface{}
	if len(_swig_args) > 3 {
		arg8 = _swig_args[3].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	var _swig_i_5 **C.char

	arg6_l := len(arg6)
	_swig_i_5_i := make([]*C.char, arg6_l+1)
	for i := 0; i < arg6_l; i++ {
		_swig_i_5_i[i] = C.CString(arg6[i])
		defer C.free(unsafe.Pointer(_swig_i_5_i[i]))
	}
	_swig_i_5_i[arg6_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_5 = &_swig_i_5_i[0]

	var _swig_i_6 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg7 != nil {
		progf = arg7
		_swig_i_6 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_7 unsafe.Pointer

	if progf != nil {
		_swig_i_7 = progress.New(progf, arg8)
	}

	swig_r = (int)(C._wrap_SieveFilter_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_voidp(_swig_i_5), C.GDALProgressFunc(_swig_i_6), C.swig_voidp(_swig_i_7)))
	return swig_r, err

}

func RegenerateOverviews(arg1 Band, arg2 int, arg3 Band, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_RegenerateOverviews_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_72)(unsafe.Pointer(&_swig_i_3)), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r, err

}

func RegenerateOverview(arg1 Band, arg2 Band, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var arg4 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 2 {
		arg5 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (int)(C._wrap_RegenerateOverview_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_73)(unsafe.Pointer(&_swig_i_2)), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func ContourGenerate(arg1 Band, arg2 float64, arg3 float64, arg4 int, arg5 *float64, arg6 int, arg7 float64, arg8 ogr.Layer, arg9 int, arg10 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg11 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg11 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg12 interface{}
	if len(_swig_args) > 1 {
		arg12 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9
	_swig_i_9 := arg10
	var _swig_i_10 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg11 != nil {
		progf = arg11
		_swig_i_10 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_11 unsafe.Pointer

	if progf != nil {
		_swig_i_11 = progress.New(progf, arg12)
	}

	swig_r = (int)(C._wrap_ContourGenerate_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_intgo(_swig_i_5), C.double(_swig_i_6), C.uintptr_t(_swig_i_7), C.swig_intgo(_swig_i_8), C.swig_intgo(_swig_i_9), C.GDALProgressFunc(_swig_i_10), C.swig_voidp(_swig_i_11)))
	return swig_r, err

}

func AutoCreateWarpedVRT(arg1 Dataset, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var arg3 string
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(string)
	}
	var arg4 int
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(int)
	}
	var arg5 float64
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].(float64)
	}
	var swig_r Dataset
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Dataset)(SwigcptrDataset(C._wrap_AutoCreateWarpedVRT_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_74)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_75)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3), C.double(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func CreatePansharpenedVRT(arg1 string, arg2 Band, arg3 int, arg4 Band) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Dataset)(SwigcptrDataset(C._wrap_CreatePansharpenedVRT_gdal_a300ce886cc7d02a(*(*C.swig_type_76)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrTransformer uintptr

func (p SwigcptrTransformer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTransformer) SwigIsTransformer() {
}

func NewTransformer(arg1 Dataset, arg2 Dataset, arg3 []string) (_swig_ret Transformer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Transformer
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	swig_r = (Transformer)(SwigcptrTransformer(C._wrap_new_Transformer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2))))
	return swig_r, err

}

func DeleteTransformer(arg1 Transformer) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Transformer_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrTransformer) TransformPoint__SWIG_0(arg2 int, arg3 []float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 *C.double

	_swig_i_2 = (*C.double)(unsafe.Pointer(&arg3[0]))

	swig_r = (int)(C._wrap_Transformer_TransformPoint__SWIG_0_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrTransformer) TransformPoint__SWIG_1(arg2 []float64, arg3 int, arg4 float64, arg5 float64, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg6 float64
	if len(_swig_args) > 0 {
		arg6 = _swig_args[0].(float64)
	}
	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_Transformer_TransformPoint__SWIG_1_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5)))
	return swig_r, err

}

func (p SwigcptrTransformer) TransformPoint(a ...interface{}) (int, error) {
	argc := len(a)
	if argc == 2 {
		return p.TransformPoint__SWIG_0(a[0].(int), a[1].([]float64))
	}
	if argc >= 4 && argc <= 5 {
		switch argc {
		case 4:
			return p.TransformPoint__SWIG_1(a[0].([]float64), a[1].(int), a[2].(float64), a[3].(float64))
		case 5:
			return p.TransformPoint__SWIG_1(a[0].([]float64), a[1].(int), a[2].(float64), a[3].(float64), a[4])
		}
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTransformer) TransformPoints(arg2 int, arg3 int, arg4 *float64, arg5 *float64, arg6 *float64, arg7 *int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (int)(C._wrap_Transformer_TransformPoints_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

func (arg1 SwigcptrTransformer) TransformGeolocations(arg2 Band, arg3 Band, arg4 Band, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(interface{})
	}
	var arg7 []string
	if len(_swig_args) > 2 {
		arg7 = _swig_args[2].([]string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	var _swig_i_6 **C.char

	arg7_l := len(arg7)
	_swig_i_6_i := make([]*C.char, arg7_l+1)
	for i := 0; i < arg7_l; i++ {
		_swig_i_6_i[i] = C.CString(arg7[i])
		defer C.free(unsafe.Pointer(_swig_i_6_i[i]))
	}
	_swig_i_6_i[arg7_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_6 = &_swig_i_6_i[0]

	swig_r = (int)(C._wrap_Transformer_TransformGeolocations_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r, err

}

type Transformer interface {
	Swigcptr() uintptr
	SwigIsTransformer()
	TransformPoint(a ...interface{}) (int, error)

	TransformPoints(arg2 int, arg3 int, arg4 *float64, arg5 *float64, arg6 *float64, arg7 *int) (_swig_ret int, err error,

	)
	TransformGeolocations(arg2 Band, arg3 Band, arg4 Band, _swig_args ...interface{}) (_swig_ret int, err error,

	)
}

func wrap_ApplyGeoTransform(arg1 []float64, arg2 float64, arg3 float64, arg4 []float64, arg5 []float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	var _swig_i_0 *C.double

	_swig_i_0 = (*C.double)(unsafe.Pointer(&arg1[0]))

	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ApplyGeoTransform_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_77)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_78)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return
}

func wrap_InvGeoTransform(arg1 []float64, arg2 []float64) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	var _swig_i_0 *C.double

	_swig_i_0 = (*C.double)(unsafe.Pointer(&arg1[0]))

	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	swig_r = (int)(C._wrap_InvGeoTransform_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func VersionInfo(_swig_args ...interface{}) (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var arg1 string
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(string)
	}
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_VersionInfo_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_80)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func AllRegister() {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	C._wrap_AllRegister_gdal_a300ce886cc7d02a()
}

func GDALDestroyDriverManager() (err error) {
	defer cpl.ErrorTrap()(&err)

	C._wrap_GDALDestroyDriverManager_gdal_a300ce886cc7d02a()
	return
}

func GetCacheMax() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	swig_r = (int)(C._wrap_GetCacheMax_gdal_a300ce886cc7d02a())
	return swig_r, err

}

func GetCacheUsed() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	swig_r = (int)(C._wrap_GetCacheUsed_gdal_a300ce886cc7d02a())
	return swig_r, err

}

func SetCacheMax(arg1 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_SetCacheMax_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0))
	return
}

func GetDataTypeSize(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GetDataTypeSize_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func DataTypeIsComplex(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataTypeIsComplex_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GetDataTypeName(arg1 int) (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetDataTypeName_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GetDataTypeByName(arg1 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GetDataTypeByName_gdal_a300ce886cc7d02a(*(*C.swig_type_82)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func GetColorInterpretationName(arg1 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetColorInterpretationName_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GetPaletteInterpretationName(arg1 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetPaletteInterpretationName_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func DecToDMS(arg1 float64, arg2 string, _swig_args ...interface{}) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_DecToDMS_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.double(_swig_i_0), *(*C.swig_type_86)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func PackedDMSToDec(arg1 float64) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_PackedDMSToDec_gdal_a300ce886cc7d02a(C.double(_swig_i_0)))
	return swig_r, err

}

func DecToPackedDMS(arg1 float64) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_DecToPackedDMS_gdal_a300ce886cc7d02a(C.double(_swig_i_0)))
	return swig_r, err

}

func ParseXMLString(arg1 string) (_swig_ret CPLXMLNode, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r CPLXMLNode
	_swig_i_0 := arg1
	swig_r = (CPLXMLNode)(SwigcptrCPLXMLNode(C._wrap_ParseXMLString_gdal_a300ce886cc7d02a(*(*C.swig_type_87)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func SerializeXMLTree(arg1 CPLXMLNode) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_SerializeXMLTree_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GetJPEG2000StructureAsString(arg1 string, _swig_args ...interface{}) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 []string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].([]string)
	}
	var swig_r string
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r_p := C._wrap_GetJPEG2000StructureAsString_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_90)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GetDriverCount() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	swig_r = (int)(C._wrap_GetDriverCount_gdal_a300ce886cc7d02a())
	return swig_r
}

func GetDriverByName(arg1 string) (_swig_ret Driver, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Driver
	_swig_i_0 := arg1
	swig_r = (Driver)(SwigcptrDriver(C._wrap_GetDriverByName_gdal_a300ce886cc7d02a(*(*C.swig_type_91)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Driver

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func GetDriver(arg1 int) (_swig_ret Driver) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Driver
	_swig_i_0 := arg1
	swig_r = (Driver)(SwigcptrDriver(C._wrap_GetDriver_gdal_a300ce886cc7d02a(C.swig_intgo(_swig_i_0))))
	var swig_r_1 Driver

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1
}

func wrap_Open(arg1 string, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Dataset)(SwigcptrDataset(C._wrap_Open_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_92)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func wrap_OpenEx(arg1 string, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 uint
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(uint)
	}
	var arg3 []string
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]string)
	}
	var arg4 []string
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].([]string)
	}
	var arg5 []string
	if len(_swig_args) > 3 {
		arg5 = _swig_args[3].([]string)
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_OpenEx_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_93)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func OpenShared(arg1 string, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Dataset)(SwigcptrDataset(C._wrap_OpenShared_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_94)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func IdentifyDriver(arg1 string, _swig_args ...interface{}) (_swig_ret Driver, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 []string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].([]string)
	}
	var swig_r Driver
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r = (Driver)(SwigcptrDriver(C._wrap_IdentifyDriver_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_95)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Driver

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func GeneralCmdLineProcessor(arg1 []string, _swig_args ...interface{}) (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r **C.char
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	_swig_i_1 := arg2
	swig_r = (**C.char)(C._wrap_GeneralCmdLineProcessor_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.swig_voidp(_swig_i_0), C.swig_intgo(_swig_i_1)))
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

type SwigcptrGDALInfoOptions uintptr

func (p SwigcptrGDALInfoOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALInfoOptions) SwigIsGDALInfoOptions() {
}

func newGDALInfoOptions(arg1 []string) (_swig_ret GDALInfoOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALInfoOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALInfoOptions)(SwigcptrGDALInfoOptions(C._wrap_new_GDALInfoOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALInfoOptions(arg1 GDALInfoOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALInfoOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALInfoOptions interface {
	Swigcptr() uintptr
	SwigIsGDALInfoOptions()
}

func wrap_GDALInfo(arg1 Dataset, arg2 GDALInfoOptions) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r_p := C._wrap_GDALInfo_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

type SwigcptrGDALTranslateOptions uintptr

func (p SwigcptrGDALTranslateOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALTranslateOptions) SwigIsGDALTranslateOptions() {
}

func newGDALTranslateOptions(arg1 []string) (_swig_ret GDALTranslateOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALTranslateOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALTranslateOptions)(SwigcptrGDALTranslateOptions(C._wrap_new_GDALTranslateOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALTranslateOptions(arg1 GDALTranslateOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALTranslateOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALTranslateOptions interface {
	Swigcptr() uintptr
	SwigIsGDALTranslateOptions()
}

func wrapper_GDALTranslate(arg1 string, arg2 Dataset, arg3 GDALTranslateOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALTranslate_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_97)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALWarpAppOptions uintptr

func (p SwigcptrGDALWarpAppOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALWarpAppOptions) SwigIsGDALWarpAppOptions() {
}

func newGDALWarpAppOptions(arg1 []string) (_swig_ret GDALWarpAppOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALWarpAppOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALWarpAppOptions)(SwigcptrGDALWarpAppOptions(C._wrap_new_GDALWarpAppOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALWarpAppOptions(arg1 GDALWarpAppOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALWarpAppOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALWarpAppOptions interface {
	Swigcptr() uintptr
	SwigIsGDALWarpAppOptions()
}

func wrapper_GDALWarpDestDS(arg1 Dataset, arg2 int, arg3 []Dataset, arg4 GDALWarpAppOptions, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	var _swig_i_2 unsafe.Pointer

	arg3_l := len(arg3)
	_swig_i_2_i := make([]unsafe.Pointer, arg3_l)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = unsafe.Pointer(arg3[i].Swigcptr())
	}
	_swig_i_2 = unsafe.Pointer(&_swig_i_2_i[0])

	_swig_i_3 := arg4.Swigcptr()
	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_wrapper_GDALWarpDestDS_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func wrapper_GDALWarpDestName(arg1 string, arg2 int, arg3 []Dataset, arg4 GDALWarpAppOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg5 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 1 {
		arg6 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 unsafe.Pointer

	arg3_l := len(arg3)
	_swig_i_2_i := make([]unsafe.Pointer, arg3_l)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = unsafe.Pointer(arg3[i].Swigcptr())
	}
	_swig_i_2 = unsafe.Pointer(&_swig_i_2_i[0])

	_swig_i_3 := arg4.Swigcptr()
	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALWarpDestName_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_98)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALVectorTranslateOptions uintptr

func (p SwigcptrGDALVectorTranslateOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALVectorTranslateOptions) SwigIsGDALVectorTranslateOptions() {
}

func newGDALVectorTranslateOptions(arg1 []string) (_swig_ret GDALVectorTranslateOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALVectorTranslateOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALVectorTranslateOptions)(SwigcptrGDALVectorTranslateOptions(C._wrap_new_GDALVectorTranslateOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALVectorTranslateOptions(arg1 GDALVectorTranslateOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALVectorTranslateOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALVectorTranslateOptions interface {
	Swigcptr() uintptr
	SwigIsGDALVectorTranslateOptions()
}

func wrapper_GDALVectorTranslateDestDS(arg1 Dataset, arg2 Dataset, arg3 GDALVectorTranslateOptions, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (int)(C._wrap_wrapper_GDALVectorTranslateDestDS_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func wrapper_GDALVectorTranslateDestName(arg1 string, arg2 Dataset, arg3 GDALVectorTranslateOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALVectorTranslateDestName_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_99)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALDEMProcessingOptions uintptr

func (p SwigcptrGDALDEMProcessingOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALDEMProcessingOptions) SwigIsGDALDEMProcessingOptions() {
}

func newGDALDEMProcessingOptions(arg1 []string) (_swig_ret GDALDEMProcessingOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALDEMProcessingOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALDEMProcessingOptions)(SwigcptrGDALDEMProcessingOptions(C._wrap_new_GDALDEMProcessingOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALDEMProcessingOptions(arg1 GDALDEMProcessingOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALDEMProcessingOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALDEMProcessingOptions interface {
	Swigcptr() uintptr
	SwigIsGDALDEMProcessingOptions()
}

func wrapper_GDALDEMProcessing(arg1 string, arg2 Dataset, arg3 string, arg4 string, arg5 GDALDEMProcessingOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg6 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg6 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg7 interface{}
	if len(_swig_args) > 1 {
		arg7 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	var _swig_i_5 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg6 != nil {
		progf = arg6
		_swig_i_5 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_6 unsafe.Pointer

	if progf != nil {
		_swig_i_6 = progress.New(progf, arg7)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALDEMProcessing_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_100)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_101)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_102)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4), C.GDALProgressFunc(_swig_i_5), C.swig_voidp(_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALNearblackOptions uintptr

func (p SwigcptrGDALNearblackOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALNearblackOptions) SwigIsGDALNearblackOptions() {
}

func newGDALNearblackOptions(arg1 []string) (_swig_ret GDALNearblackOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALNearblackOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALNearblackOptions)(SwigcptrGDALNearblackOptions(C._wrap_new_GDALNearblackOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALNearblackOptions(arg1 GDALNearblackOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALNearblackOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALNearblackOptions interface {
	Swigcptr() uintptr
	SwigIsGDALNearblackOptions()
}

func wrapper_GDALNearblackDestDS(arg1 Dataset, arg2 Dataset, arg3 GDALNearblackOptions, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (int)(C._wrap_wrapper_GDALNearblackDestDS_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func wrapper_GDALNearblackDestName(arg1 string, arg2 Dataset, arg3 GDALNearblackOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALNearblackDestName_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_103)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALGridOptions uintptr

func (p SwigcptrGDALGridOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALGridOptions) SwigIsGDALGridOptions() {
}

func newGDALGridOptions(arg1 []string) (_swig_ret GDALGridOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALGridOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALGridOptions)(SwigcptrGDALGridOptions(C._wrap_new_GDALGridOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALGridOptions(arg1 GDALGridOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALGridOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALGridOptions interface {
	Swigcptr() uintptr
	SwigIsGDALGridOptions()
}

func wrapper_GDALGrid(arg1 string, arg2 Dataset, arg3 GDALGridOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALGrid_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_104)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGDALRasterizeOptions uintptr

func (p SwigcptrGDALRasterizeOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGDALRasterizeOptions) SwigIsGDALRasterizeOptions() {
}

func newGDALRasterizeOptions(arg1 []string) (_swig_ret GDALRasterizeOptions, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GDALRasterizeOptions
	var _swig_i_0 **C.char

	arg1_l := len(arg1)
	_swig_i_0_i := make([]*C.char, arg1_l+1)
	for i := 0; i < arg1_l; i++ {
		_swig_i_0_i[i] = C.CString(arg1[i])
		defer C.free(unsafe.Pointer(_swig_i_0_i[i]))
	}
	_swig_i_0_i[arg1_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_0 = &_swig_i_0_i[0]

	swig_r = (GDALRasterizeOptions)(SwigcptrGDALRasterizeOptions(C._wrap_new_GDALRasterizeOptions_gdal_a300ce886cc7d02a(C.swig_voidp(_swig_i_0))))
	return swig_r, err

}

func deleteGDALRasterizeOptions(arg1 GDALRasterizeOptions) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GDALRasterizeOptions_gdal_a300ce886cc7d02a(C.uintptr_t(_swig_i_0))
	return
}

type GDALRasterizeOptions interface {
	Swigcptr() uintptr
	SwigIsGDALRasterizeOptions()
}

func wrapper_GDALRasterizeDestDS(arg1 Dataset, arg2 Dataset, arg3 GDALRasterizeOptions, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (int)(C._wrap_wrapper_GDALRasterizeDestDS_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func wrapper_GDALRasterizeDestName(arg1 string, arg2 Dataset, arg3 GDALRasterizeOptions, _swig_args ...interface{}) (_swig_ret Dataset, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 progress.ProgressFunc
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(progress.ProgressFunc)
	}
	var arg5 interface{}
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(interface{})
	}
	var swig_r Dataset
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg4 != nil {
		progf = arg4
		_swig_i_3 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_4 unsafe.Pointer

	if progf != nil {
		_swig_i_4 = progress.New(progf, arg5)
	}

	swig_r = (Dataset)(SwigcptrDataset(C._wrap_wrapper_GDALRasterizeDestName_gdal_a300ce886cc7d02a(C.swig_intgo(len(_swig_args)), *(*C.swig_type_105)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.GDALProgressFunc(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 Dataset

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

type SwigcptrGUIntBig uintptr
type GUIntBig interface {
	Swigcptr() uintptr
}

func (p SwigcptrGUIntBig) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrCPLXMLNode uintptr
type CPLXMLNode interface {
	Swigcptr() uintptr
}

func (p SwigcptrCPLXMLNode) Swigcptr() uintptr {
	return uintptr(p)
}
