/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ../include/osr.i

#define SWIGMODULE github.com/geo-data/go-gdal/gdal/swig/go/gdal/osr

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


#define SWIG_exception(code, msg) _swig_gopanic(msg)


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}


typedef char retStringAndCPLFree;


#include <iostream>
using namespace std;

#include "cpl_string.h"
#include "cpl_conv.h"

#include "ogr_srs_api.h"

#ifdef DEBUG
typedef struct OGRSpatialReferenceHS OSRSpatialReferenceShadow;
typedef struct OGRCoordinateTransformationHS OSRCoordinateTransformationShadow;
typedef struct OGRCoordinateTransformationHS OGRCoordinateTransformationShadow;
#else
typedef void OSRSpatialReferenceShadow;
typedef void OSRCoordinateTransformationShadow;
#endif


OGRErr GetWellKnownGeogCSAsWKT( const char *name, char **argout ) {
  OGRSpatialReferenceH srs = OSRNewSpatialReference("");
  OGRErr rcode = OSRSetWellKnownGeogCS( srs, name );
  if( rcode == OGRERR_NONE )
      rcode = OSRExportToWkt ( srs, argout );  
  OSRDestroySpatialReference( srs );
  return rcode;
}


OGRErr GetUserInputAsWKT( const char *name, char **argout ) {
  OGRSpatialReferenceH srs = OSRNewSpatialReference("");
  OGRErr rcode = OSRSetFromUserInput( srs, name );
  if( rcode == OGRERR_NONE )
      rcode = OSRExportToWkt ( srs, argout );  
  OSRDestroySpatialReference( srs );
  return rcode;
}

SWIGINTERN OSRSpatialReferenceShadow *new_OSRSpatialReferenceShadow(char const *wkt=""){
    return (OSRSpatialReferenceShadow*) OSRNewSpatialReference(wkt);
  }
SWIGINTERN void delete_OSRSpatialReferenceShadow(OSRSpatialReferenceShadow *self){
    if (OSRDereference( self ) == 0 ) {
      OSRDestroySpatialReference( self );
    }
  }
SWIGINTERN char *OSRSpatialReferenceShadow___str__(OSRSpatialReferenceShadow *self){
    char *buf = 0;
    OSRExportToPrettyWkt( self, &buf, 0 );
    return buf;
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsSame(OSRSpatialReferenceShadow *self,OSRSpatialReferenceShadow *rhs){
    return OSRIsSame( self, rhs );
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsSameGeogCS(OSRSpatialReferenceShadow *self,OSRSpatialReferenceShadow *rhs){
    return OSRIsSameGeogCS( self, rhs );
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsSameVertCS(OSRSpatialReferenceShadow *self,OSRSpatialReferenceShadow *rhs){
    return OSRIsSameVertCS( self, rhs );
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsGeographic(OSRSpatialReferenceShadow *self){
    return OSRIsGeographic(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsProjected(OSRSpatialReferenceShadow *self){
    return OSRIsProjected(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsCompound(OSRSpatialReferenceShadow *self){
    return OSRIsCompound(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsGeocentric(OSRSpatialReferenceShadow *self){
    return OSRIsGeocentric(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsLocal(OSRSpatialReferenceShadow *self){
    return OSRIsLocal(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_IsVertical(OSRSpatialReferenceShadow *self){
    return OSRIsVertical(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_EPSGTreatsAsLatLong(OSRSpatialReferenceShadow *self){
    return OSREPSGTreatsAsLatLong(self);
  }
SWIGINTERN int OSRSpatialReferenceShadow_EPSGTreatsAsNorthingEasting(OSRSpatialReferenceShadow *self){
    return OSREPSGTreatsAsNorthingEasting(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetAuthority(OSRSpatialReferenceShadow *self,char const *pszTargetKey,char const *pszAuthority,int nCode){
    return OSRSetAuthority( self, pszTargetKey, pszAuthority, nCode );
  }
SWIGINTERN char const *OSRSpatialReferenceShadow_GetAttrValue(OSRSpatialReferenceShadow *self,char const *name,int child=0){
    return OSRGetAttrValue( self, name, child );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetAttrValue(OSRSpatialReferenceShadow *self,char const *name,char const *value){
    return OSRSetAttrValue( self, name, value ); 
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetAngularUnits(OSRSpatialReferenceShadow *self,char const *name,double to_radians){
    return OSRSetAngularUnits( self, name, to_radians );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetAngularUnits(OSRSpatialReferenceShadow *self){
    // Return code ignored.
    return OSRGetAngularUnits( self, 0 );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTargetLinearUnits(OSRSpatialReferenceShadow *self,char const *target,char const *name,double to_meters){
    return OSRSetTargetLinearUnits( self, target, name, to_meters );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLinearUnits(OSRSpatialReferenceShadow *self,char const *name,double to_meters){
    return OSRSetLinearUnits( self, name, to_meters );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLinearUnitsAndUpdateParameters(OSRSpatialReferenceShadow *self,char const *name,double to_meters){
    return OSRSetLinearUnitsAndUpdateParameters( self, name, to_meters );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetLinearUnits(OSRSpatialReferenceShadow *self){
    // Return code ignored.
    return OSRGetLinearUnits( self, 0 );
  }
SWIGINTERN char const *OSRSpatialReferenceShadow_GetLinearUnitsName(OSRSpatialReferenceShadow *self){
    const char *name = 0;
    if ( OSRIsProjected( self ) ) {
      name = OSRGetAttrValue( self, "PROJCS|UNIT", 0 );
    }
    else if ( OSRIsLocal( self ) ) {
      name = OSRGetAttrValue( self, "LOCAL_CS|UNIT", 0 );
    }

    if (name != 0) 
      return name;

    return "Meter";
  }
SWIGINTERN char const *OSRSpatialReferenceShadow_GetAuthorityCode(OSRSpatialReferenceShadow *self,char const *target_key){
    return OSRGetAuthorityCode( self, target_key );
  }
SWIGINTERN char const *OSRSpatialReferenceShadow_GetAuthorityName(OSRSpatialReferenceShadow *self,char const *target_key){
    return OSRGetAuthorityName( self, target_key );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetUTM(OSRSpatialReferenceShadow *self,int zone,int north=1){
    return OSRSetUTM( self, zone, north );
  }
SWIGINTERN int OSRSpatialReferenceShadow_GetUTMZone(OSRSpatialReferenceShadow *self){
    // Note: we will return south zones as negative since it is 
    // hard to return two values as the C API does. 
    int bNorth = FALSE;
    int nZone = OSRGetUTMZone( self, &bNorth );
    if( !bNorth )
        nZone = -1 * ABS(nZone);
    return nZone;
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetStatePlane(OSRSpatialReferenceShadow *self,int zone,int is_nad83=1,char const *unitsname="",double units=0.0){
    return OSRSetStatePlaneWithUnits( self, zone, is_nad83, unitsname, units );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_AutoIdentifyEPSG(OSRSpatialReferenceShadow *self){
    return OSRAutoIdentifyEPSG( self );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetProjection(OSRSpatialReferenceShadow *self,char const *arg){
    return OSRSetProjection( self, arg );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetProjParm(OSRSpatialReferenceShadow *self,char const *name,double val){
    return OSRSetProjParm( self, name, val ); 
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetProjParm(OSRSpatialReferenceShadow *self,char const *name,double default_val=0.0){
    // Return code ignored.
    return OSRGetProjParm( self, name, default_val, 0 );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetNormProjParm(OSRSpatialReferenceShadow *self,char const *name,double val){
    return OSRSetNormProjParm( self, name, val );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetNormProjParm(OSRSpatialReferenceShadow *self,char const *name,double default_val=0.0){
    // Return code ignored.
    return OSRGetNormProjParm( self, name, default_val, 0 );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetSemiMajor(OSRSpatialReferenceShadow *self){
    // Return code ignored.
    return OSRGetSemiMajor( self, 0 );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetSemiMinor(OSRSpatialReferenceShadow *self){
    // Return code ignored.
    return OSRGetSemiMinor( self, 0 );
  }
SWIGINTERN double OSRSpatialReferenceShadow_GetInvFlattening(OSRSpatialReferenceShadow *self){
    // Return code ignored.
    return OSRGetInvFlattening( self, 0 );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetACEA(OSRSpatialReferenceShadow *self,double stdp1,double stdp2,double clat,double clong,double fe,double fn){
    return OSRSetACEA( self, stdp1, stdp2, clat, clong, 
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetAE(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetAE( self, clat, clong, 
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetBonne(OSRSpatialReferenceShadow *self,double stdp,double cm,double fe,double fn){
    return OSRSetBonne( self, stdp, cm, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetCEA(OSRSpatialReferenceShadow *self,double stdp1,double cm,double fe,double fn){
    return OSRSetCEA( self, stdp1, cm, 
                      fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetCS(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetCS( self, clat, clong, 
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetEC(OSRSpatialReferenceShadow *self,double stdp1,double stdp2,double clat,double clong,double fe,double fn){
    return OSRSetEC( self, stdp1, stdp2, clat, clong, 
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetEckertIV(OSRSpatialReferenceShadow *self,double cm,double fe,double fn){
    return OSRSetEckertIV( self, cm, fe, fn);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetEckertVI(OSRSpatialReferenceShadow *self,double cm,double fe,double fn){
    return OSRSetEckertVI( self, cm, fe, fn);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetEquirectangular(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetEquirectangular( self, clat, clong, 
                                  fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetEquirectangular2(OSRSpatialReferenceShadow *self,double clat,double clong,double pseudostdparallellat,double fe,double fn){
    return OSRSetEquirectangular2( self, clat, clong,
                                   pseudostdparallellat,
                                   fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGaussSchreiberTMercator(OSRSpatialReferenceShadow *self,double clat,double clong,double sc,double fe,double fn){
    return OSRSetGaussSchreiberTMercator( self, clat, clong, sc, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGS(OSRSpatialReferenceShadow *self,double cm,double fe,double fn){
    return OSRSetGS( self, cm, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGH(OSRSpatialReferenceShadow *self,double cm,double fe,double fn){
    return OSRSetGH( self, cm, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetIGH(OSRSpatialReferenceShadow *self){
    return OSRSetIGH( self );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGEOS(OSRSpatialReferenceShadow *self,double cm,double satelliteheight,double fe,double fn){
    return OSRSetGEOS( self, cm, satelliteheight,
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGnomonic(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetGnomonic( self, clat, clong, 
                           fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetHOM(OSRSpatialReferenceShadow *self,double clat,double clong,double azimuth,double recttoskew,double scale,double fe,double fn){
    return OSRSetHOM( self, clat, clong, azimuth, recttoskew,
                      scale, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetHOM2PNO(OSRSpatialReferenceShadow *self,double clat,double dfLat1,double dfLong1,double dfLat2,double dfLong2,double scale,double fe,double fn){
    return OSRSetHOM2PNO( self, clat, dfLat1, dfLong1, dfLat2, dfLong2, 
                          scale, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetKrovak(OSRSpatialReferenceShadow *self,double clat,double clong,double azimuth,double pseudostdparallellat,double scale,double fe,double fn){
    return OSRSetKrovak( self, clat, clong, 
                         azimuth, pseudostdparallellat, 
                         scale, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLAEA(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetLAEA( self, clat, clong, 
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLCC(OSRSpatialReferenceShadow *self,double stdp1,double stdp2,double clat,double clong,double fe,double fn){
    return OSRSetLCC( self, stdp1, stdp2, clat, clong, 
                      fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLCC1SP(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetLCC1SP( self, clat, clong, scale, 
                         fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLCCB(OSRSpatialReferenceShadow *self,double stdp1,double stdp2,double clat,double clong,double fe,double fn){
    return OSRSetLCCB( self, stdp1, stdp2, clat, clong, 
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetMC(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetMC( self, clat, clong,    
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetMercator(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetMercator( self, clat, clong, 
                           scale, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetMollweide(OSRSpatialReferenceShadow *self,double cm,double fe,double fn){
    return OSRSetMollweide( self, cm, 
                            fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetNZMG(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetNZMG( self, clat, clong, 
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetOS(OSRSpatialReferenceShadow *self,double dfOriginLat,double dfCMeridian,double scale,double fe,double fn){
    return OSRSetOS( self, dfOriginLat, dfCMeridian, scale, 
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetOrthographic(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetOrthographic( self, clat, clong, 
                               fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetPolyconic(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetPolyconic( self, clat, clong, 
                            fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetPS(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetPS( self, clat, clong, scale,
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetRobinson(OSRSpatialReferenceShadow *self,double clong,double fe,double fn){
    return OSRSetRobinson( self, clong, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetSinusoidal(OSRSpatialReferenceShadow *self,double clong,double fe,double fn){
    return OSRSetSinusoidal( self, clong, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetStereographic(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetStereographic( self, clat, clong, scale, 
                                fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetSOC(OSRSpatialReferenceShadow *self,double latitudeoforigin,double cm,double fe,double fn){
    return OSRSetSOC( self, latitudeoforigin, cm,
	              fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTM(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetTM( self, clat, clong, scale, 
                     fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTMVariant(OSRSpatialReferenceShadow *self,char const *pszVariantName,double clat,double clong,double scale,double fe,double fn){
    return OSRSetTMVariant( self, pszVariantName, clat, clong,  
                            scale, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTMG(OSRSpatialReferenceShadow *self,double clat,double clong,double fe,double fn){
    return OSRSetTMG( self, clat, clong, 
                      fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTMSO(OSRSpatialReferenceShadow *self,double clat,double clong,double scale,double fe,double fn){
    return OSRSetTMSO( self, clat, clong, scale, 
                       fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetVDG(OSRSpatialReferenceShadow *self,double clong,double fe,double fn){
    return OSRSetVDG( self, clong, fe, fn );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetWellKnownGeogCS(OSRSpatialReferenceShadow *self,char const *name){
    return OSRSetWellKnownGeogCS( self, name );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetFromUserInput(OSRSpatialReferenceShadow *self,char const *name){
    return OSRSetFromUserInput( self, name );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_CopyGeogCSFrom(OSRSpatialReferenceShadow *self,OSRSpatialReferenceShadow *rhs){
    return OSRCopyGeogCSFrom( self, rhs );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetTOWGS84(OSRSpatialReferenceShadow *self,double p1,double p2,double p3,double p4=0.0,double p5=0.0,double p6=0.0,double p7=0.0){

    return OSRSetTOWGS84( self, p1, p2, p3, p4, p5, p6, p7 );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_GetTOWGS84(OSRSpatialReferenceShadow *self,double argout[7]){
    return OSRGetTOWGS84( self, argout, 7 );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetLocalCS(OSRSpatialReferenceShadow *self,char const *pszName){
    return OSRSetLocalCS( self, pszName );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGeogCS(OSRSpatialReferenceShadow *self,char const *pszGeogName,char const *pszDatumName,char const *pszEllipsoidName,double dfSemiMajor,double dfInvFlattening,char const *pszPMName="Greenwich",double dfPMOffset=0.0,char const *pszUnits="degree",double dfConvertToRadians=0.0174532925199433){
    return OSRSetGeogCS( self, pszGeogName, pszDatumName, pszEllipsoidName,
                         dfSemiMajor, dfInvFlattening,
                         pszPMName, dfPMOffset, pszUnits, dfConvertToRadians );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetProjCS(OSRSpatialReferenceShadow *self,char const *name="unnamed"){
    return OSRSetProjCS( self, name );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetGeocCS(OSRSpatialReferenceShadow *self,char const *name="unnamed"){
    return OSRSetGeocCS( self, name );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetVertCS(OSRSpatialReferenceShadow *self,char const *VertCSName="unnamed",char const *VertDatumName="unnamed",int VertDatumType=0){
    return OSRSetVertCS( self, VertCSName, VertDatumName, VertDatumType );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_SetCompoundCS(OSRSpatialReferenceShadow *self,char const *name,OSRSpatialReferenceShadow *horizcs,OSRSpatialReferenceShadow *vertcs){
    return OSRSetCompoundCS( self, name, horizcs, vertcs );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromWkt(OSRSpatialReferenceShadow *self,char **ppszInput){
    return OSRImportFromWkt( self, ppszInput );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromProj4(OSRSpatialReferenceShadow *self,char *ppszInput){
    return OSRImportFromProj4( self, ppszInput );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromUrl(OSRSpatialReferenceShadow *self,char *url){
    return OSRImportFromUrl( self, url );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromESRI(OSRSpatialReferenceShadow *self,char **ppszInput){
    return OSRImportFromESRI( self, ppszInput );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromEPSG(OSRSpatialReferenceShadow *self,int arg){
    return OSRImportFromEPSG(self, arg);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromEPSGA(OSRSpatialReferenceShadow *self,int arg){
    return OSRImportFromEPSGA(self, arg);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromPCI(OSRSpatialReferenceShadow *self,char const *proj,char const *units="METRE",double argin[17]=0){
    return OSRImportFromPCI( self, proj, units, argin );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromUSGS(OSRSpatialReferenceShadow *self,long proj_code,long zone=0,double argin[15]=0,long datum_code=0){
    return OSRImportFromUSGS( self, proj_code, zone, argin, datum_code );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromXML(OSRSpatialReferenceShadow *self,char const *xmlString){
    return OSRImportFromXML( self, xmlString );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromERM(OSRSpatialReferenceShadow *self,char const *proj,char const *datum,char const *units){
    return OSRImportFromERM( self, proj, datum, units );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromMICoordSys(OSRSpatialReferenceShadow *self,char const *pszCoordSys){
    return OSRImportFromMICoordSys( self, pszCoordSys );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ImportFromOzi(OSRSpatialReferenceShadow *self,char const *const *papszLines){
    return OSRImportFromOzi( self, papszLines );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToWkt(OSRSpatialReferenceShadow *self,char **argout){
    return OSRExportToWkt( self, argout );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToPrettyWkt(OSRSpatialReferenceShadow *self,char **argout,int simplify=0){
    return OSRExportToPrettyWkt( self, argout, simplify );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToProj4(OSRSpatialReferenceShadow *self,char **argout){
    return OSRExportToProj4( self, argout );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToPCI(OSRSpatialReferenceShadow *self,char **proj,char **units,double *parms[17]){
    return OSRExportToPCI( self, proj, units, parms );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToUSGS(OSRSpatialReferenceShadow *self,long *code,long *zone,double *parms[15],long *datum){
    return OSRExportToUSGS( self, code, zone, parms, datum );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToXML(OSRSpatialReferenceShadow *self,char **argout,char const *dialect=""){
    return OSRExportToXML( self, argout, dialect );
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_ExportToMICoordSys(OSRSpatialReferenceShadow *self,char **argout){
    return OSRExportToMICoordSys( self, argout );
  }
SWIGINTERN OSRSpatialReferenceShadow *OSRSpatialReferenceShadow_CloneGeogCS(OSRSpatialReferenceShadow *self){
    return (OSRSpatialReferenceShadow*) OSRCloneGeogCS(self);
  }
SWIGINTERN OSRSpatialReferenceShadow *OSRSpatialReferenceShadow_Clone(OSRSpatialReferenceShadow *self){
    return (OSRSpatialReferenceShadow*) OSRClone(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_Validate(OSRSpatialReferenceShadow *self){
    return OSRValidate(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_StripCTParms(OSRSpatialReferenceShadow *self){
    return OSRStripCTParms(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_FixupOrdering(OSRSpatialReferenceShadow *self){
    return OSRFixupOrdering(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_Fixup(OSRSpatialReferenceShadow *self){
    return OSRFixup(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_MorphToESRI(OSRSpatialReferenceShadow *self){
    return OSRMorphToESRI(self);
  }
SWIGINTERN OGRErr OSRSpatialReferenceShadow_MorphFromESRI(OSRSpatialReferenceShadow *self){
    return OSRMorphFromESRI(self);
  }
SWIGINTERN OSRCoordinateTransformationShadow *new_OSRCoordinateTransformationShadow(OSRSpatialReferenceShadow *src,OSRSpatialReferenceShadow *dst){
    OSRCoordinateTransformationShadow *obj = (OSRCoordinateTransformationShadow*) OCTNewCoordinateTransformation( src, dst );
    return obj;
  }
SWIGINTERN void delete_OSRCoordinateTransformationShadow(OSRCoordinateTransformationShadow *self){
    OCTDestroyCoordinateTransformation( self );
  }
SWIGINTERN void OSRCoordinateTransformationShadow_TransformPoint__SWIG_0(OSRCoordinateTransformationShadow *self,double inout[3]){
    if (self == NULL)
        return;
    OCTTransform( self, 1, &inout[0], &inout[1], &inout[2] );
  }
SWIGINTERN void OSRCoordinateTransformationShadow_TransformPoint__SWIG_1(OSRCoordinateTransformationShadow *self,double argout[3],double x,double y,double z=0.0){
    if (self == NULL)
        return;
    argout[0] = x;
    argout[1] = y;
    argout[2] = z;
    OCTTransform( self, 1, &argout[0], &argout[1], &argout[2] );
  }
SWIGINTERN void OSRCoordinateTransformationShadow_TransformPoints(OSRCoordinateTransformationShadow *self,int nCount,double *x,double *y,double *z){
    if (self == NULL)
        return;
    OCTTransform( self, nCount, x, y, z );
  }

  OSRCoordinateTransformationShadow *CreateCoordinateTransformation( OSRSpatialReferenceShadow *src, OSRSpatialReferenceShadow *dst ) {
    OSRCoordinateTransformationShadow *obj = (OSRCoordinateTransformationShadow*) OCTNewCoordinateTransformation( src, dst );
    return obj;
}

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_osr_b6aadf85dd55cdd7(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


_gostring_ _wrap_SRS_WKT_WGS84_osr_b6aadf85dd55cdd7() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = "GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]";
  
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_GetWellKnownGeogCSAsWKT_osr_b6aadf85dd55cdd7(_gostring_ _swig_go_0, _gostring_* _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  arg2 = *(char ***)&_swig_go_1; 
  
  {
    if (!arg1) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)GetWellKnownGeogCSAsWKT((char const *)arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetUserInputAsWKT_osr_b6aadf85dd55cdd7(_gostring_ _swig_go_0, _gostring_* _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  arg2 = *(char ***)&_swig_go_1; 
  
  {
    if (!arg1) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)GetUserInputAsWKT((char const *)arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_* _wrap_GetProjectionMethods_osr_b6aadf85dd55cdd7() {
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  
  result = (char **)OPTGetProjectionMethods();
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


_gostring_* _wrap_GetProjectionMethodParameterList_osr_b6aadf85dd55cdd7(_gostring_ _swig_go_0, _gostring_* _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  char **result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (char **)OPTGetParameterList(arg1,arg2);
  *(char ***)&_swig_go_result = (char **)result; 
  return _swig_go_result;
}


void _wrap_GetProjectionMethodParamInfo_osr_b6aadf85dd55cdd7(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_* _swig_go_2, _gostring_* _swig_go_3, double *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  char **arg4 = (char **) 0 ;
  double *arg5 = (double *) 0 ;
  
  arg1 = (char *)_swig_go_0.p; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(char ***)&_swig_go_3; 
  arg5 = *(double **)&_swig_go_4; 
  
  OPTGetParameterInfo(arg1,arg2,arg3,arg4,arg5);
  
}


OSRSpatialReferenceShadow *_wrap_new_SpatialReference_osr_b6aadf85dd55cdd7(intgo _swig_optargc, _gostring_ _swig_go_0) {
  char *arg1 = (char *) "" ;
  OSRSpatialReferenceShadow *result = 0 ;
  OSRSpatialReferenceShadow *_swig_go_result;
  
  if (_swig_optargc > 0) {
    arg1 = (char *)_swig_go_0.p; 
  }
  
  result = (OSRSpatialReferenceShadow *)new_OSRSpatialReferenceShadow((char const *)arg1);
  *(OSRSpatialReferenceShadow **)&_swig_go_result = (OSRSpatialReferenceShadow *)result; 
  return _swig_go_result;
}


void _wrap_delete_SpatialReference_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  delete_OSRSpatialReferenceShadow(arg1);
  
}


_gostring_ _wrap_SpatialReference___str___osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (char *)OSRSpatialReferenceShadow___str__(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  delete [] result;
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsSame_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (int)OSRSpatialReferenceShadow_IsSame(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsSameGeogCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (int)OSRSpatialReferenceShadow_IsSameGeogCS(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsSameVertCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (int)OSRSpatialReferenceShadow_IsSameVertCS(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsGeographic_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsGeographic(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsProjected_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsProjected(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsCompound_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsCompound(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsGeocentric_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsGeocentric(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsLocal_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsLocal(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_IsVertical_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_IsVertical(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_EPSGTreatsAsLatLong_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_EPSGTreatsAsLatLong(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_EPSGTreatsAsNorthingEasting_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_EPSGTreatsAsNorthingEasting(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetAuthority_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (int)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetAuthority(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_SpatialReference_GetAttrValue_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 = (int) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  if (_swig_optargc > 0) {
    arg3 = (int)_swig_go_2; 
  }
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (char *)OSRSpatialReferenceShadow_GetAttrValue(arg1,(char const *)arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetAttrValue_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (char *)_swig_go_2.p; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetAttrValue(arg1,(char const *)arg2,(char const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetAngularUnits_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetAngularUnits(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetAngularUnits_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (double)OSRSpatialReferenceShadow_GetAngularUnits(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTargetLinearUnits_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (double)_swig_go_3; 
  
  {
    if (!arg3) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTargetLinearUnits(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLinearUnits_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLinearUnits(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLinearUnitsAndUpdateParameters_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLinearUnitsAndUpdateParameters(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetLinearUnits_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (double)OSRSpatialReferenceShadow_GetLinearUnits(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_SpatialReference_GetLinearUnitsName_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (char *)OSRSpatialReferenceShadow_GetLinearUnitsName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SpatialReference_GetAuthorityCode_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (char *)OSRSpatialReferenceShadow_GetAuthorityCode(arg1,(char const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SpatialReference_GetAuthorityName_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (char *)OSRSpatialReferenceShadow_GetAuthorityName(arg1,(char const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetUTM_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int arg2 ;
  int arg3 = (int) 1 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  if (_swig_optargc > 0) {
    arg3 = (int)_swig_go_2; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetUTM(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_GetUTMZone_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (int)OSRSpatialReferenceShadow_GetUTMZone(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetStatePlane_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int arg2 ;
  int arg3 = (int) 1 ;
  char *arg4 = (char *) "" ;
  double arg5 = (double) 0.0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  if (_swig_optargc > 0) {
    arg3 = (int)_swig_go_2; 
  }
  if (_swig_optargc > 1) {
    arg4 = (char *)_swig_go_3.p; 
  }
  if (_swig_optargc > 2) {
    arg5 = (double)_swig_go_4; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetStatePlane(arg1,arg2,arg3,(char const *)arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_AutoIdentifyEPSG_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_AutoIdentifyEPSG(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetProjection_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetProjection(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetProjParm_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetProjParm(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetProjParm_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 = (double) 0.0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  if (_swig_optargc > 0) {
    arg3 = (double)_swig_go_2; 
  }
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (double)OSRSpatialReferenceShadow_GetProjParm(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetNormProjParm_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetNormProjParm(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetNormProjParm_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 = (double) 0.0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  if (_swig_optargc > 0) {
    arg3 = (double)_swig_go_2; 
  }
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (double)OSRSpatialReferenceShadow_GetNormProjParm(arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetSemiMajor_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (double)OSRSpatialReferenceShadow_GetSemiMajor(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetSemiMinor_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (double)OSRSpatialReferenceShadow_GetSemiMinor(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_SpatialReference_GetInvFlattening_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (double)OSRSpatialReferenceShadow_GetInvFlattening(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetACEA_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetACEA(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetAE_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetAE(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetBonne_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetBonne(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetCEA_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetCEA(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetCS(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetEC_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetEC(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetEckertIV_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetEckertIV(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetEckertVI_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetEckertVI(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetEquirectangular_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetEquirectangular(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetEquirectangular2_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetEquirectangular2(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGaussSchreiberTMercator_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGaussSchreiberTMercator(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGS(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGH_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGH(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetIGH_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetIGH(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGEOS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGEOS(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGnomonic_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGnomonic(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetHOM_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetHOM(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetHOM2PNO_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7, double _swig_go_8) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetHOM2PNO(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetKrovak_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetKrovak(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLAEA_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLAEA(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLCC_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLCC(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLCC1SP_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLCC1SP(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLCCB_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLCCB(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetMC_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetMC(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetMercator_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetMercator(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetMollweide_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetMollweide(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetNZMG_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetNZMG(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetOS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetOS(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetOrthographic_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetOrthographic(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetPolyconic_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetPolyconic(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetPS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetPS(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetRobinson_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetRobinson(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetSinusoidal_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetSinusoidal(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetStereographic_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetStereographic(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetSOC_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetSOC(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTM_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTM(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTMVariant_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTMVariant(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTMG_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTMG(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTMSO_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTMSO(arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetVDG_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetVDG(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetWellKnownGeogCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetWellKnownGeogCS(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetFromUserInput_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetFromUserInput(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_CopyGeogCSFrom_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_CopyGeogCSFrom(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetTOWGS84_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 = (double) 0.0 ;
  double arg6 = (double) 0.0 ;
  double arg7 = (double) 0.0 ;
  double arg8 = (double) 0.0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  if (_swig_optargc > 0) {
    arg5 = (double)_swig_go_4; 
  }
  if (_swig_optargc > 1) {
    arg6 = (double)_swig_go_5; 
  }
  if (_swig_optargc > 2) {
    arg7 = (double)_swig_go_6; 
  }
  if (_swig_optargc > 3) {
    arg8 = (double)_swig_go_7; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetTOWGS84(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_GetTOWGS84_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, double *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  double *arg2 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_GetTOWGS84(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetLocalCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetLocalCS(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGeogCS_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, double _swig_go_4, double _swig_go_5, _gostring_ _swig_go_6, double _swig_go_7, _gostring_ _swig_go_8, double _swig_go_9) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  double arg5 ;
  double arg6 ;
  char *arg7 = (char *) "Greenwich" ;
  double arg8 = (double) 0.0 ;
  char *arg9 = (char *) "degree" ;
  double arg10 = (double) 0.0174532925199433 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (char *)_swig_go_3.p; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  if (_swig_optargc > 0) {
    arg7 = (char *)_swig_go_6.p; 
  }
  if (_swig_optargc > 1) {
    arg8 = (double)_swig_go_7; 
  }
  if (_swig_optargc > 2) {
    arg9 = (char *)_swig_go_8.p; 
  }
  if (_swig_optargc > 3) {
    arg10 = (double)_swig_go_9; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGeogCS(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4,arg5,arg6,(char const *)arg7,arg8,(char const *)arg9,arg10);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetProjCS_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) "unnamed" ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  if (_swig_optargc > 0) {
    arg2 = (char *)_swig_go_1.p; 
  }
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetProjCS(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetGeocCS_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) "unnamed" ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  if (_swig_optargc > 0) {
    arg2 = (char *)_swig_go_1.p; 
  }
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetGeocCS(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetVertCS_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) "unnamed" ;
  char *arg3 = (char *) "unnamed" ;
  int arg4 = (int) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  if (_swig_optargc > 0) {
    arg2 = (char *)_swig_go_1.p; 
  }
  if (_swig_optargc > 1) {
    arg3 = (char *)_swig_go_2.p; 
  }
  if (_swig_optargc > 2) {
    arg4 = (int)_swig_go_3; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetVertCS(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_SetCompoundCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, OSRSpatialReferenceShadow *_swig_go_2, OSRSpatialReferenceShadow *_swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OSRSpatialReferenceShadow *arg3 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg4 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = *(OSRSpatialReferenceShadow **)&_swig_go_2; 
  arg4 = *(OSRSpatialReferenceShadow **)&_swig_go_3; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  {
    if (!arg3) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  {
    if (!arg4) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_SetCompoundCS(arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromWkt_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromWkt(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromProj4_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromProj4(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromUrl_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromUrl(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromESRI_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromESRI(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromEPSG_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, intgo _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int arg2 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromEPSG(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromEPSGA_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, intgo _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  int arg2 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromEPSGA(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromPCI_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) "METRE" ;
  double *arg4 = (double *) (double *)0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  if (_swig_optargc > 0) {
    arg3 = (char *)_swig_go_2.p; 
  }
  if (_swig_optargc > 1) {
    arg4 = *(double **)&_swig_go_3; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromPCI(arg1,(char const *)arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromUSGS_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, long long _swig_go_1, long long _swig_go_2, double *_swig_go_3, long long _swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  long arg2 ;
  long arg3 = (long) 0 ;
  double *arg4 = (double *) (double *)0 ;
  long arg5 = (long) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  if (_swig_optargc > 0) {
    arg3 = (long)_swig_go_2; 
  }
  if (_swig_optargc > 1) {
    arg4 = *(double **)&_swig_go_3; 
  }
  if (_swig_optargc > 2) {
    arg5 = (long)_swig_go_4; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromUSGS(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromXML_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromXML(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromERM_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (char *)_swig_go_3.p; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  {
    if (!arg3) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromERM(arg1,(char const *)arg2,(char const *)arg3,(char const *)arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromMICoordSys_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_ _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char *arg2 = (char *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromMICoordSys(arg1,(char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ImportFromOzi_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  {
    if (!arg2) {
      SWIG_exception(SWIG_ValueError,"Received a NULL pointer.");
    }
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ImportFromOzi(arg1,(char const *const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToWkt_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToWkt(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToPrettyWkt_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1, intgo _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 = (int) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  if (_swig_optargc > 0) {
    arg3 = (int)_swig_go_2; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToPrettyWkt(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToProj4_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToProj4(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToPCI_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1, _gostring_* _swig_go_2, double **_swig_go_3) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  char **arg3 = (char **) 0 ;
  double **arg4 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(double ***)&_swig_go_3; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToPCI(arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToUSGS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, long long *_swig_go_1, long long *_swig_go_2, double **_swig_go_3, long long *_swig_go_4) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  long *arg2 = (long *) 0 ;
  long *arg3 = (long *) 0 ;
  double **arg4 ;
  long *arg5 = (long *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(double ***)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToUSGS(arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToXML_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1, _gostring_ _swig_go_2) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  char *arg3 = (char *) "" ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  if (_swig_optargc > 0) {
    arg3 = (char *)_swig_go_2.p; 
  }
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToXML(arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_ExportToMICoordSys_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, _gostring_* _swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  char **arg2 = (char **) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_ExportToMICoordSys(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


OSRSpatialReferenceShadow *_wrap_SpatialReference_CloneGeogCS_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *result = 0 ;
  OSRSpatialReferenceShadow *_swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OSRSpatialReferenceShadow *)OSRSpatialReferenceShadow_CloneGeogCS(arg1);
  *(OSRSpatialReferenceShadow **)&_swig_go_result = (OSRSpatialReferenceShadow *)result; 
  return _swig_go_result;
}


OSRSpatialReferenceShadow *_wrap_SpatialReference_Clone_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *result = 0 ;
  OSRSpatialReferenceShadow *_swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OSRSpatialReferenceShadow *)OSRSpatialReferenceShadow_Clone(arg1);
  *(OSRSpatialReferenceShadow **)&_swig_go_result = (OSRSpatialReferenceShadow *)result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_Validate_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_Validate(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_StripCTParms_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_StripCTParms(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_FixupOrdering_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_FixupOrdering(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_Fixup_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_Fixup(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_MorphToESRI_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_MorphToESRI(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SpatialReference_MorphFromESRI_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OGRErr result;
  intgo _swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  
  result = (OGRErr)OSRSpatialReferenceShadow_MorphFromESRI(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


OSRCoordinateTransformationShadow *_wrap_new_CoordinateTransformation_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  OSRCoordinateTransformationShadow *result = 0 ;
  OSRCoordinateTransformationShadow *_swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  result = (OSRCoordinateTransformationShadow *)new_OSRCoordinateTransformationShadow(arg1,arg2);
  *(OSRCoordinateTransformationShadow **)&_swig_go_result = (OSRCoordinateTransformationShadow *)result; 
  return _swig_go_result;
}


void _wrap_delete_CoordinateTransformation_osr_b6aadf85dd55cdd7(OSRCoordinateTransformationShadow *_swig_go_0) {
  OSRCoordinateTransformationShadow *arg1 = (OSRCoordinateTransformationShadow *) 0 ;
  
  arg1 = *(OSRCoordinateTransformationShadow **)&_swig_go_0; 
  
  delete_OSRCoordinateTransformationShadow(arg1);
  
}


void _wrap_CoordinateTransformation_TransformPoint__SWIG_0_osr_b6aadf85dd55cdd7(OSRCoordinateTransformationShadow *_swig_go_0, double *_swig_go_1) {
  OSRCoordinateTransformationShadow *arg1 = (OSRCoordinateTransformationShadow *) 0 ;
  double *arg2 ;
  
  arg1 = *(OSRCoordinateTransformationShadow **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  OSRCoordinateTransformationShadow_TransformPoint__SWIG_0(arg1,arg2);
  
}


void _wrap_CoordinateTransformation_TransformPoint__SWIG_1_osr_b6aadf85dd55cdd7(intgo _swig_optargc, OSRCoordinateTransformationShadow *_swig_go_0, double *_swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  OSRCoordinateTransformationShadow *arg1 = (OSRCoordinateTransformationShadow *) 0 ;
  double *arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 = (double) 0.0 ;
  
  arg1 = *(OSRCoordinateTransformationShadow **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  if (_swig_optargc > 0) {
    arg5 = (double)_swig_go_4; 
  }
  
  OSRCoordinateTransformationShadow_TransformPoint__SWIG_1(arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_CoordinateTransformation_TransformPoints_osr_b6aadf85dd55cdd7(OSRCoordinateTransformationShadow *_swig_go_0, intgo _swig_go_1, double *_swig_go_2, double *_swig_go_3, double *_swig_go_4) {
  OSRCoordinateTransformationShadow *arg1 = (OSRCoordinateTransformationShadow *) 0 ;
  int arg2 ;
  double *arg3 = (double *) 0 ;
  double *arg4 = (double *) 0 ;
  double *arg5 = (double *) 0 ;
  
  arg1 = *(OSRCoordinateTransformationShadow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(double **)&_swig_go_3; 
  arg5 = *(double **)&_swig_go_4; 
  
  OSRCoordinateTransformationShadow_TransformPoints(arg1,arg2,arg3,arg4,arg5);
  
}


OSRCoordinateTransformationShadow *_wrap_CreateCoordinateTransformation_osr_b6aadf85dd55cdd7(OSRSpatialReferenceShadow *_swig_go_0, OSRSpatialReferenceShadow *_swig_go_1) {
  OSRSpatialReferenceShadow *arg1 = (OSRSpatialReferenceShadow *) 0 ;
  OSRSpatialReferenceShadow *arg2 = (OSRSpatialReferenceShadow *) 0 ;
  OSRCoordinateTransformationShadow *result = 0 ;
  OSRCoordinateTransformationShadow *_swig_go_result;
  
  arg1 = *(OSRSpatialReferenceShadow **)&_swig_go_0; 
  arg2 = *(OSRSpatialReferenceShadow **)&_swig_go_1; 
  
  result = (OSRCoordinateTransformationShadow *)CreateCoordinateTransformation(arg1,arg2);
  *(OSRCoordinateTransformationShadow **)&_swig_go_result = (OSRCoordinateTransformationShadow *)result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

