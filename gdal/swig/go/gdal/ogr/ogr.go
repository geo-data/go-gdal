/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ../include/ogr.i

package ogr

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _gostring_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef _gostring_ swig_type_43;
typedef _gostring_ swig_type_44;
typedef _gostring_ swig_type_45;
typedef _gostring_ swig_type_46;
typedef _gostring_ swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _gostring_ swig_type_50;
typedef _gostring_ swig_type_51;
typedef _goslice_ swig_type_52;
typedef _goslice_ swig_type_53;
typedef _goslice_ swig_type_54;
typedef _goslice_ swig_type_55;
typedef _goslice_ swig_type_56;
typedef _goslice_ swig_type_57;
typedef _goslice_ swig_type_58;
typedef _gostring_ swig_type_59;
typedef _gostring_ swig_type_60;
typedef _gostring_ swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef _gostring_ swig_type_65;
typedef _gostring_ swig_type_66;
typedef _gostring_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef _gostring_ swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef _gostring_ swig_type_74;
typedef _gostring_ swig_type_75;
typedef _gostring_ swig_type_76;
typedef _gostring_ swig_type_77;
typedef _gostring_ swig_type_78;
typedef _gostring_ swig_type_79;
typedef _gostring_ swig_type_80;
typedef _gostring_ swig_type_81;
typedef _gostring_ swig_type_82;
typedef _gostring_ swig_type_83;
typedef _gostring_ swig_type_84;
typedef _gostring_ swig_type_85;
typedef _gostring_ swig_type_86;
typedef _gostring_ swig_type_87;
typedef _gostring_ swig_type_88;
typedef _gostring_ swig_type_89;
typedef _gostring_ swig_type_90;
typedef _gostring_ swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
typedef _gostring_ swig_type_106;
typedef _gostring_ swig_type_107;
typedef _gostring_ swig_type_108;
typedef _gostring_ swig_type_109;
typedef _gostring_ swig_type_110;
typedef _gostring_ swig_type_111;
extern void _wrap_Swig_free_ogr_83306ddead628923(uintptr_t arg1);

// "gdal.h" is needed to declare GDALProgressFunc.
#include "gdal.h"

// "cpl_string.h" is needed to declare CSLDestroy.
#include "cpl_string.h"

// We need to link against GDAL when building the Go module.
#cgo LDFLAGS: -lgdal

extern swig_type_1 _wrap_MajorObject_GetDescription_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_MajorObject_SetDescription_ogr_83306ddead628923(uintptr_t arg1, swig_type_2 arg2);
extern swig_voidp _wrap_MajorObject_GetMetadataDomainList_ogr_83306ddead628923(uintptr_t arg1);
extern swig_voidp _wrap_MajorObject_GetMetadata_Dict_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_3 arg2);
extern swig_voidp _wrap_MajorObject_GetMetadata_List_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_4 arg2);
extern swig_intgo _wrap_MajorObject_SetMetadata__SWIG_0_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_type_5 arg3);
extern swig_intgo _wrap_MajorObject_SetMetadata__SWIG_1_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_6 arg2, swig_type_7 arg3);
extern swig_type_8 _wrap_MajorObject_GetMetadataItem_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_9 arg2, swig_type_10 arg3);
extern swig_intgo _wrap_MajorObject_SetMetadataItem_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_11 arg2, swig_type_12 arg3, swig_type_13 arg4);
extern uintptr_t _wrap_new_StyleTable_ogr_83306ddead628923(void);
extern void _wrap_delete_StyleTable_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_StyleTable_AddStyle_ogr_83306ddead628923(uintptr_t arg1, swig_type_14 arg2, swig_type_15 arg3);
extern swig_intgo _wrap_StyleTable_LoadStyleTable_ogr_83306ddead628923(uintptr_t arg1, swig_type_16 arg2);
extern swig_intgo _wrap_StyleTable_SaveStyleTable_ogr_83306ddead628923(uintptr_t arg1, swig_type_17 arg2);
extern swig_type_18 _wrap_StyleTable_Find_ogr_83306ddead628923(uintptr_t arg1, swig_type_19 arg2);
extern void _wrap_StyleTable_ResetStyleStringReading_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_20 _wrap_StyleTable_GetNextStyle_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_21 _wrap_StyleTable_GetLastStyleName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_22 _wrap_Driver_name_get_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Driver_CreateDataSource_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_23 arg2, swig_voidp arg3);
extern uintptr_t _wrap_Driver_CopyDataSource_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_type_24 arg3, swig_voidp arg4);
extern uintptr_t _wrap_Driver_Open_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_25 arg2, swig_intgo arg3);
extern swig_intgo _wrap_Driver_DeleteDataSource_ogr_83306ddead628923(uintptr_t arg1, swig_type_26 arg2);
extern _Bool _wrap_Driver_TestCapability_ogr_83306ddead628923(uintptr_t arg1, swig_type_27 arg2);
extern void _wrap_Driver_Register_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Driver_Deregister_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_28 _wrap_DataSource_name_get_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_delete_DataSource_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_DataSource_GetRefCount_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_DataSource_GetSummaryRefCount_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_DataSource_GetLayerCount_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_DataSource_GetDriver_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_DataSource_DeleteLayer_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DataSource_SyncToDisk_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_DataSource_FlushCache_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_DataSource_CreateLayer_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_29 arg2, uintptr_t arg3, swig_intgo arg4, swig_voidp arg5);
extern uintptr_t _wrap_DataSource_CopyLayer_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_type_30 arg3, swig_voidp arg4);
extern uintptr_t _wrap_DataSource_GetLayerByIndex_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DataSource_GetLayerByName_ogr_83306ddead628923(uintptr_t arg1, swig_type_31 arg2);
extern _Bool _wrap_DataSource_TestCapability_ogr_83306ddead628923(uintptr_t arg1, swig_type_32 arg2);
extern uintptr_t _wrap_DataSource_ExecuteSQL_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_33 arg2, uintptr_t arg3, swig_type_34 arg4);
extern void _wrap_DataSource_ReleaseResultSet_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DataSource_GetStyleTable_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_DataSource_SetStyleTable_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DataSource_StartTransaction_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DataSource_CommitTransaction_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_DataSource_RollbackTransaction_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_GetRefCount_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Layer_SetSpatialFilter__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Layer_SetSpatialFilterRect__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, double arg2, double arg3, double arg4, double arg5);
extern void _wrap_Layer_SetSpatialFilter__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_Layer_SetSpatialFilterRect__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, double arg3, double arg4, double arg5, double arg6);
extern uintptr_t _wrap_Layer_GetSpatialFilter_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_SetAttributeFilter_ogr_83306ddead628923(uintptr_t arg1, swig_type_35 arg2);
extern void _wrap_Layer_ResetReading_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_36 _wrap_Layer_GetName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_GetGeomType_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_37 _wrap_Layer_GetGeometryColumn_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_38 _wrap_Layer_GetFIDColumn_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Layer_GetFeature_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Layer_GetNextFeature_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_SetNextByIndex_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Layer_SetFeature_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Layer_CreateFeature_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Layer_DeleteFeature_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Layer_SyncToDisk_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Layer_GetLayerDefn_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Layer_GetFeatureCount_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Layer_GetExtent_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_Layer_TestCapability_ogr_83306ddead628923(uintptr_t arg1, swig_type_39 arg2);
extern swig_intgo _wrap_Layer_CreateField_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Layer_DeleteField_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Layer_ReorderField_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_Layer_ReorderFields_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_intgo _wrap_Layer_AlterFieldDefn_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4);
extern swig_intgo _wrap_Layer_CreateGeomField_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Layer_StartTransaction_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_CommitTransaction_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_RollbackTransaction_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_FindFieldIndex_ogr_83306ddead628923(uintptr_t arg1, swig_type_40 arg2, swig_intgo arg3);
extern uintptr_t _wrap_Layer_GetSpatialRef_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Layer_GetFeaturesRead_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Layer_SetIgnoredFields_ogr_83306ddead628923(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_Layer_Intersection_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_Union_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_SymDifference_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_Identity_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_Update_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_Clip_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern swig_intgo _wrap_Layer_Erase_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_voidp arg4, GDALProgressFunc arg5, swig_voidp arg6);
extern uintptr_t _wrap_Layer_GetStyleTable_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Layer_SetStyleTable_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_Feature_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_new_Feature_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Feature_GetDefnRef_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Feature_SetGeometry_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Feature_SetGeometryDirectly_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Feature_GetGeometryRef_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Feature_SetGeomField__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_intgo _wrap_Feature_SetGeomField__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_41 arg2, uintptr_t arg3);
extern swig_intgo _wrap_Feature_SetGeomFieldDirectly__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_intgo _wrap_Feature_SetGeomFieldDirectly__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_42 arg2, uintptr_t arg3);
extern uintptr_t _wrap_Feature_GetGeomFieldRef__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Feature_GetGeomFieldRef__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_43 arg2);
extern uintptr_t _wrap_Feature_Clone_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Feature_Equal_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Feature_GetFieldCount_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Feature_GetFieldDefnRef__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Feature_GetFieldDefnRef__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_44 arg2);
extern swig_intgo _wrap_Feature_GetGeomFieldCount_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Feature_GetGeomFieldDefnRef__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Feature_GetGeomFieldDefnRef__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_45 arg2);
extern swig_type_46 _wrap_Feature_GetFieldAsString__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_type_47 _wrap_Feature_GetFieldAsString__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_48 arg2);
extern swig_intgo _wrap_Feature_GetFieldAsInteger__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Feature_GetFieldAsInteger__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_49 arg2);
extern uintptr_t _wrap_Feature_GetFieldAsInteger64__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Feature_GetFieldAsInteger64__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_50 arg2);
extern double _wrap_Feature_GetFieldAsDouble__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern double _wrap_Feature_GetFieldAsDouble__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_51 arg2);
extern void _wrap_Feature_GetFieldAsDateTime_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_type_52 arg3, swig_type_53 arg4, swig_type_54 arg5, swig_type_55 arg6, swig_type_56 arg7, swig_type_57 arg8, swig_type_58 arg9);
extern void _wrap_Feature_GetFieldAsIntegerList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_Feature_GetFieldAsDoubleList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_Feature_GetFieldAsStringList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_intgo _wrap_Feature_GetFieldAsBinary__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_intgo _wrap_Feature_GetFieldAsBinary__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_59 arg2, swig_voidp arg3, swig_voidp arg4);
extern _Bool _wrap_Feature_IsFieldSet__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_Feature_IsFieldSet__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_60 arg2);
extern swig_intgo _wrap_Feature_GetFieldIndex_ogr_83306ddead628923(uintptr_t arg1, swig_type_61 arg2);
extern swig_intgo _wrap_Feature_GetGeomFieldIndex_ogr_83306ddead628923(uintptr_t arg1, swig_type_62 arg2);
extern uintptr_t _wrap_Feature_GetFID_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Feature_SetFID_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Feature_DumpReadable_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Feature_UnsetField__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Feature_UnsetField__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_63 arg2);
extern void _wrap_Feature_SetField__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_type_64 arg3);
extern void _wrap_Feature_SetField__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_65 arg2, swig_type_66 arg3);
extern void _wrap_Feature_SetFieldInteger64_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_Feature_SetField__SWIG_2_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_Feature_SetField__SWIG_3_ogr_83306ddead628923(uintptr_t arg1, swig_type_67 arg2, swig_intgo arg3);
extern void _wrap_Feature_SetField__SWIG_4_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, double arg3);
extern void _wrap_Feature_SetField__SWIG_5_ogr_83306ddead628923(uintptr_t arg1, swig_type_68 arg2, double arg3);
extern void _wrap_Feature_SetField__SWIG_6_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_intgo arg7, float arg8, swig_intgo arg9);
extern void _wrap_Feature_SetField__SWIG_7_ogr_83306ddead628923(uintptr_t arg1, swig_type_69 arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_intgo arg7, float arg8, swig_intgo arg9);
extern void _wrap_Feature_SetFieldIntegerList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_voidp arg4);
extern void _wrap_Feature_SetFieldDoubleList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_voidp arg4);
extern void _wrap_Feature_SetFieldStringList_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern void _wrap_Feature_SetFieldBinaryFromHexString__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, swig_type_70 arg3);
extern void _wrap_Feature_SetFieldBinaryFromHexString__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_71 arg2, swig_type_72 arg3);
extern swig_intgo _wrap_Feature_SetFrom_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Feature_SetFromWithMap_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_type_73 _wrap_Feature_GetStyleString_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Feature_SetStyleString_ogr_83306ddead628923(uintptr_t arg1, swig_type_74 arg2);
extern swig_intgo _wrap_Feature_GetFieldType__SWIG_0_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Feature_GetFieldType__SWIG_1_ogr_83306ddead628923(uintptr_t arg1, swig_type_75 arg2);
extern swig_intgo _wrap_Feature_Validate_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_Feature_FillUnsetWithDefault_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_type_76 _wrap_Feature_GetNativeData_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_77 _wrap_Feature_GetNativeMediaType_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Feature_SetNativeData_ogr_83306ddead628923(uintptr_t arg1, swig_type_78 arg2);
extern void _wrap_Feature_SetNativeMediaType_ogr_83306ddead628923(uintptr_t arg1, swig_type_79 arg2);
extern void _wrap_delete_FeatureDefn_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_new_FeatureDefn_ogr_83306ddead628923(intgo _swig_args, swig_type_80 arg1);
extern swig_type_81 _wrap_FeatureDefn_GetName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_FeatureDefn_GetFieldCount_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_FeatureDefn_GetFieldDefn_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_GetFieldIndex_ogr_83306ddead628923(uintptr_t arg1, swig_type_82 arg2);
extern void _wrap_FeatureDefn_AddFieldDefn_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_FeatureDefn_GetGeomFieldCount_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_FeatureDefn_GetGeomFieldDefn_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_GetGeomFieldIndex_ogr_83306ddead628923(uintptr_t arg1, swig_type_83 arg2);
extern void _wrap_FeatureDefn_AddGeomFieldDefn_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_FeatureDefn_DeleteGeomFieldDefn_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_GetGeomType_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FeatureDefn_SetGeomType_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_GetReferenceCount_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_FeatureDefn_IsGeometryIgnored_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FeatureDefn_SetGeometryIgnored_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_IsStyleIgnored_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FeatureDefn_SetStyleIgnored_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FeatureDefn_IsSame_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_FieldDefn_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_new_FieldDefn_ogr_83306ddead628923(intgo _swig_args, swig_type_84 arg1, swig_intgo arg2);
extern swig_type_85 _wrap_FieldDefn_GetName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_86 _wrap_FieldDefn_GetNameRef_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetName_ogr_83306ddead628923(uintptr_t arg1, swig_type_87 arg2);
extern swig_intgo _wrap_FieldDefn_GetType_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetType_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_GetSubType_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetSubType_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_GetJustify_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetJustify_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_GetWidth_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetWidth_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_GetPrecision_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetPrecision_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_type_88 _wrap_FieldDefn_GetTypeName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_89 _wrap_FieldDefn_GetFieldTypeName_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_IsIgnored_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetIgnored_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FieldDefn_IsNullable_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetNullable_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_type_90 _wrap_FieldDefn_GetDefault_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_FieldDefn_SetDefault_ogr_83306ddead628923(uintptr_t arg1, swig_type_91 arg2);
extern swig_intgo _wrap_FieldDefn_IsDefaultDriverSpecific_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_delete_GeomFieldDefn_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_new_GeomFieldDefn_ogr_83306ddead628923(intgo _swig_args, swig_type_92 arg1, swig_intgo arg2);
extern swig_type_93 _wrap_GeomFieldDefn_GetName_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_94 _wrap_GeomFieldDefn_GetNameRef_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_GeomFieldDefn_SetName_ogr_83306ddead628923(uintptr_t arg1, swig_type_95 arg2);
extern swig_intgo _wrap_GeomFieldDefn_GetType_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_GeomFieldDefn_SetType_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_GeomFieldDefn_GetSpatialRef_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_GeomFieldDefn_SetSpatialRef_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_GeomFieldDefn_IsIgnored_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_GeomFieldDefn_SetIgnored_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_GeomFieldDefn_IsNullable_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_GeomFieldDefn_SetNullable_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_CreateGeometryFromWkb_ogr_83306ddead628923(intgo _swig_args, swig_intgo arg1, swig_type_96 arg2, uintptr_t arg3);
extern uintptr_t _wrap_CreateGeometryFromWkt_ogr_83306ddead628923(intgo _swig_args, swig_voidp arg1, uintptr_t arg2);
extern uintptr_t _wrap_CreateGeometryFromGML_ogr_83306ddead628923(swig_type_97 arg1);
extern uintptr_t _wrap_CreateGeometryFromJson_ogr_83306ddead628923(swig_type_98 arg1);
extern uintptr_t _wrap_BuildPolygonFromEdges_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, double arg4);
extern uintptr_t _wrap_ApproximateArcAngles_ogr_83306ddead628923(double arg1, double arg2, double arg3, double arg4, double arg5, double arg6, double arg7, double arg8, double arg9);
extern uintptr_t _wrap_ForceToPolygon_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_ForceToLineString_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_ForceToMultiPolygon_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_ForceToMultiPoint_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_ForceToMultiLineString_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_ForceTo_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern void _wrap_delete_Geometry_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_new_Geometry_ogr_83306ddead628923(intgo _swig_args, swig_intgo arg1, swig_type_99 arg2, swig_intgo arg3, swig_type_100 arg4, swig_type_101 arg5);
extern swig_intgo _wrap_Geometry_ExportToWkt_ogr_83306ddead628923(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_Geometry_ExportToIsoWkt_ogr_83306ddead628923(uintptr_t arg1, swig_voidp arg2);
extern swig_intgo _wrap_Geometry_ExportToWkb_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_intgo _wrap_Geometry_ExportToIsoWkb_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_type_102 _wrap_Geometry_ExportToGML_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_103 _wrap_Geometry_ExportToKML_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_type_104 arg2);
extern swig_type_105 _wrap_Geometry_ExportToJson_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_AddPoint_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, double arg2, double arg3, double arg4);
extern void _wrap_Geometry_AddPoint_2D_ogr_83306ddead628923(uintptr_t arg1, double arg2, double arg3);
extern swig_intgo _wrap_Geometry_AddGeometryDirectly_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Geometry_AddGeometry_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_Clone_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Geometry_GetGeometryType_ogr_83306ddead628923(uintptr_t arg1);
extern swig_type_106 _wrap_Geometry_GetGeometryName_ogr_83306ddead628923(uintptr_t arg1);
extern double _wrap_Geometry_Length_ogr_83306ddead628923(uintptr_t arg1);
extern double _wrap_Geometry_Area_ogr_83306ddead628923(uintptr_t arg1);
extern double _wrap_Geometry_GetArea_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Geometry_GetPointCount_ogr_83306ddead628923(uintptr_t arg1);
extern double _wrap_Geometry_GetX_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern double _wrap_Geometry_GetY_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern double _wrap_Geometry_GetZ_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Geometry_GetPoint_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern void _wrap_Geometry_GetPoint_2D_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern swig_intgo _wrap_Geometry_GetGeometryCount_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_SetPoint_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2, double arg3, double arg4, double arg5);
extern void _wrap_Geometry_SetPoint_2D_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2, double arg3, double arg4);
extern uintptr_t _wrap_Geometry_GetGeometryRef_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Geometry_Simplify_ogr_83306ddead628923(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Geometry_SimplifyPreserveTopology_ogr_83306ddead628923(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Geometry_DelaunayTriangulation_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, double arg2, swig_intgo arg3);
extern uintptr_t _wrap_Geometry_Boundary_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Geometry_GetBoundary_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Geometry_ConvexHull_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Geometry_Buffer_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, double arg2, swig_intgo arg3);
extern uintptr_t _wrap_Geometry_Intersection_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_Union_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_UnionCascaded_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Geometry_Difference_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_SymDifference_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_SymmetricDifference_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Geometry_Distance_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Geometry_Empty_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Geometry_IsEmpty_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Geometry_IsValid_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Geometry_IsSimple_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Geometry_IsRing_ogr_83306ddead628923(uintptr_t arg1);
extern _Bool _wrap_Geometry_Intersects_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Intersect_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Equals_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Equal_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Disjoint_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Touches_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Crosses_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Within_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Contains_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Geometry_Overlaps_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Geometry_TransformTo_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Geometry_Transform_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Geometry_GetSpatialReference_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_AssignSpatialReference_ogr_83306ddead628923(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Geometry_CloseRings_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_FlattenTo2D_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_Segmentize_ogr_83306ddead628923(uintptr_t arg1, double arg2);
extern void _wrap_Geometry_GetEnvelope_ogr_83306ddead628923(uintptr_t arg1, swig_voidp arg2);
extern void _wrap_Geometry_GetEnvelope3D_ogr_83306ddead628923(uintptr_t arg1, swig_voidp arg2);
extern uintptr_t _wrap_Geometry_Centroid_ogr_83306ddead628923(uintptr_t arg1);
extern uintptr_t _wrap_Geometry_PointOnSurface_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Geometry_WkbSize_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Geometry_GetCoordinateDimension_ogr_83306ddead628923(uintptr_t arg1);
extern void _wrap_Geometry_SetCoordinateDimension_ogr_83306ddead628923(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Geometry_GetDimension_ogr_83306ddead628923(uintptr_t arg1);
extern swig_intgo _wrap_Geometry_HasCurveGeometry_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Geometry_GetLinearGeometry_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, double arg2, swig_voidp arg3);
extern uintptr_t _wrap_Geometry_GetCurveGeometry_ogr_83306ddead628923(intgo _swig_args, uintptr_t arg1, swig_voidp arg2);
extern uintptr_t _wrap_Geometry_Value_ogr_83306ddead628923(uintptr_t arg1, double arg2);
extern swig_intgo _wrap_OGRGetDriverCount_ogr_83306ddead628923(void);
extern swig_intgo _wrap_OGRGetOpenDSCount_ogr_83306ddead628923(void);
extern swig_intgo _wrap_OGRSetGenerate_DB2_V72_BYTE_ORDER_ogr_83306ddead628923(swig_intgo arg1);
extern swig_type_107 _wrap_GeometryTypeToName_ogr_83306ddead628923(swig_intgo arg1);
extern swig_type_108 _wrap_GetFieldTypeName_ogr_83306ddead628923(swig_intgo arg1);
extern swig_type_109 _wrap_GetFieldSubTypeName_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_Flatten_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_SetZ_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_SetModifier_ogr_83306ddead628923(intgo _swig_args, swig_intgo arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_GT_HasZ_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_IsSubClassOf_ogr_83306ddead628923(swig_intgo arg1, swig_intgo arg2);
extern swig_intgo _wrap_GT_IsCurve_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_IsSurface_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_IsNonLinear_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_GetCollection_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_GetCurve_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GT_GetLinear_ogr_83306ddead628923(swig_intgo arg1);
extern void _wrap_SetNonLinearGeometriesEnabledFlag_ogr_83306ddead628923(swig_intgo arg1);
extern swig_intgo _wrap_GetNonLinearGeometriesEnabledFlag_ogr_83306ddead628923(void);
extern uintptr_t _wrap_GetOpenDS_ogr_83306ddead628923(swig_intgo arg1);
extern uintptr_t _wrap_Open_ogr_83306ddead628923(intgo _swig_args, swig_type_110 arg1, swig_intgo arg2);
extern uintptr_t _wrap_OpenShared_ogr_83306ddead628923(intgo _swig_args, swig_type_111 arg1, swig_intgo arg2);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/progress"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/cpl"
import "github.com/geo-data/go-gdal/gdal/swig/go/gdal/osr"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p	uintptr
	n	int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
}

const Wkb25DBit int = 0x80000000
const Wkb25Bit int = 0x80000000
const WkbUnknown int = 0
const WkbPoint int = 1
const WkbLineString int = 2
const WkbPolygon int = 3
const WkbMultiPoint int = 4
const WkbMultiLineString int = 5
const WkbMultiPolygon int = 6
const WkbGeometryCollection int = 7
const WkbCircularString int = 8
const WkbCompoundCurve int = 9
const WkbCurvePolygon int = 10
const WkbMultiCurve int = 11
const WkbMultiSurface int = 12
const WkbNone int = 100
const WkbLinearRing int = 101
const WkbCircularStringZ int = 1008
const WkbCompoundCurveZ int = 1009
const WkbCurvePolygonZ int = 1010
const WkbMultiCurveZ int = 1011
const WkbMultiSurfaceZ int = 1012
const WkbPoint25D int = 0x80000001
const WkbLineString25D int = 0x80000002
const WkbPolygon25D int = 0x80000003
const WkbMultiPoint25D int = 0x80000004
const WkbMultiLineString25D int = 0x80000005
const WkbMultiPolygon25D int = 0x80000006
const WkbGeometryCollection25D int = 0x80000007
const OFTInteger int = 0
const OFTIntegerList int = 1
const OFTReal int = 2
const OFTRealList int = 3
const OFTString int = 4
const OFTStringList int = 5
const OFTWideString int = 6
const OFTWideStringList int = 7
const OFTBinary int = 8
const OFTDate int = 9
const OFTTime int = 10
const OFTDateTime int = 11
const OFTInteger64 int = 12
const OFTInteger64List int = 13
const OFSTNone int = 0
const OFSTBoolean int = 1
const OFSTInt16 int = 2
const OFSTFloat32 int = 3
const OJUndefined int = 0
const OJLeft int = 1
const OJRight int = 2
const WkbXDR int = 0
const WkbNDR int = 1
const NullFID int = -1
const ALTER_NAME_FLAG int = 1
const ALTER_TYPE_FLAG int = 2
const ALTER_WIDTH_PRECISION_FLAG int = 4
const ALTER_NULLABLE_FLAG int = 8
const ALTER_DEFAULT_FLAG int = 16
const ALTER_ALL_FLAG int = 1 + 2 + 4 + 8 + 16
const F_VAL_NULL int = 0x00000001
const F_VAL_GEOM_TYPE int = 0x00000002
const F_VAL_WIDTH int = 0x00000004
const F_VAL_ALLOW_NULL_WHEN_DEFAULT int = 0x00000008
const F_VAL_ALL int = 0xFFFFFFFF
const OLCRandomRead string = "RandomRead"
const OLCSequentialWrite string = "SequentialWrite"
const OLCRandomWrite string = "RandomWrite"
const OLCFastSpatialFilter string = "FastSpatialFilter"
const OLCFastFeatureCount string = "FastFeatureCount"
const OLCFastGetExtent string = "FastGetExtent"
const OLCCreateField string = "CreateField"
const OLCDeleteField string = "DeleteField"
const OLCReorderFields string = "ReorderFields"
const OLCAlterFieldDefn string = "AlterFieldDefn"
const OLCTransactions string = "Transactions"
const OLCDeleteFeature string = "DeleteFeature"
const OLCFastSetNextByIndex string = "FastSetNextByIndex"
const OLCStringsAsUTF8 string = "StringsAsUTF8"
const OLCIgnoreFields string = "IgnoreFields"
const OLCCreateGeomField string = "CreateGeomField"
const OLCCurveGeometries string = "CurveGeometries"
const ODsCCreateLayer string = "CreateLayer"
const ODsCDeleteLayer string = "DeleteLayer"
const ODsCCreateGeomFieldAfterCreateLayer string = "CreateGeomFieldAfterCreateLayer"
const ODsCCurveGeometries string = "CurveGeometries"
const ODsCTransactions string = "Transactions"
const ODsCEmulatedTransactions string = "EmulatedTransactions"
const ODrCCreateDataSource string = "CreateDataSource"
const ODrCDeleteDataSource string = "DeleteDataSource"
const OLMD_FID64 string = "OLMD_FID64"

type SwigcptrMajorObject uintptr

func (p SwigcptrMajorObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMajorObject) SwigIsMajorObject() {
}

func (arg1 SwigcptrMajorObject) GetDescription() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MajorObject_GetDescription_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetDescription(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MajorObject_SetDescription_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrMajorObject) GetMetadataDomainList() (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_MajorObject_GetMetadataDomainList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) GetMetadata_Dict(_swig_args ...interface{}) (_swig_ret *string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var swig_r *string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (*string)(C._wrap_MajorObject_GetMetadata_Dict_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrMajorObject) GetMetadata_List(_swig_args ...interface{}) (_swig_ret []string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var swig_r **C.char
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (**C.char)(C._wrap_MajorObject_GetMetadata_List_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 []string

	if swig_r != nil {
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetMetadata__SWIG_0(arg2 *string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_MajorObject_SetMetadata__SWIG_0_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrMajorObject) SetMetadata__SWIG_1(arg2 string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_MajorObject_SetMetadata__SWIG_1_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (p SwigcptrMajorObject) SetMetadata(a ...interface{}) (int, error) {
	argc := len(a)
	if argc >= 1 && argc <= 2 {
		if _, ok := a[0].(*string); !ok {
			goto check_1
		}
		switch argc {
		case 1:
			return p.SetMetadata__SWIG_0(a[0].(*string))
		case 2:
			return p.SetMetadata__SWIG_0(a[0].(*string), a[1])
		}
	}
check_1:
	if argc >= 1 && argc <= 2 {
		switch argc {
		case 1:
			return p.SetMetadata__SWIG_1(a[0].(string))
		case 2:
			return p.SetMetadata__SWIG_1(a[0].(string), a[1])
		}
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMajorObject) GetMetadataItem(arg2 string, _swig_args ...interface{}) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(string)
	}
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_MajorObject_GetMetadataItem_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrMajorObject) SetMetadataItem(arg2 string, arg3 string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(string)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_MajorObject_SetMetadataItem_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_12)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r, err

}

type MajorObject interface {
	Swigcptr() uintptr
	SwigIsMajorObject()
	GetDescription() (_swig_ret string, err error,

	)
	SetDescription(arg2 string) (err error)

	GetMetadataDomainList() (_swig_ret []string, err error,

	)
	GetMetadata_Dict(_swig_args ...interface{}) (_swig_ret *string, err error,

	)
	GetMetadata_List(_swig_args ...interface{}) (_swig_ret []string, err error,

	)
	SetMetadata(a ...interface{}) (int, error)

	GetMetadataItem(arg2 string, _swig_args ...interface{}) (_swig_ret string, err error,

	)
	SetMetadataItem(arg2 string, arg3 string, _swig_args ...interface{}) (_swig_ret int, err error,

	)
}

type SwigcptrStyleTable uintptr

func (p SwigcptrStyleTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStyleTable) SwigIsStyleTable() {
}

func NewStyleTable() (_swig_ret StyleTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r StyleTable
	swig_r = (StyleTable)(SwigcptrStyleTable(C._wrap_new_StyleTable_ogr_83306ddead628923()))
	return swig_r, err

}

func DeleteStyleTable(arg1 StyleTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrStyleTable) AddStyle(arg2 string, arg3 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_StyleTable_AddStyle_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrStyleTable) LoadStyleTable(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_StyleTable_LoadStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_16)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrStyleTable) SaveStyleTable(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_StyleTable_SaveStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrStyleTable) Find(arg2 string) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StyleTable_Find_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrStyleTable) ResetStyleStringReading() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_StyleTable_ResetStyleStringReading_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrStyleTable) GetNextStyle() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_StyleTable_GetNextStyle_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrStyleTable) GetLastStyleName() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_StyleTable_GetLastStyleName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

type StyleTable interface {
	Swigcptr() uintptr
	SwigIsStyleTable()
	AddStyle(arg2 string, arg3 string) (_swig_ret int, err error,

	)
	LoadStyleTable(arg2 string) (_swig_ret int, err error,

	)
	SaveStyleTable(arg2 string) (_swig_ret int, err error,

	)
	Find(arg2 string) (_swig_ret string, err error,

	)
	ResetStyleStringReading() (err error)

	GetNextStyle() (_swig_ret string, err error,

	)
	GetLastStyleName() (_swig_ret string, err error,

	)
}

type SwigcptrDriver uintptr

func (p SwigcptrDriver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDriver) SwigIsDriver() {
}

func (arg1 SwigcptrDriver) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Driver_name_get_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrDriver) CreateDataSource(arg2 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 []string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].([]string)
	}
	var swig_r DataSource
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_Driver_CreateDataSource_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_23)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) CopyDataSource(arg2 DataSource, arg3 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var swig_r DataSource
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_Driver_CopyDataSource_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) Open(arg2 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r DataSource
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_Driver_Open_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) DeleteDataSource(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Driver_DeleteDataSource_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_26)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) TestCapability(arg2 string) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Driver_TestCapability_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDriver) Register() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Driver_Register_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDriver) Deregister() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Driver_Deregister_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (p SwigcptrDriver) SwigIsMajorObject() {
}

func (p SwigcptrDriver) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type Driver interface {
	Swigcptr() uintptr
	SwigIsDriver()
	GetName() (_swig_ret string)
	CreateDataSource(arg2 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

	)
	CopyDataSource(arg2 DataSource, arg3 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

	)
	Open(arg2 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

	)
	DeleteDataSource(arg2 string) (_swig_ret int, err error,

	)
	TestCapability(arg2 string) (_swig_ret bool, err error,

	)
	Register() (err error)

	Deregister() (err error)

	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
}

type SwigcptrDataSource uintptr

func (p SwigcptrDataSource) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDataSource) SwigIsDataSource() {
}

func (arg1 SwigcptrDataSource) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DataSource_name_get_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteDataSource(arg1 DataSource) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DataSource_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDataSource) GetRefCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_GetRefCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) GetSummaryRefCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_GetSummaryRefCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) GetLayerCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_GetLayerCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) GetDriver() (_swig_ret Driver, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Driver
	_swig_i_0 := arg1
	swig_r = (Driver)(SwigcptrDriver(C._wrap_DataSource_GetDriver_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) DeleteLayer(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_DataSource_DeleteLayer_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) SyncToDisk() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_SyncToDisk_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) FlushCache() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_DataSource_FlushCache_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrDataSource) CreateLayer(arg2 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 osr.SpatialReference
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(osr.SpatialReference)
	}
	var arg4 int
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(int)
	}
	var arg5 []string
	if len(_swig_args) > 2 {
		arg5 = _swig_args[2].([]string)
	}
	var swig_r Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 uintptr

	if arg3 != nil {
		_swig_i_2 = arg3.Swigcptr()
	}

	_swig_i_3 := arg4
	var _swig_i_4 **C.char

	arg5_l := len(arg5)
	_swig_i_4_i := make([]*C.char, arg5_l+1)
	for i := 0; i < arg5_l; i++ {
		_swig_i_4_i[i] = C.CString(arg5[i])
		defer C.free(unsafe.Pointer(_swig_i_4_i[i]))
	}
	_swig_i_4_i[arg5_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_4 = &_swig_i_4_i[0]

	swig_r = (Layer)(SwigcptrLayer(C._wrap_DataSource_CreateLayer_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_29)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataSource) CopyLayer(arg2 Layer, arg3 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var swig_r Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	swig_r = (Layer)(SwigcptrLayer(C._wrap_DataSource_CopyLayer_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataSource) GetLayerByIndex(_swig_args ...interface{}) (_swig_ret Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Layer)(SwigcptrLayer(C._wrap_DataSource_GetLayerByIndex_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	var swig_r_1 Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataSource) GetLayerByName(arg2 string) (_swig_ret Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Layer)(SwigcptrLayer(C._wrap_DataSource_GetLayerByName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_31)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataSource) TestCapability(arg2 string) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DataSource_TestCapability_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrDataSource) ExecuteSQL(arg2 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 Geometry
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(Geometry)
	}
	var arg4 string
	if len(_swig_args) > 1 {
		arg4 = _swig_args[1].(string)
	}
	var swig_r Layer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (Layer)(SwigcptrLayer(C._wrap_DataSource_ExecuteSQL_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 Layer

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrDataSource) ReleaseResultSet(arg2 Layer) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DataSource_ReleaseResultSet_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrDataSource) GetStyleTable() (_swig_ret StyleTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r StyleTable
	_swig_i_0 := arg1
	swig_r = (StyleTable)(SwigcptrStyleTable(C._wrap_DataSource_GetStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) SetStyleTable(arg2 StyleTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DataSource_SetStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrDataSource) StartTransaction(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_DataSource_StartTransaction_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) CommitTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_CommitTransaction_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrDataSource) RollbackTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DataSource_RollbackTransaction_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (p SwigcptrDataSource) SwigIsMajorObject() {
}

func (p SwigcptrDataSource) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type DataSource interface {
	Swigcptr() uintptr
	SwigIsDataSource()
	GetName() (_swig_ret string)
	GetRefCount() (_swig_ret int, err error,

	)
	GetSummaryRefCount() (_swig_ret int, err error,

	)
	GetLayerCount() (_swig_ret int, err error,

	)
	GetDriver() (_swig_ret Driver, err error,

	)
	DeleteLayer(arg2 int) (_swig_ret int, err error,

	)
	SyncToDisk() (_swig_ret int, err error,

	)
	FlushCache() (err error)

	CreateLayer(arg2 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

	)
	CopyLayer(arg2 Layer, arg3 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

	)
	GetLayerByIndex(_swig_args ...interface{}) (_swig_ret Layer, err error,

	)
	GetLayerByName(arg2 string) (_swig_ret Layer, err error,

	)
	TestCapability(arg2 string) (_swig_ret bool, err error,

	)
	ExecuteSQL(arg2 string, _swig_args ...interface{}) (_swig_ret Layer, err error,

	)
	ReleaseResultSet(arg2 Layer) (err error)

	GetStyleTable() (_swig_ret StyleTable, err error,

	)
	SetStyleTable(arg2 StyleTable) (err error)

	StartTransaction(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	CommitTransaction() (_swig_ret int, err error,

	)
	RollbackTransaction() (_swig_ret int, err error,

	)
	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
}

type SwigcptrLayer uintptr

func (p SwigcptrLayer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLayer) SwigIsLayer() {
}

func (arg1 SwigcptrLayer) GetRefCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_GetRefCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SetSpatialFilter__SWIG_0(arg2 Geometry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Layer_SetSpatialFilter__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrLayer) SetSpatialFilterRect__SWIG_0(arg2 float64, arg3 float64, arg4 float64, arg5 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Layer_SetSpatialFilterRect__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4))
	return
}

func (arg1 SwigcptrLayer) SetSpatialFilter__SWIG_1(arg2 int, arg3 Geometry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Layer_SetSpatialFilter__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	return
}

func (p SwigcptrLayer) SetSpatialFilter(a ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	argc := len(a)
	if argc == 1 {
		p.SetSpatialFilter__SWIG_0(a[0].(Geometry))
		return
	}
	if argc == 2 {
		p.SetSpatialFilter__SWIG_1(a[0].(int), a[1].(Geometry))
		return
	}
	panic("No match for overloaded function call")
	return
}

func (arg1 SwigcptrLayer) SetSpatialFilterRect__SWIG_1(arg2 int, arg3 float64, arg4 float64, arg5 float64, arg6 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Layer_SetSpatialFilterRect__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5))
	return
}

func (p SwigcptrLayer) SetSpatialFilterRect(a ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	argc := len(a)
	if argc == 4 {
		p.SetSpatialFilterRect__SWIG_0(a[0].(float64), a[1].(float64), a[2].(float64), a[3].(float64))
		return
	}
	if argc == 5 {
		p.SetSpatialFilterRect__SWIG_1(a[0].(int), a[1].(float64), a[2].(float64), a[3].(float64), a[4].(float64))
		return
	}
	panic("No match for overloaded function call")
	return
}

func (arg1 SwigcptrLayer) GetSpatialFilter() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Layer_GetSpatialFilter_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SetAttributeFilter(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Layer_SetAttributeFilter_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrLayer) ResetReading() {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	_swig_i_0 := arg1
	C._wrap_Layer_ResetReading_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLayer) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Layer_GetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrLayer) GetGeomType() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_GetGeomType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetGeometryColumn() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Layer_GetGeometryColumn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrLayer) GetFIDColumn() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Layer_GetFIDColumn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrLayer) GetFeature(arg2 GIntBig) (_swig_ret Feature, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Feature
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Feature)(SwigcptrFeature(C._wrap_Layer_GetFeature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	var swig_r_1 Feature

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrLayer) GetNextFeature() (_swig_ret Feature) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Feature
	_swig_i_0 := arg1
	swig_r = (Feature)(SwigcptrFeature(C._wrap_Layer_GetNextFeature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	var swig_r_1 Feature

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1
}

func (arg1 SwigcptrLayer) SetNextByIndex(arg2 GIntBig) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Layer_SetNextByIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SetFeature(arg2 Feature) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Layer_SetFeature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) wrap_CreateFeature(arg2 Feature) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Layer_CreateFeature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) DeleteFeature(arg2 GIntBig) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Layer_DeleteFeature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SyncToDisk() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_SyncToDisk_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetLayerDefn() (_swig_ret FeatureDefn) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r FeatureDefn
	_swig_i_0 := arg1
	swig_r = (FeatureDefn)(SwigcptrFeatureDefn(C._wrap_Layer_GetLayerDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrLayer) GetFeatureCount(_swig_args ...interface{}) (_swig_ret GIntBig, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r GIntBig
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GIntBig)(SwigcptrGIntBig(C._wrap_Layer_GetFeatureCount_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetExtent(arg2 []float64, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_GetExtent_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) TestCapability(arg2 string) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Layer_TestCapability_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_39)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrLayer) wrap_CreateField(arg2 FieldDefn, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_CreateField_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) DeleteField(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Layer_DeleteField_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) ReorderField(arg2 int, arg3 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_ReorderField_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) ReorderFields(arg2 int, arg3 *int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_ReorderFields_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) AlterFieldDefn(arg2 int, arg3 FieldDefn, arg4 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Layer_AlterFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) CreateGeomField(arg2 GeomFieldDefn, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_CreateGeomField_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) StartTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_StartTransaction_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) CommitTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_CommitTransaction_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) RollbackTransaction() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Layer_RollbackTransaction_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) FindFieldIndex(arg2 string, arg3 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Layer_FindFieldIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetSpatialRef() (_swig_ret osr.SpatialReference, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r osr.SpatialReference
	_swig_i_0 := arg1
	swig_r = (osr.SpatialReference)(osr.SwigcptrSpatialReference(C._wrap_Layer_GetSpatialRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetFeaturesRead() (_swig_ret GIntBig, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GIntBig
	_swig_i_0 := arg1
	swig_r = (GIntBig)(SwigcptrGIntBig(C._wrap_Layer_GetFeaturesRead_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SetIgnoredFields(arg2 []string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r = (int)(C._wrap_Layer_SetIgnoredFields_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Intersection(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Intersection_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Union(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Union_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SymDifference(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_SymDifference_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Identity(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Identity_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Update(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Update_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Clip(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Clip_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) Erase(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 []string
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].([]string)
	}
	var arg5 progress.ProgressFunc
	if len(_swig_args) > 1 {
		arg5 = _swig_args[1].(progress.ProgressFunc)
	}
	var arg6 interface{}
	if len(_swig_args) > 2 {
		arg6 = _swig_args[2].(interface{})
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	var _swig_i_3 **C.char

	arg4_l := len(arg4)
	_swig_i_3_i := make([]*C.char, arg4_l+1)
	for i := 0; i < arg4_l; i++ {
		_swig_i_3_i[i] = C.CString(arg4[i])
		defer C.free(unsafe.Pointer(_swig_i_3_i[i]))
	}
	_swig_i_3_i[arg4_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_3 = &_swig_i_3_i[0]

	var _swig_i_4 C.GDALProgressFunc

	var progf progress.ProgressFunc
	if arg5 != nil {
		progf = arg5
		_swig_i_4 = C.GDALProgressFunc(progress.GDALProgressFunc())
	}

	var _swig_i_5 unsafe.Pointer

	if progf != nil {
		_swig_i_5 = progress.New(progf, arg6)
	}

	swig_r = (int)(C._wrap_Layer_Erase_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_voidp(_swig_i_3), C.GDALProgressFunc(_swig_i_4), C.swig_voidp(_swig_i_5)))
	return swig_r, err

}

func (arg1 SwigcptrLayer) GetStyleTable() (_swig_ret StyleTable, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r StyleTable
	_swig_i_0 := arg1
	swig_r = (StyleTable)(SwigcptrStyleTable(C._wrap_Layer_GetStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrLayer) SetStyleTable(arg2 StyleTable) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Layer_SetStyleTable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (p SwigcptrLayer) SwigIsMajorObject() {
}

func (p SwigcptrLayer) SwigGetMajorObject() MajorObject {
	return SwigcptrMajorObject(p.Swigcptr())
}

type Layer interface {
	Swigcptr() uintptr
	SwigIsLayer()
	GetRefCount() (_swig_ret int, err error,

	)
	SetSpatialFilter(a ...interface{}) (err error)

	SetSpatialFilterRect(a ...interface{}) (err error)

	GetSpatialFilter() (_swig_ret Geometry, err error,

	)
	SetAttributeFilter(arg2 string) (_swig_ret int, err error,

	)
	ResetReading()
	GetName() (_swig_ret string)
	GetGeomType() (_swig_ret int, err error,

	)
	GetGeometryColumn() (_swig_ret string, err error,

	)
	GetFIDColumn() (_swig_ret string, err error,

	)
	GetFeature(arg2 GIntBig) (_swig_ret Feature, err error,

	)
	GetNextFeature() (_swig_ret Feature)
	SetNextByIndex(arg2 GIntBig) (_swig_ret int, err error,

	)
	SetFeature(arg2 Feature) (_swig_ret int, err error,

	)

	DeleteFeature(arg2 GIntBig) (_swig_ret int, err error,

	)
	SyncToDisk() (_swig_ret int, err error,

	)
	GetLayerDefn() (_swig_ret FeatureDefn)
	GetFeatureCount(_swig_args ...interface{}) (_swig_ret GIntBig, err error,

	)
	GetExtent(arg2 []float64, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	TestCapability(arg2 string) (_swig_ret bool, err error,

	)

	DeleteField(arg2 int) (_swig_ret int, err error,

	)
	ReorderField(arg2 int, arg3 int) (_swig_ret int, err error,

	)
	ReorderFields(arg2 int, arg3 *int) (_swig_ret int, err error,

	)
	AlterFieldDefn(arg2 int, arg3 FieldDefn, arg4 int) (_swig_ret int, err error,

	)
	CreateGeomField(arg2 GeomFieldDefn, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	StartTransaction() (_swig_ret int, err error,

	)
	CommitTransaction() (_swig_ret int, err error,

	)
	RollbackTransaction() (_swig_ret int, err error,

	)
	FindFieldIndex(arg2 string, arg3 int) (_swig_ret int, err error,

	)
	GetSpatialRef() (_swig_ret osr.SpatialReference, err error,

	)
	GetFeaturesRead() (_swig_ret GIntBig, err error,

	)
	SetIgnoredFields(arg2 []string) (_swig_ret int, err error,

	)
	Intersection(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	Union(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	SymDifference(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	Identity(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	Update(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	Clip(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	Erase(arg2 Layer, arg3 Layer, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	GetStyleTable() (_swig_ret StyleTable, err error,

	)
	SetStyleTable(arg2 StyleTable) (err error)

	SwigIsMajorObject()
	SwigGetMajorObject() MajorObject
	CreateField(f FieldDefn, approxok int) (err error)
	CreateFeature(f Feature) (err error)
}

type SwigcptrFeature uintptr

func (p SwigcptrFeature) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFeature) SwigIsFeature() {
}

func DeleteFeature(arg1 Feature) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Feature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func NewFeature(arg1 FeatureDefn) (_swig_ret Feature, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Feature
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Feature)(SwigcptrFeature(C._wrap_new_Feature_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	var swig_r_1 Feature

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrFeature) GetDefnRef() (_swig_ret FeatureDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r FeatureDefn
	_swig_i_0 := arg1
	swig_r = (FeatureDefn)(SwigcptrFeatureDefn(C._wrap_Feature_GetDefnRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) wrap_SetGeometry(arg2 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeometry_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) SetGeometryDirectly(arg2 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeometryDirectly_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetGeometryRef() (_swig_ret Geometry) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Feature_GetGeometryRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFeature) SetGeomField__SWIG_0(arg2 int, arg3 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeomField__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) SetGeomField__SWIG_1(arg2 string, arg3 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeomField__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_41)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) SetGeomField(a ...interface{}) (int, error) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.SetGeomField__SWIG_0(a[0].(int), a[1].(Geometry))
	}
check_1:
	if argc == 2 {
		return p.SetGeomField__SWIG_1(a[0].(string), a[1].(Geometry))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) SetGeomFieldDirectly__SWIG_0(arg2 int, arg3 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeomFieldDirectly__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) SetGeomFieldDirectly__SWIG_1(arg2 string, arg3 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetGeomFieldDirectly__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_42)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) SetGeomFieldDirectly(a ...interface{}) (int, error) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.SetGeomFieldDirectly__SWIG_0(a[0].(int), a[1].(Geometry))
	}
check_1:
	if argc == 2 {
		return p.SetGeomFieldDirectly__SWIG_1(a[0].(string), a[1].(Geometry))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetGeomFieldRef__SWIG_0(arg2 int) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Feature_GetGeomFieldRef__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetGeomFieldRef__SWIG_1(arg2 string) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Feature_GetGeomFieldRef__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_43)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetGeomFieldRef(a ...interface{}) (Geometry, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetGeomFieldRef__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetGeomFieldRef__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) Clone() (_swig_ret Feature, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Feature
	_swig_i_0 := arg1
	swig_r = (Feature)(SwigcptrFeature(C._wrap_Feature_Clone_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	var swig_r_1 Feature

	if swig_r.Swigcptr() > 0 {
		swig_r_1 = swig_r
	} else {
		swig_r_1 = nil
	}

	return swig_r_1, err

}

func (arg1 SwigcptrFeature) Equal(arg2 Feature) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Feature_Equal_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFieldCount() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Feature_GetFieldCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFeature) GetFieldDefnRef__SWIG_0(arg2 int) (_swig_ret FieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r FieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldDefn)(SwigcptrFieldDefn(C._wrap_Feature_GetFieldDefnRef__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFieldDefnRef__SWIG_1(arg2 string) (_swig_ret FieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r FieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldDefn)(SwigcptrFieldDefn(C._wrap_Feature_GetFieldDefnRef__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_44)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetFieldDefnRef(a ...interface{}) (FieldDefn, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldDefnRef__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldDefnRef__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetGeomFieldCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Feature_GetGeomFieldCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetGeomFieldDefnRef__SWIG_0(arg2 int) (_swig_ret GeomFieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GeomFieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GeomFieldDefn)(SwigcptrGeomFieldDefn(C._wrap_Feature_GetGeomFieldDefnRef__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetGeomFieldDefnRef__SWIG_1(arg2 string) (_swig_ret GeomFieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GeomFieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GeomFieldDefn)(SwigcptrGeomFieldDefn(C._wrap_Feature_GetGeomFieldDefnRef__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_45)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetGeomFieldDefnRef(a ...interface{}) (GeomFieldDefn, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetGeomFieldDefnRef__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetGeomFieldDefnRef__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldAsString__SWIG_0(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Feature_GetFieldAsString__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFeature) GetFieldAsString__SWIG_1(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Feature_GetFieldAsString__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_48)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrFeature) GetFieldAsString(a ...interface{}) string {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldAsString__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldAsString__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldAsInteger__SWIG_0(arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetFieldAsInteger__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrFeature) GetFieldAsInteger__SWIG_1(arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetFieldAsInteger__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_49)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrFeature) GetFieldAsInteger(a ...interface{}) int {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldAsInteger__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldAsInteger__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldAsInteger64__SWIG_0(arg2 int) (_swig_ret GIntBig, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GIntBig
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GIntBig)(SwigcptrGIntBig(C._wrap_Feature_GetFieldAsInteger64__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFieldAsInteger64__SWIG_1(arg2 string) (_swig_ret GIntBig, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GIntBig
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GIntBig)(SwigcptrGIntBig(C._wrap_Feature_GetFieldAsInteger64__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetFieldAsInteger64(a ...interface{}) (GIntBig, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldAsInteger64__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldAsInteger64__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldAsDouble__SWIG_0(arg2 int) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_Feature_GetFieldAsDouble__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrFeature) GetFieldAsDouble__SWIG_1(arg2 string) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_Feature_GetFieldAsDouble__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_51)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrFeature) GetFieldAsDouble(a ...interface{}) float64 {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldAsDouble__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldAsDouble__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldAsDateTime(arg2 int, arg3 []int, arg4 []int, arg5 []int, arg6 []int, arg7 []int, arg8 []float32, arg9 []int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	C._wrap_Feature_GetFieldAsDateTime_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_52)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_53)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_55)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_57)(unsafe.Pointer(&_swig_i_7)), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_8)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg9
	}
	return
}

func (arg1 SwigcptrFeature) GetFieldAsIntegerList(arg2 int, arg3 *int, arg4 **int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Feature_GetFieldAsIntegerList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
	return
}

func (arg1 SwigcptrFeature) GetFieldAsDoubleList(arg2 int, arg3 *int, arg4 **float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Feature_GetFieldAsDoubleList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
	return
}

func (arg1 SwigcptrFeature) GetFieldAsStringList(arg2 int, arg3 **string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_GetFieldAsStringList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) GetFieldAsBinary__SWIG_0(arg2 int, arg3 *int, arg4 *string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Feature_GetFieldAsBinary__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFieldAsBinary__SWIG_1(arg2 string, arg3 *int, arg4 *string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Feature_GetFieldAsBinary__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_59)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetFieldAsBinary(a ...interface{}) (int, error) {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldAsBinary__SWIG_0(a[0].(int), a[1].(*int), a[2].(*string))
	}
check_1:
	if argc == 3 {
		return p.GetFieldAsBinary__SWIG_1(a[0].(string), a[1].(*int), a[2].(*string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) IsFieldSet__SWIG_0(arg2 int) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Feature_IsFieldSet__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) IsFieldSet__SWIG_1(arg2 string) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Feature_IsFieldSet__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_60)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) IsFieldSet(a ...interface{}) (bool, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.IsFieldSet__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.IsFieldSet__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) GetFieldIndex(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetFieldIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_61)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetGeomFieldIndex(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetGeomFieldIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_62)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFID() (_swig_ret GIntBig, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GIntBig
	_swig_i_0 := arg1
	swig_r = (GIntBig)(SwigcptrGIntBig(C._wrap_Feature_GetFID_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrFeature) SetFID(arg2 GIntBig) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Feature_SetFID_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) DumpReadable() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Feature_DumpReadable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrFeature) UnsetField__SWIG_0(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Feature_UnsetField__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFeature) UnsetField__SWIG_1(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Feature_UnsetField__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_63)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (p SwigcptrFeature) UnsetField(a ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		p.UnsetField__SWIG_0(a[0].(int))
		return
	}
check_1:
	if argc == 1 {
		p.UnsetField__SWIG_1(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_0(arg2 int, arg3 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_64)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_1(arg2 string, arg3 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_65)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_66)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return
}

func (arg1 SwigcptrFeature) SetFieldInteger64(arg2 int, arg3 GIntBig) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Feature_SetFieldInteger64_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_2(arg2 int, arg3 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_2_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_3(arg2 string, arg3 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_3_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_67)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_4(arg2 int, arg3 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_4_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_5(arg2 string, arg3 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetField__SWIG_5_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_68)(unsafe.Pointer(&_swig_i_1)), C.double(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_6(arg2 int, arg3 int, arg4 int, arg5 int, arg6 int, arg7 int, arg8 float32, arg9 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	C._wrap_Feature_SetField__SWIG_6_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6), C.float(_swig_i_7), C.swig_intgo(_swig_i_8))
	return
}

func (arg1 SwigcptrFeature) SetField__SWIG_7(arg2 string, arg3 int, arg4 int, arg5 int, arg6 int, arg7 int, arg8 float32, arg9 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	C._wrap_Feature_SetField__SWIG_7_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_69)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6), C.float(_swig_i_7), C.swig_intgo(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (p SwigcptrFeature) SetField(a ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		if _, ok := a[1].(int); !ok {
			goto check_1
		}
		p.SetField__SWIG_2(a[0].(int), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		if _, ok := a[1].(float64); !ok {
			goto check_2
		}
		p.SetField__SWIG_4(a[0].(int), a[1].(float64))
		return
	}
check_2:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_3
		}
		if _, ok := a[1].(string); !ok {
			goto check_3
		}
		p.SetField__SWIG_0(a[0].(int), a[1].(string))
		return
	}
check_3:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_4
		}
		p.SetField__SWIG_3(a[0].(string), a[1].(int))
		return
	}
check_4:
	if argc == 2 {
		if _, ok := a[1].(float64); !ok {
			goto check_5
		}
		p.SetField__SWIG_5(a[0].(string), a[1].(float64))
		return
	}
check_5:
	if argc == 2 {
		p.SetField__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 8 {
		if _, ok := a[0].(int); !ok {
			goto check_7
		}
		p.SetField__SWIG_6(a[0].(int), a[1].(int), a[2].(int), a[3].(int), a[4].(int), a[5].(int), a[6].(float32), a[7].(int))
		return
	}
check_7:
	if argc == 8 {
		p.SetField__SWIG_7(a[0].(string), a[1].(int), a[2].(int), a[3].(int), a[4].(int), a[5].(int), a[6].(float32), a[7].(int))
		return
	}
	panic("No match for overloaded function call")
	return
}

func (arg1 SwigcptrFeature) SetFieldIntegerList(arg2 int, arg3 int, arg4 *int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Feature_SetFieldIntegerList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3))
	return
}

func (arg1 SwigcptrFeature) SetFieldDoubleList(arg2 int, arg3 int, arg4 *float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Feature_SetFieldDoubleList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3))
	return
}

func (arg1 SwigcptrFeature) SetFieldStringList(arg2 int, arg3 []string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	C._wrap_Feature_SetFieldStringList_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) SetFieldBinaryFromHexString__SWIG_0(arg2 int, arg3 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetFieldBinaryFromHexString__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_70)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return
}

func (arg1 SwigcptrFeature) SetFieldBinaryFromHexString__SWIG_1(arg2 string, arg3 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Feature_SetFieldBinaryFromHexString__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_71)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_72)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return
}

func (p SwigcptrFeature) SetFieldBinaryFromHexString(a ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		p.SetFieldBinaryFromHexString__SWIG_0(a[0].(int), a[1].(string))
		return
	}
check_1:
	if argc == 2 {
		p.SetFieldBinaryFromHexString__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
	return
}

func (arg1 SwigcptrFeature) SetFrom(arg2 Feature, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Feature_SetFrom_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) SetFromWithMap(arg2 Feature, arg3 int, arg4 int, arg5 *int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int)(C._wrap_Feature_SetFromWithMap_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetStyleString() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Feature_GetStyleString_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFeature) SetStyleString(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Feature_SetStyleString_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_74)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFeature) GetFieldType__SWIG_0(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetFieldType__SWIG_0_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) GetFieldType__SWIG_1(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Feature_GetFieldType__SWIG_1_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_75)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (p SwigcptrFeature) GetFieldType(a ...interface{}) (int, error) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return p.GetFieldType__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return p.GetFieldType__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFeature) Validate(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 int
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Feature_Validate_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func (arg1 SwigcptrFeature) FillUnsetWithDefault(_swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 []string
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]string)
	}
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	C._wrap_Feature_FillUnsetWithDefault_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrFeature) GetNativeData() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Feature_GetNativeData_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFeature) GetNativeMediaType() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Feature_GetNativeMediaType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFeature) SetNativeData(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Feature_SetNativeData_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_78)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFeature) SetNativeMediaType(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Feature_SetNativeMediaType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_79)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

type Feature interface {
	Swigcptr() uintptr
	SwigIsFeature()
	GetDefnRef() (_swig_ret FeatureDefn, err error,

	)

	SetGeometryDirectly(arg2 Geometry) (_swig_ret int, err error,

	)
	GetGeometryRef() (_swig_ret Geometry)
	SetGeomField(a ...interface{}) (int, error)

	SetGeomFieldDirectly(a ...interface{}) (int, error)

	GetGeomFieldRef(a ...interface{}) (Geometry, error)

	Clone() (_swig_ret Feature, err error,

	)
	Equal(arg2 Feature) (_swig_ret bool, err error,

	)
	GetFieldCount() (_swig_ret int)
	GetFieldDefnRef(a ...interface{}) (FieldDefn, error)

	GetGeomFieldCount() (_swig_ret int, err error,

	)
	GetGeomFieldDefnRef(a ...interface{}) (GeomFieldDefn, error)

	GetFieldAsString(a ...interface{}) string
	GetFieldAsInteger(a ...interface{}) int
	GetFieldAsInteger64(a ...interface{}) (GIntBig, error)

	GetFieldAsDouble(a ...interface{}) float64
	GetFieldAsDateTime(arg2 int, arg3 []int, arg4 []int, arg5 []int, arg6 []int, arg7 []int, arg8 []float32, arg9 []int) (err error)

	GetFieldAsIntegerList(arg2 int, arg3 *int, arg4 **int) (err error)

	GetFieldAsDoubleList(arg2 int, arg3 *int, arg4 **float64) (err error)

	GetFieldAsStringList(arg2 int, arg3 **string) (err error)

	GetFieldAsBinary(a ...interface{}) (int, error)

	IsFieldSet(a ...interface{}) (bool, error)

	GetFieldIndex(arg2 string) (_swig_ret int, err error,

	)
	GetGeomFieldIndex(arg2 string) (_swig_ret int, err error,

	)
	GetFID() (_swig_ret GIntBig, err error,

	)
	SetFID(arg2 GIntBig) (_swig_ret int, err error,

	)
	DumpReadable() (err error)

	UnsetField(a ...interface{}) (err error)

	SetFieldInteger64(arg2 int, arg3 GIntBig) (err error)

	SetField(a ...interface{}) (err error)

	SetFieldIntegerList(arg2 int, arg3 int, arg4 *int) (err error)

	SetFieldDoubleList(arg2 int, arg3 int, arg4 *float64) (err error)

	SetFieldStringList(arg2 int, arg3 []string) (err error)

	SetFieldBinaryFromHexString(a ...interface{}) (err error)

	SetFrom(arg2 Feature, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	SetFromWithMap(arg2 Feature, arg3 int, arg4 int, arg5 *int) (_swig_ret int, err error,

	)
	GetStyleString() (_swig_ret string, err error,

	)
	SetStyleString(arg2 string) (err error)

	GetFieldType(a ...interface{}) (int, error)

	Validate(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	FillUnsetWithDefault(_swig_args ...interface{}) (err error)

	GetNativeData() (_swig_ret string, err error,

	)
	GetNativeMediaType() (_swig_ret string, err error,

	)
	SetNativeData(arg2 string) (err error)

	SetNativeMediaType(arg2 string) (err error)

	SetGeometry(geom Geometry) (err error)
}

type SwigcptrFeatureDefn uintptr

func (p SwigcptrFeatureDefn) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFeatureDefn) SwigIsFeatureDefn() {
}

func DeleteFeatureDefn(arg1 FeatureDefn) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FeatureDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func NewFeatureDefn(_swig_args ...interface{}) (_swig_ret FeatureDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 string
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(string)
	}
	var swig_r FeatureDefn
	_swig_i_0 := arg1
	swig_r = (FeatureDefn)(SwigcptrFeatureDefn(C._wrap_new_FeatureDefn_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), *(*C.swig_type_80)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FeatureDefn_GetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFeatureDefn) GetFieldCount() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_GetFieldCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFeatureDefn) GetFieldDefn(arg2 int) (_swig_ret FieldDefn) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r FieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldDefn)(SwigcptrFieldDefn(C._wrap_FeatureDefn_GetFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFeatureDefn) GetFieldIndex(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_FeatureDefn_GetFieldIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_82)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) AddFieldDefn(arg2 FieldDefn) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FeatureDefn_AddFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrFeatureDefn) GetGeomFieldCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_GetGeomFieldCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) GetGeomFieldDefn(arg2 int) (_swig_ret GeomFieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r GeomFieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GeomFieldDefn)(SwigcptrGeomFieldDefn(C._wrap_FeatureDefn_GetGeomFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) GetGeomFieldIndex(arg2 string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_FeatureDefn_GetGeomFieldIndex_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_83)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) AddGeomFieldDefn(arg2 GeomFieldDefn) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FeatureDefn_AddGeomFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrFeatureDefn) DeleteGeomFieldDefn(arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_FeatureDefn_DeleteGeomFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) GetGeomType() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_GetGeomType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) SetGeomType(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FeatureDefn_SetGeomType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFeatureDefn) GetReferenceCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_GetReferenceCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) IsGeometryIgnored() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_IsGeometryIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) SetGeometryIgnored(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FeatureDefn_SetGeometryIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFeatureDefn) IsStyleIgnored() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FeatureDefn_IsStyleIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFeatureDefn) SetStyleIgnored(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FeatureDefn_SetStyleIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFeatureDefn) IsSame(arg2 FeatureDefn) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_FeatureDefn_IsSame_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

type FeatureDefn interface {
	Swigcptr() uintptr
	SwigIsFeatureDefn()
	GetName() (_swig_ret string)
	GetFieldCount() (_swig_ret int)
	GetFieldDefn(arg2 int) (_swig_ret FieldDefn)
	GetFieldIndex(arg2 string) (_swig_ret int, err error,

	)
	AddFieldDefn(arg2 FieldDefn) (err error)

	GetGeomFieldCount() (_swig_ret int, err error,

	)
	GetGeomFieldDefn(arg2 int) (_swig_ret GeomFieldDefn, err error,

	)
	GetGeomFieldIndex(arg2 string) (_swig_ret int, err error,

	)
	AddGeomFieldDefn(arg2 GeomFieldDefn) (err error)

	DeleteGeomFieldDefn(arg2 int) (_swig_ret int, err error,

	)
	GetGeomType() (_swig_ret int, err error,

	)
	SetGeomType(arg2 int) (err error)

	GetReferenceCount() (_swig_ret int, err error,

	)
	IsGeometryIgnored() (_swig_ret int, err error,

	)
	SetGeometryIgnored(arg2 int) (err error)

	IsStyleIgnored() (_swig_ret int, err error,

	)
	SetStyleIgnored(arg2 int) (err error)

	IsSame(arg2 FeatureDefn) (_swig_ret int, err error,

	)
}

type SwigcptrFieldDefn uintptr

func (p SwigcptrFieldDefn) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFieldDefn) SwigIsFieldDefn() {
}

func DeleteFieldDefn(arg1 FieldDefn) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func NewFieldDefn(_swig_args ...interface{}) (_swig_ret FieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 string
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(string)
	}
	var arg2 int
	if len(_swig_args) > 1 {
		arg2 = _swig_args[1].(int)
	}
	var swig_r FieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldDefn)(SwigcptrFieldDefn(C._wrap_new_FieldDefn_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), *(*C.swig_type_84)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldDefn_GetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFieldDefn) GetNameRef() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldDefn_GetNameRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFieldDefn) SetName(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_87)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFieldDefn) GetType() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_GetType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldDefn) SetType(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetSubType() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_GetSubType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetSubType(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetSubType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetJustify() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_GetJustify_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetJustify(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetJustify_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetWidth() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_GetWidth_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetWidth(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetWidth_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetPrecision() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_GetPrecision_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetPrecision(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetPrecision_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetTypeName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldDefn_GetTypeName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFieldDefn) GetFieldTypeName(arg2 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FieldDefn_GetFieldTypeName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFieldDefn) IsIgnored() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_IsIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetIgnored(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) IsNullable() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_IsNullable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrFieldDefn) SetNullable(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetNullable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrFieldDefn) GetDefault() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldDefn_GetDefault_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrFieldDefn) SetDefault(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldDefn_SetDefault_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_91)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrFieldDefn) IsDefaultDriverSpecific() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FieldDefn_IsDefaultDriverSpecific_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

type FieldDefn interface {
	Swigcptr() uintptr
	SwigIsFieldDefn()
	GetName() (_swig_ret string)
	GetNameRef() (_swig_ret string, err error,

	)
	SetName(arg2 string) (err error)

	GetType() (_swig_ret int)
	SetType(arg2 int) (err error)

	GetSubType() (_swig_ret int, err error,

	)
	SetSubType(arg2 int) (err error)

	GetJustify() (_swig_ret int, err error,

	)
	SetJustify(arg2 int) (err error)

	GetWidth() (_swig_ret int, err error,

	)
	SetWidth(arg2 int) (err error)

	GetPrecision() (_swig_ret int, err error,

	)
	SetPrecision(arg2 int) (err error)

	GetTypeName() (_swig_ret string)
	GetFieldTypeName(arg2 int) (_swig_ret string, err error,

	)
	IsIgnored() (_swig_ret int, err error,

	)
	SetIgnored(arg2 int) (err error)

	IsNullable() (_swig_ret int, err error,

	)
	SetNullable(arg2 int) (err error)

	GetDefault() (_swig_ret string, err error,

	)
	SetDefault(arg2 string) (err error)

	IsDefaultDriverSpecific() (_swig_ret int, err error,

	)
}

type SwigcptrGeomFieldDefn uintptr

func (p SwigcptrGeomFieldDefn) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGeomFieldDefn) SwigIsGeomFieldDefn() {
}

func DeleteGeomFieldDefn(arg1 GeomFieldDefn) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_GeomFieldDefn_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func NewGeomFieldDefn(_swig_args ...interface{}) (_swig_ret GeomFieldDefn, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 string
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(string)
	}
	var arg2 int
	if len(_swig_args) > 1 {
		arg2 = _swig_args[1].(int)
	}
	var swig_r GeomFieldDefn
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GeomFieldDefn)(SwigcptrGeomFieldDefn(C._wrap_new_GeomFieldDefn_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), *(*C.swig_type_92)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func (arg1 SwigcptrGeomFieldDefn) GetName() (_swig_ret string) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GeomFieldDefn_GetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrGeomFieldDefn) GetNameRef() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GeomFieldDefn_GetNameRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGeomFieldDefn) SetName(arg2 string) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GeomFieldDefn_SetName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), *(*C.swig_type_95)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return
}

func (arg1 SwigcptrGeomFieldDefn) GetType() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GeomFieldDefn_GetType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGeomFieldDefn) SetType(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GeomFieldDefn_SetType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrGeomFieldDefn) GetSpatialRef() (_swig_ret osr.SpatialReference, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r osr.SpatialReference
	_swig_i_0 := arg1
	swig_r = (osr.SpatialReference)(osr.SwigcptrSpatialReference(C._wrap_GeomFieldDefn_GetSpatialRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeomFieldDefn) SetSpatialRef(arg2 osr.SpatialReference) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	var _swig_i_1 uintptr

	if arg2 != nil {
		_swig_i_1 = arg2.Swigcptr()
	}

	C._wrap_GeomFieldDefn_SetSpatialRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrGeomFieldDefn) IsIgnored() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GeomFieldDefn_IsIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeomFieldDefn) SetIgnored(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GeomFieldDefn_SetIgnored_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrGeomFieldDefn) IsNullable() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GeomFieldDefn_IsNullable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeomFieldDefn) SetNullable(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GeomFieldDefn_SetNullable_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

type GeomFieldDefn interface {
	Swigcptr() uintptr
	SwigIsGeomFieldDefn()
	GetName() (_swig_ret string)
	GetNameRef() (_swig_ret string, err error,

	)
	SetName(arg2 string) (err error)

	GetType() (_swig_ret int)
	SetType(arg2 int) (err error)

	GetSpatialRef() (_swig_ret osr.SpatialReference, err error,

	)
	SetSpatialRef(arg2 osr.SpatialReference) (err error)

	IsIgnored() (_swig_ret int, err error,

	)
	SetIgnored(arg2 int) (err error)

	IsNullable() (_swig_ret int, err error,

	)
	SetNullable(arg2 int) (err error)
}

func CreateGeometryFromWkb(arg1 int, arg2 string, _swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 osr.SpatialReference
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(osr.SpatialReference)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_CreateGeometryFromWkb_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.swig_intgo(_swig_i_0), *(*C.swig_type_96)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r, err

}

func CreateGeometryFromWkt(arg1 *string, _swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 osr.SpatialReference
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(osr.SpatialReference)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_CreateGeometryFromWkt_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.swig_voidp(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func CreateGeometryFromGML(arg1 string) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_CreateGeometryFromGML_ogr_83306ddead628923(*(*C.swig_type_97)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func CreateGeometryFromJson(arg1 string) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_CreateGeometryFromJson_ogr_83306ddead628923(*(*C.swig_type_98)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func BuildPolygonFromEdges(arg1 Geometry, _swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 int
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(int)
	}
	var arg4 float64
	if len(_swig_args) > 2 {
		arg4 = _swig_args[2].(float64)
	}
	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_BuildPolygonFromEdges_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.double(_swig_i_3))))
	return swig_r, err

}

func ApproximateArcAngles(arg1 float64, arg2 float64, arg3 float64, arg4 float64, arg5 float64, arg6 float64, arg7 float64, arg8 float64, arg9 float64) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ApproximateArcAngles_ogr_83306ddead628923(C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4), C.double(_swig_i_5), C.double(_swig_i_6), C.double(_swig_i_7), C.double(_swig_i_8))))
	return swig_r, err

}

func ForceToPolygon(arg1 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceToPolygon_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func ForceToLineString(arg1 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceToLineString_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func ForceToMultiPolygon(arg1 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceToMultiPolygon_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func ForceToMultiPoint(arg1 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceToMultiPoint_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func ForceToMultiLineString(arg1 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceToMultiLineString_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func ForceTo(arg1 Geometry, arg2 int, _swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 []string
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].([]string)
	}
	var swig_r Geometry
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_ForceTo_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))))
	return swig_r, err

}

type SwigcptrGeometry uintptr

func (p SwigcptrGeometry) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGeometry) SwigIsGeometry() {
}

func DeleteGeometry(arg1 Geometry) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Geometry_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func NewGeometry(_swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg1 int
	if len(_swig_args) > 0 {
		arg1 = _swig_args[0].(int)
	}
	var arg2 string
	if len(_swig_args) > 1 {
		arg2 = _swig_args[1].(string)
	}
	var arg3 int
	if len(_swig_args) > 2 {
		arg3 = _swig_args[2].(int)
	}
	var arg4 string
	if len(_swig_args) > 3 {
		arg4 = _swig_args[3].(string)
	}
	var arg5 string
	if len(_swig_args) > 4 {
		arg5 = _swig_args[4].(string)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_new_Geometry_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.swig_intgo(_swig_i_0), *(*C.swig_type_99)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), *(*C.swig_type_100)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_101)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ExportToWkt(arg2 *string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Geometry_ExportToWkt_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ExportToIsoWkt(arg2 *string) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Geometry_ExportToIsoWkt_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ExportToWkb(arg2 *int, arg3 *string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 int
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Geometry_ExportToWkb_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ExportToIsoWkb(arg2 *int, arg3 *string, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg4 int
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Geometry_ExportToIsoWkb_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ExportToGML() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Geometry_ExportToGML_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGeometry) ExportToKML(_swig_args ...interface{}) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(string)
	}
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Geometry_ExportToKML_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), *(*C.swig_type_104)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGeometry) ExportToJson() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Geometry_ExportToJson_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGeometry) AddPoint(arg2 float64, arg3 float64, _swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg4 float64
	if len(_swig_args) > 0 {
		arg4 = _swig_args[0].(float64)
	}
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Geometry_AddPoint_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3))
	return
}

func (arg1 SwigcptrGeometry) AddPoint_2D(arg2 float64, arg3 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Geometry_AddPoint_2D_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
	return
}

func (arg1 SwigcptrGeometry) AddGeometryDirectly(arg2 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Geometry_AddGeometryDirectly_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) AddGeometry(arg2 Geometry) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Geometry_AddGeometry_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Clone() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Clone_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetGeometryType() (_swig_ret int) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_GetGeometryType_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGeometry) GetGeometryName() (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Geometry_GetGeometryName_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func (arg1 SwigcptrGeometry) Length() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Geometry_Length_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Area() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Geometry_Area_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetArea() (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Geometry_GetArea_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetPointCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_GetPointCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetX(_swig_args ...interface{}) (_swig_ret float64) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_Geometry_GetX_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrGeometry) GetY(_swig_args ...interface{}) (_swig_ret float64) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_Geometry_GetY_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrGeometry) GetZ(_swig_args ...interface{}) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_Geometry_GetZ_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetPoint(_swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 []float64
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]float64)
	}
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 *C.double

	_swig_i_2 = (*C.double)(unsafe.Pointer(&arg3[0]))

	C._wrap_Geometry_GetPoint_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrGeometry) GetPoint_2D(_swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var arg3 []float64
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]float64)
	}
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 *C.double

	_swig_i_2 = (*C.double)(unsafe.Pointer(&arg3[0]))

	C._wrap_Geometry_GetPoint_2D_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
	return
}

func (arg1 SwigcptrGeometry) GetGeometryCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_GetGeometryCount_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) SetPoint(arg2 int, arg3 float64, arg4 float64, _swig_args ...interface{}) (err error) {
	defer cpl.ErrorTrap()(&err)

	var arg5 float64
	if len(_swig_args) > 0 {
		arg5 = _swig_args[0].(float64)
	}
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Geometry_SetPoint_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), C.double(_swig_i_4))
	return
}

func (arg1 SwigcptrGeometry) SetPoint2D(arg2 int, arg3 float64, arg4 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Geometry_SetPoint_2D_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3))
	return
}

func (arg1 SwigcptrGeometry) GetGeometryRef(arg2 int) (_swig_ret Geometry) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_GetGeometryRef_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrGeometry) Simplify(arg2 float64) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Simplify_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) SimplifyPreserveTopology(arg2 float64) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_SimplifyPreserveTopology_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) DelaunayTriangulation(_swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	var arg3 int
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].(int)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_DelaunayTriangulation_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Boundary() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Boundary_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetBoundary() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_GetBoundary_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) ConvexHull() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_ConvexHull_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Buffer(arg2 float64, _swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Buffer_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Intersection(arg2 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Intersection_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Union(arg2 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Union_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) UnionCascaded() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_UnionCascaded_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Difference(arg2 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Difference_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) SymDifference(arg2 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_SymDifference_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) SymmetricDifference(arg2 Geometry) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_SymmetricDifference_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Distance(arg2 Geometry) (_swig_ret float64, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Geometry_Distance_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Empty() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Geometry_Empty_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrGeometry) IsEmpty() (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Geometry_IsEmpty_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) IsValid() (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Geometry_IsValid_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) IsSimple() (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Geometry_IsSimple_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) IsRing() (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Geometry_IsRing_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Intersects(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Intersects_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Intersect(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Intersect_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Equals(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Equals_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Equal(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Equal_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Disjoint(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Disjoint_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Touches(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Touches_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Crosses(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Crosses_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Within(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Within_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Contains(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Contains_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Overlaps(arg2 Geometry) (_swig_ret bool, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Geometry_Overlaps_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) TransformTo(arg2 osr.SpatialReference) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Geometry_TransformTo_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Transform(arg2 osr.CoordinateTransformation) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_Geometry_Transform_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetSpatialReference() (_swig_ret osr.SpatialReference, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r osr.SpatialReference
	_swig_i_0 := arg1
	swig_r = (osr.SpatialReference)(osr.SwigcptrSpatialReference(C._wrap_Geometry_GetSpatialReference_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) AssignSpatialReference(arg2 osr.SpatialReference) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Geometry_AssignSpatialReference_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	return
}

func (arg1 SwigcptrGeometry) CloseRings() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Geometry_CloseRings_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrGeometry) FlattenTo2D() (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_Geometry_FlattenTo2D_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))
	return
}

func (arg1 SwigcptrGeometry) Segmentize(arg2 float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Geometry_Segmentize_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
	return
}

func (arg1 SwigcptrGeometry) GetEnvelope(arg2 []float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	C._wrap_Geometry_GetEnvelope_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
	return
}

func (arg1 SwigcptrGeometry) GetEnvelope3D(arg2 []float64) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	var _swig_i_1 *C.double

	_swig_i_1 = (*C.double)(unsafe.Pointer(&arg2[0]))

	C._wrap_Geometry_GetEnvelope3D_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
	return
}

func (arg1 SwigcptrGeometry) Centroid() (_swig_ret Geometry) {
	cpl.ErrorReset()
	defer func() {
		if err := cpl.LastError(); err != nil {
			panic(err)
		}
	}()

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Centroid_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrGeometry) PointOnSurface() (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_PointOnSurface_ogr_83306ddead628923(C.uintptr_t(_swig_i_0))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) WkbSize() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_WkbSize_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetCoordinateDimension() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_GetCoordinateDimension_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) SetCoordinateDimension(arg2 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Geometry_SetCoordinateDimension_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	return
}

func (arg1 SwigcptrGeometry) GetDimension() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Geometry_GetDimension_ogr_83306ddead628923(C.uintptr_t(_swig_i_0)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) HasCurveGeometry(_swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Geometry_HasCurveGeometry_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetLinearGeometry(_swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	var arg3 []string
	if len(_swig_args) > 1 {
		arg3 = _swig_args[1].([]string)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	var _swig_i_2 **C.char

	arg3_l := len(arg3)
	_swig_i_2_i := make([]*C.char, arg3_l+1)
	for i := 0; i < arg3_l; i++ {
		_swig_i_2_i[i] = C.CString(arg3[i])
		defer C.free(unsafe.Pointer(_swig_i_2_i[i]))
	}
	_swig_i_2_i[arg3_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_2 = &_swig_i_2_i[0]

	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_GetLinearGeometry_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_voidp(_swig_i_2))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) GetCurveGeometry(_swig_args ...interface{}) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 []string
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].([]string)
	}
	var swig_r Geometry
	_swig_i_0 := arg1
	var _swig_i_1 **C.char

	arg2_l := len(arg2)
	_swig_i_1_i := make([]*C.char, arg2_l+1)
	for i := 0; i < arg2_l; i++ {
		_swig_i_1_i[i] = C.CString(arg2[i])
		defer C.free(unsafe.Pointer(_swig_i_1_i[i]))
	}
	_swig_i_1_i[arg2_l] = (*C.char)(unsafe.Pointer(nil))
	_swig_i_1 = &_swig_i_1_i[0]

	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_GetCurveGeometry_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))))
	return swig_r, err

}

func (arg1 SwigcptrGeometry) Value(arg2 float64) (_swig_ret Geometry, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r Geometry
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Geometry)(SwigcptrGeometry(C._wrap_Geometry_Value_ogr_83306ddead628923(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r, err

}

type Geometry interface {
	Swigcptr() uintptr
	SwigIsGeometry()
	ExportToWkt(arg2 *string) (_swig_ret int, err error,

	)
	ExportToIsoWkt(arg2 *string) (_swig_ret int, err error,

	)
	ExportToWkb(arg2 *int, arg3 *string, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	ExportToIsoWkb(arg2 *int, arg3 *string, _swig_args ...interface{}) (_swig_ret int, err error,

	)
	ExportToGML() (_swig_ret string, err error,

	)
	ExportToKML(_swig_args ...interface{}) (_swig_ret string, err error,

	)
	ExportToJson() (_swig_ret string, err error,

	)
	AddPoint(arg2 float64, arg3 float64, _swig_args ...interface{}) (err error)

	AddPoint_2D(arg2 float64, arg3 float64) (err error)

	AddGeometryDirectly(arg2 Geometry) (_swig_ret int, err error,

	)
	AddGeometry(arg2 Geometry) (_swig_ret int, err error,

	)
	Clone() (_swig_ret Geometry, err error,

	)
	GetGeometryType() (_swig_ret int)
	GetGeometryName() (_swig_ret string, err error,

	)
	Length() (_swig_ret float64, err error,

	)
	Area() (_swig_ret float64, err error,

	)
	GetArea() (_swig_ret float64, err error,

	)
	GetPointCount() (_swig_ret int, err error,

	)
	GetX(_swig_args ...interface{}) (_swig_ret float64)
	GetY(_swig_args ...interface{}) (_swig_ret float64)
	GetZ(_swig_args ...interface{}) (_swig_ret float64, err error,

	)
	GetPoint(_swig_args ...interface{}) (err error)

	GetPoint_2D(_swig_args ...interface{}) (err error)

	GetGeometryCount() (_swig_ret int, err error,

	)
	SetPoint(arg2 int, arg3 float64, arg4 float64, _swig_args ...interface{}) (err error)
	SetPoint2D(arg2 int, arg3 float64, arg4 float64) (err error)

	GetGeometryRef(arg2 int) (_swig_ret Geometry)
	Simplify(arg2 float64) (_swig_ret Geometry, err error,

	)
	SimplifyPreserveTopology(arg2 float64) (_swig_ret Geometry, err error,

	)
	DelaunayTriangulation(_swig_args ...interface{}) (_swig_ret Geometry, err error,

	)
	Boundary() (_swig_ret Geometry, err error,

	)
	GetBoundary() (_swig_ret Geometry, err error,

	)
	ConvexHull() (_swig_ret Geometry, err error,

	)
	Buffer(arg2 float64, _swig_args ...interface{}) (_swig_ret Geometry, err error,

	)
	Intersection(arg2 Geometry) (_swig_ret Geometry, err error,

	)
	Union(arg2 Geometry) (_swig_ret Geometry, err error,

	)
	UnionCascaded() (_swig_ret Geometry, err error,

	)
	Difference(arg2 Geometry) (_swig_ret Geometry, err error,

	)
	SymDifference(arg2 Geometry) (_swig_ret Geometry, err error,

	)
	SymmetricDifference(arg2 Geometry) (_swig_ret Geometry, err error,

	)
	Distance(arg2 Geometry) (_swig_ret float64, err error,

	)
	Empty() (err error)

	IsEmpty() (_swig_ret bool, err error,

	)
	IsValid() (_swig_ret bool, err error,

	)
	IsSimple() (_swig_ret bool, err error,

	)
	IsRing() (_swig_ret bool, err error,

	)
	Intersects(arg2 Geometry) (_swig_ret bool, err error,

	)
	Intersect(arg2 Geometry) (_swig_ret bool, err error,

	)
	Equals(arg2 Geometry) (_swig_ret bool, err error,

	)
	Equal(arg2 Geometry) (_swig_ret bool, err error,

	)
	Disjoint(arg2 Geometry) (_swig_ret bool, err error,

	)
	Touches(arg2 Geometry) (_swig_ret bool, err error,

	)
	Crosses(arg2 Geometry) (_swig_ret bool, err error,

	)
	Within(arg2 Geometry) (_swig_ret bool, err error,

	)
	Contains(arg2 Geometry) (_swig_ret bool, err error,

	)
	Overlaps(arg2 Geometry) (_swig_ret bool, err error,

	)
	TransformTo(arg2 osr.SpatialReference) (_swig_ret int, err error,

	)
	Transform(arg2 osr.CoordinateTransformation) (_swig_ret int, err error,

	)
	GetSpatialReference() (_swig_ret osr.SpatialReference, err error,

	)
	AssignSpatialReference(arg2 osr.SpatialReference) (err error)

	CloseRings() (err error)

	FlattenTo2D() (err error)

	Segmentize(arg2 float64) (err error)

	GetEnvelope(arg2 []float64) (err error)

	GetEnvelope3D(arg2 []float64) (err error)

	Centroid() (_swig_ret Geometry)
	PointOnSurface() (_swig_ret Geometry, err error,

	)
	WkbSize() (_swig_ret int, err error,

	)
	GetCoordinateDimension() (_swig_ret int, err error,

	)
	SetCoordinateDimension(arg2 int) (err error)

	GetDimension() (_swig_ret int, err error,

	)
	HasCurveGeometry(_swig_args ...interface{}) (_swig_ret int, err error,

	)
	GetLinearGeometry(_swig_args ...interface{}) (_swig_ret Geometry, err error,

	)
	GetCurveGeometry(_swig_args ...interface{}) (_swig_ret Geometry, err error,

	)
	Value(arg2 float64) (_swig_ret Geometry, err error,

	)
}

func OGRGetDriverCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	swig_r = (int)(C._wrap_OGRGetDriverCount_ogr_83306ddead628923())
	return swig_r, err

}

func OGRGetOpenDSCount() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	swig_r = (int)(C._wrap_OGRGetOpenDSCount_ogr_83306ddead628923())
	return swig_r, err

}

func OGRSetGenerate_DB2_V72_BYTE_ORDER(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_OGRSetGenerate_DB2_V72_BYTE_ORDER_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GeometryTypeToName(arg1 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GeometryTypeToName_ogr_83306ddead628923(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GetFieldTypeName(arg1 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetFieldTypeName_ogr_83306ddead628923(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GetFieldSubTypeName(arg1 int) (_swig_ret string, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetFieldSubTypeName_ogr_83306ddead628923(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1, err

}

func GT_Flatten(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_Flatten_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_SetZ(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_SetZ_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_SetModifier(arg1 int, arg2 int, _swig_args ...interface{}) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg3 int
	if len(_swig_args) > 0 {
		arg3 = _swig_args[0].(int)
	}
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_GT_SetModifier_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r, err

}

func GT_HasZ(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_HasZ_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_IsSubClassOf(arg1 int, arg2 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_GT_IsSubClassOf_ogr_83306ddead628923(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r, err

}

func GT_IsCurve(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_IsCurve_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_IsSurface(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_IsSurface_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_IsNonLinear(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_IsNonLinear_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_GetCollection(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_GetCollection_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_GetCurve(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_GetCurve_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func GT_GetLinear(arg1 int) (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GT_GetLinear_ogr_83306ddead628923(C.swig_intgo(_swig_i_0)))
	return swig_r, err

}

func SetNonLinearGeometriesEnabledFlag(arg1 int) (err error) {
	defer cpl.ErrorTrap()(&err)

	_swig_i_0 := arg1
	C._wrap_SetNonLinearGeometriesEnabledFlag_ogr_83306ddead628923(C.swig_intgo(_swig_i_0))
	return
}

func GetNonLinearGeometriesEnabledFlag() (_swig_ret int, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r int
	swig_r = (int)(C._wrap_GetNonLinearGeometriesEnabledFlag_ogr_83306ddead628923())
	return swig_r, err

}

func GetOpenDS(arg1 int) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var swig_r DataSource
	_swig_i_0 := arg1
	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_GetOpenDS_ogr_83306ddead628923(C.swig_intgo(_swig_i_0))))
	return swig_r, err

}

func Open(arg1 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r DataSource
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_Open_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), *(*C.swig_type_110)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

func OpenShared(arg1 string, _swig_args ...interface{}) (_swig_ret DataSource, err error,

) {
	defer cpl.ErrorTrap()(&err)

	var arg2 int
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(int)
	}
	var swig_r DataSource
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DataSource)(SwigcptrDataSource(C._wrap_OpenShared_ogr_83306ddead628923(C.swig_intgo(len(_swig_args)), *(*C.swig_type_111)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r, err

}

type SwigcptrGIntBig uintptr
type GIntBig interface {
	Swigcptr() uintptr
}

func (p SwigcptrGIntBig) Swigcptr() uintptr {
	return uintptr(p)
}
