/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ../include/go/cpl_go.i

package cpl

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _gostring_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef long long swig_type_40;
typedef long long swig_type_41;
typedef long long swig_type_42;
typedef long long swig_type_43;
typedef long long swig_type_44;
typedef long long swig_type_45;
typedef long long swig_type_46;
typedef long long swig_type_47;
typedef long long swig_type_48;
typedef _gostring_ swig_type_49;
extern void _wrap_Swig_free_cpl_47a89855fc1adaf7(uintptr_t arg1);

// "cpl_string.h" is needed to declare CSLDestroy.
#include "cpl_string.h"

// We need to link against GDAL when building the Go module.
#cgo LDFLAGS: -lgdal

extern void _wrap_Debug_cpl_47a89855fc1adaf7(swig_type_1 arg1, swig_type_2 arg2);
extern swig_intgo _wrap_SetErrorHandler_cpl_47a89855fc1adaf7(CPLErrorHandler arg1, swig_voidp arg2);
extern swig_intgo _wrap_PushErrorHandler_cpl_47a89855fc1adaf7(CPLErrorHandler arg1, swig_voidp arg2);
extern void _wrap_Error_cpl_47a89855fc1adaf7(swig_intgo arg1, swig_intgo arg2, swig_type_3 arg3);
extern swig_type_4 _wrap_GOA2GetAuthorizationURL_cpl_47a89855fc1adaf7(swig_type_5 arg1);
extern swig_type_6 _wrap_GOA2GetRefreshToken_cpl_47a89855fc1adaf7(swig_type_7 arg1, swig_type_8 arg2);
extern swig_type_9 _wrap_GOA2GetAccessToken_cpl_47a89855fc1adaf7(swig_type_10 arg1, swig_type_11 arg2);
extern void _wrap_PopErrorHandler_cpl_47a89855fc1adaf7(void);
extern void _wrap_ErrorReset_cpl_47a89855fc1adaf7(void);
extern swig_type_12 _wrap_EscapeString__SWIG_0_cpl_47a89855fc1adaf7(swig_intgo arg1, swig_type_13 arg2, swig_intgo arg3);
extern swig_type_14 _wrap_EscapeString__SWIG_1_cpl_47a89855fc1adaf7(swig_intgo arg1, swig_type_15 arg2);
extern swig_intgo _wrap_GetLastErrorNo_cpl_47a89855fc1adaf7(void);
extern swig_intgo _wrap_GetLastErrorType_cpl_47a89855fc1adaf7(void);
extern swig_type_16 _wrap_GetLastErrorMsg_cpl_47a89855fc1adaf7(void);
extern void _wrap_PushFinderLocation_cpl_47a89855fc1adaf7(swig_type_17 arg1);
extern void _wrap_PopFinderLocation_cpl_47a89855fc1adaf7(void);
extern void _wrap_FinderClean_cpl_47a89855fc1adaf7(void);
extern swig_type_18 _wrap_FindFile_cpl_47a89855fc1adaf7(swig_type_19 arg1, swig_type_20 arg2);
extern swig_voidp _wrap_ReadDir_cpl_47a89855fc1adaf7(swig_type_21 arg1);
extern swig_voidp _wrap_ReadDirRecursive_cpl_47a89855fc1adaf7(swig_type_22 arg1);
extern void _wrap_SetConfigOption_cpl_47a89855fc1adaf7(swig_type_23 arg1, swig_type_24 arg2);
extern swig_type_25 _wrap_GetConfigOption__SWIG_0_cpl_47a89855fc1adaf7(swig_type_26 arg1, swig_type_27 arg2);
extern swig_type_28 _wrap_GetConfigOption__SWIG_1_cpl_47a89855fc1adaf7(swig_type_29 arg1);
extern swig_type_30 _wrap_CPLBinaryToHex_cpl_47a89855fc1adaf7(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_CPLHexToBinary_cpl_47a89855fc1adaf7(swig_type_31 arg1, swig_voidp arg2);
extern void _wrap_FileFromMemBuffer_cpl_47a89855fc1adaf7(swig_type_32 arg1, swig_intgo arg2, uintptr_t arg3);
extern swig_intgo _wrap_Unlink_cpl_47a89855fc1adaf7(swig_type_33 arg1);
extern swig_intgo _wrap_HasThreadSupport_cpl_47a89855fc1adaf7(void);
extern swig_intgo _wrap_Mkdir_cpl_47a89855fc1adaf7(swig_type_34 arg1, swig_intgo arg2);
extern swig_intgo _wrap_Rmdir_cpl_47a89855fc1adaf7(swig_type_35 arg1);
extern swig_intgo _wrap_Rename_cpl_47a89855fc1adaf7(swig_type_36 arg1, swig_type_37 arg2);
extern uintptr_t _wrap_VSIFOpenL_cpl_47a89855fc1adaf7(swig_type_38 arg1, swig_type_39 arg2);
extern swig_intgo _wrap_VSIFCloseL_cpl_47a89855fc1adaf7(uintptr_t arg1);
extern swig_intgo _wrap_VSIFSeekL_cpl_47a89855fc1adaf7(uintptr_t arg1, swig_type_40 arg2, swig_intgo arg3);
extern swig_type_41 _wrap_VSIFTellL_cpl_47a89855fc1adaf7(uintptr_t arg1);
extern swig_intgo _wrap_VSIFTruncateL_cpl_47a89855fc1adaf7(uintptr_t arg1, swig_type_42 arg2);
extern swig_intgo _wrap_VSIFEofL_cpl_47a89855fc1adaf7(uintptr_t arg1);
extern swig_type_43 _wrap_VSIFWriteL_cpl_47a89855fc1adaf7(swig_voidp arg1, swig_type_44 arg2, swig_type_45 arg3, uintptr_t arg4);
extern swig_type_46 _wrap_VSIFReadL_cpl_47a89855fc1adaf7(swig_voidp arg1, swig_type_47 arg2, swig_type_48 arg3, uintptr_t arg4);
extern swig_voidp _wrap_ParseCommandLine_cpl_47a89855fc1adaf7(swig_type_49 arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p	uintptr
	n	int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0))
}

func Debug(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Debug_cpl_47a89855fc1adaf7(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func SetErrorHandler(arg1 ErrorHandler, arg2 interface{}) (_swig_ret int) {
	var swig_r int
	var _swig_i_0 C.CPLErrorHandler

	var handler ErrorHandler
	if arg1 != nil {
		handler = arg1
		_swig_i_0 = C.CPLErrorHandler(CPLErrorHandler())
	}

	var _swig_i_1 unsafe.Pointer

	if handler != nil {
		_swig_i_1 = NewErrorHandler(handler, arg2)
	}

	swig_r = (int)(C._wrap_SetErrorHandler_cpl_47a89855fc1adaf7(C.CPLErrorHandler(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func PushErrorHandler(arg1 ErrorHandler, arg2 interface{}) (_swig_ret int) {
	var swig_r int
	var _swig_i_0 C.CPLErrorHandler

	var handler ErrorHandler
	if arg1 != nil {
		handler = arg1
		_swig_i_0 = C.CPLErrorHandler(CPLErrorHandler())
	}

	var _swig_i_1 unsafe.Pointer

	if handler != nil {
		_swig_i_1 = NewErrorHandler(handler, arg2)
	}

	swig_r = (int)(C._wrap_PushErrorHandler_cpl_47a89855fc1adaf7(C.CPLErrorHandler(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func wrap_Error(arg1 int, arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Error_cpl_47a89855fc1adaf7(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func GOA2GetAuthorizationURL(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GOA2GetAuthorizationURL_cpl_47a89855fc1adaf7(*(*C.swig_type_5)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GOA2GetRefreshToken(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_GOA2GetRefreshToken_cpl_47a89855fc1adaf7(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GOA2GetAccessToken(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_GOA2GetAccessToken_cpl_47a89855fc1adaf7(*(*C.swig_type_10)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func PopErrorHandler() {
	C._wrap_PopErrorHandler_cpl_47a89855fc1adaf7()
}

func ErrorReset() {
	C._wrap_ErrorReset_cpl_47a89855fc1adaf7()
}

func EscapeString__SWIG_0(arg1 int, arg2 string, arg3 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_EscapeString__SWIG_0_cpl_47a89855fc1adaf7(C.swig_intgo(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func EscapeString__SWIG_1(arg1 int, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_EscapeString__SWIG_1_cpl_47a89855fc1adaf7(C.swig_intgo(_swig_i_0), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func EscapeString(a ...interface{}) string {
	argc := len(a)
	if argc == 2 {
		return EscapeString__SWIG_1(a[0].(int), a[1].(string))
	}
	if argc == 3 {
		return EscapeString__SWIG_0(a[0].(int), a[1].(string), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func GetLastErrorNo() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetLastErrorNo_cpl_47a89855fc1adaf7())
	return swig_r
}

func GetLastErrorType() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetLastErrorType_cpl_47a89855fc1adaf7())
	return swig_r
}

func GetLastErrorMsg() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GetLastErrorMsg_cpl_47a89855fc1adaf7()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func PushFinderLocation(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_PushFinderLocation_cpl_47a89855fc1adaf7(*(*C.swig_type_17)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PopFinderLocation() {
	C._wrap_PopFinderLocation_cpl_47a89855fc1adaf7()
}

func FinderClean() {
	C._wrap_FinderClean_cpl_47a89855fc1adaf7()
}

func FindFile(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FindFile_cpl_47a89855fc1adaf7(*(*C.swig_type_19)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func wrap_ReadDir(arg1 string) (_swig_ret []string) {
	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_ReadDir_cpl_47a89855fc1adaf7(*(*C.swig_type_21)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1
}

func ReadDirRecursive(arg1 string) (_swig_ret []string) {
	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_ReadDirRecursive_cpl_47a89855fc1adaf7(*(*C.swig_type_22)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1
}

func SetConfigOption(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetConfigOption_cpl_47a89855fc1adaf7(*(*C.swig_type_23)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func GetConfigOption__SWIG_0(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_GetConfigOption__SWIG_0_cpl_47a89855fc1adaf7(*(*C.swig_type_26)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GetConfigOption__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetConfigOption__SWIG_1_cpl_47a89855fc1adaf7(*(*C.swig_type_29)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GetConfigOption(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return GetConfigOption__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return GetConfigOption__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func CPLBinaryToHex(arg1 int, arg2 GByte) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r_p := C._wrap_CPLBinaryToHex_cpl_47a89855fc1adaf7(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func CPLHexToBinary(arg1 string, arg2 *int) (_swig_ret GByte) {
	var swig_r GByte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GByte)(SwigcptrGByte(C._wrap_CPLHexToBinary_cpl_47a89855fc1adaf7(*(*C.swig_type_31)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func FileFromMemBuffer(arg1 string, arg2 int, arg3 GByte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_FileFromMemBuffer_cpl_47a89855fc1adaf7(*(*C.swig_type_32)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func Unlink(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Unlink_cpl_47a89855fc1adaf7(*(*C.swig_type_33)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func HasThreadSupport() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_HasThreadSupport_cpl_47a89855fc1adaf7())
	return swig_r
}

func Mkdir(arg1 string, arg2 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Mkdir_cpl_47a89855fc1adaf7(*(*C.swig_type_34)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Rmdir(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Rmdir_cpl_47a89855fc1adaf7(*(*C.swig_type_35)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Rename(arg1 string, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_Rename_cpl_47a89855fc1adaf7(*(*C.swig_type_36)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func VSIFOpenL(arg1 string, arg2 string) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_VSIFOpenL_cpl_47a89855fc1adaf7(*(*C.swig_type_38)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_39)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func VSIFCloseL(arg1 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_VSIFCloseL_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func VSIFSeekL(arg1 uintptr, arg2 int64, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_VSIFSeekL_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0), C.swig_type_40(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func VSIFTellL(arg1 uintptr) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VSIFTellL_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func VSIFTruncateL(arg1 uintptr, arg2 int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_VSIFTruncateL_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0), C.swig_type_42(_swig_i_1)))
	return swig_r
}

func VSIFEofL(arg1 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_VSIFEofL_cpl_47a89855fc1adaf7(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func VSIFWriteL(arg1 []byte, arg2 int64, arg3 int64, arg4 uintptr) (_swig_ret int64) {
	var swig_r int64
	var _swig_i_0 *C.char

	_swig_i_0 = (*C.char)(unsafe.Pointer(&arg1[0]))

	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_VSIFWriteL_cpl_47a89855fc1adaf7(C.swig_voidp(_swig_i_0), C.swig_type_44(_swig_i_1), C.swig_type_45(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func VSIFReadL(arg1 []byte, arg2 int64, arg3 int64, arg4 uintptr) (_swig_ret int64) {
	var swig_r int64
	var _swig_i_0 *C.char

	_swig_i_0 = (*C.char)(unsafe.Pointer(&arg1[0]))

	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_VSIFReadL_cpl_47a89855fc1adaf7(C.swig_voidp(_swig_i_0), C.swig_type_47(_swig_i_1), C.swig_type_48(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func ParseCommandLine(arg1 string) (_swig_ret []string) {
	var swig_r **C.char
	_swig_i_0 := arg1
	swig_r = (**C.char)(C._wrap_ParseCommandLine_cpl_47a89855fc1adaf7(*(*C.swig_type_49)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 []string

	if swig_r != nil {
		defer C.CSLDestroy(swig_r)
		swig_r_p := swig_r
		swig_r_q := uintptr(unsafe.Pointer(swig_r_p))
		for {
			swig_r_p = (**C.char)(unsafe.Pointer(swig_r_q))
			if *swig_r_p == nil {
				break
			}
			swig_r_1 = append(swig_r_1, C.GoString(*swig_r_p))
			swig_r_q += unsafe.Sizeof(swig_r_q)
		}
	}

	return swig_r_1
}

type SwigcptrGByte uintptr
type GByte interface {
	Swigcptr() uintptr
}

func (p SwigcptrGByte) Swigcptr() uintptr {
	return uintptr(p)
}
